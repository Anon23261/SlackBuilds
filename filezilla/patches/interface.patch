diff -Naupr a/locales/filezilla.pot b/locales/filezilla.pot
--- a/locales/filezilla.pot	2020-02-16 17:27:11.000000000 +0100
+++ b/locales/filezilla.pot	2020-02-22 05:30:32.000000000 +0100
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: https://trac.filezilla-project.org/\n"
-"POT-Creation-Date: 2020-02-16 17:27+0100\n"
+"POT-Creation-Date: 2020-02-22 05:30+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -47,8 +47,8 @@ msgstr[0] ""
 msgstr[1] ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1431
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1265
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1666
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1266
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1667
 #, c-format
 msgid "%d directory with its contents"
 msgid_plural "%d directories with their contents"
@@ -58,8 +58,8 @@ msgstr[1] ""
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1430
 #: ../../../source/FileZilla3/locales/../src/interface/filelist_statusbar.cpp:50
 #: ../../../source/FileZilla3/locales/../src/interface/filelist_statusbar.cpp:75
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1264
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1665
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1265
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1666
 #, c-format
 msgid "%d file"
 msgid_plural "%d files"
@@ -182,11 +182,11 @@ msgstr ""
 msgid "%w - Proxy password"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1271
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1274
 msgid "&AWS S3 encryption"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2634
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2284
 msgid "&Abort previous connection and connect in current tab"
 msgstr ""
 
@@ -204,14 +204,14 @@ msgstr ""
 msgid "&Account ID:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1993
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1643
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:130
 msgid "&Account:"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/netconfwizard.xrc:80
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:153
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1162
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1164
 msgid "&Active"
 msgstr ""
 
@@ -219,7 +219,7 @@ msgstr ""
 msgid "&Add bookmark..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2971
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2621
 msgid "&Add directory..."
 msgstr ""
 
@@ -254,11 +254,11 @@ msgstr ""
 msgid "&Always trust this host, add this key to the cache"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1760
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1329
 msgid "&Always use default editor"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2308
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1958
 msgid "&Always use selection for unassociated files"
 msgstr ""
 
@@ -270,13 +270,13 @@ msgstr ""
 msgid "&Ask your operating system for the external IP address"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:999
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:762
 #: ../../../source/FileZilla3/locales/../src/interface/menu_bar.cpp:118
 #: ../../../source/FileZilla3/locales/../src/interface/statusbar.cpp:562
 msgid "&Auto"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1073
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1075
 msgid "&Autodetect"
 msgstr ""
 
@@ -284,13 +284,13 @@ msgstr ""
 msgid "&Background color:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1014
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:777
 #: ../../../source/FileZilla3/locales/../src/interface/menu_bar.cpp:120
 #: ../../../source/FileZilla3/locales/../src/interface/statusbar.cpp:564
 msgid "&Binary"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1423
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:30
 msgid "&Binary prefixes using SI symbols. (e.g. 1 KB = 1024 bytes)"
 msgstr ""
 
@@ -298,24 +298,24 @@ msgstr ""
 msgid "&Bookmarks"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1766
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2177
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2295
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2365
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1732
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1947
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1416
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1827
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1945
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2015
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1301
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1516
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:298
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:931
 msgid "&Browse..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:900
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:67
 msgid "&Burst tolerance:"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:486
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2761
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2863
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2411
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2513
 #: ../../../source/FileZilla3/locales/../src/interface/settings/settingsdialog.cpp:75
 #: ../../../source/FileZilla3/locales/../src/interface/verifycertdialog.cpp:784
 #: ../../../source/FileZilla3/locales/../src/interface/inputdialog.cpp:31
@@ -326,7 +326,7 @@ msgstr ""
 msgid "&Clear private data..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:92
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:93
 msgid "&Close"
 msgstr ""
 
@@ -374,11 +374,11 @@ msgstr ""
 msgid "&Debug"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2036
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1605
 msgid "&Debug information in message log:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1702
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1271
 msgid "&Default editor:"
 msgstr ""
 
@@ -391,19 +391,22 @@ msgstr ""
 msgid "&Delay between failed login attempts:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:530
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:699
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:823
 #: ../../../source/FileZilla3/locales/../src/interface/LocalTreeView.cpp:1121
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:274
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:355
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:100
 msgid "&Delete"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2557
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2207
 msgid "&Delete symlink"
 msgstr ""
 
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:143
+msgid "&Delete..."
+msgstr ""
+
 #: ../../../source/FileZilla3/locales/../src/interface/menu_bar.cpp:74
 msgid "&Directory access permissions..."
 msgstr ""
@@ -422,7 +425,7 @@ msgid ""
 "&Disable synchronized browsing and continue changing the remote directory"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1289
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:939
 msgid "&Discard local file then download and edit file anew"
 msgstr ""
 
@@ -434,7 +437,7 @@ msgstr ""
 msgid "&Display momentary transfer speed instead of average speed"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1410
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:28
 msgid "&Display size in bytes"
 msgstr ""
 
@@ -446,7 +449,7 @@ msgstr ""
 msgid "&Don't use external IP address on local connections."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1617
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1186
 msgid "&Double-click action on files:"
 msgstr ""
 
@@ -455,25 +458,29 @@ msgstr ""
 msgid "&Download"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2351
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2001
 msgid "&Download to:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1215
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1216
 msgid "&Download..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:866
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1124
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:516
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:887
 msgid "&Downloads:"
 msgstr ""
 
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:102
+msgid "&Duplicate"
+msgstr ""
+
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:815
 #: ../../../source/FileZilla3/locales/../src/interface/menu_bar.cpp:68
 msgid "&Edit"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:626
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:193
 msgid "&Edit filter rules..."
 msgstr ""
 
@@ -488,12 +495,12 @@ msgstr ""
 msgid "&Enable compression"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2689
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:841
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2339
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:46
 msgid "&Enable speed limits"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1083
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1085
 msgid "&Encoding:"
 msgstr ""
 
@@ -505,7 +512,7 @@ msgstr ""
 msgid "&Enter custom command..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2627
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2277
 msgid "&Establish connection in a new tab"
 msgstr ""
 
@@ -513,7 +520,7 @@ msgstr ""
 msgid "&Execute"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1040
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:690
 msgid "&Export Site Manager entries"
 msgstr ""
 
@@ -538,43 +545,43 @@ msgstr ""
 msgid "&File permissions..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1754
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1404
 msgid "&File:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:751
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:119
 msgid "&Filter conditions:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:507
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:137
 msgid "&Filter sets:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1115
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:765
 msgid "&Filters"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:677
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:91
 msgid "&Filters:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1228
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:878
 msgid "&Finish editing and delete local file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2482
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2132
 msgid ""
 "&Flatten local paths, upload all contained files directly into target "
 "directory"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2387
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2037
 msgid ""
 "&Flatten remote paths, download all contained files directly into target "
 "directory"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2564
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2214
 msgid "&Follow symlink, delete target directory contents"
 msgstr ""
 
@@ -586,7 +593,7 @@ msgstr ""
 msgid "&Getting help..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2106
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1756
 msgid "&Global bookmark"
 msgstr ""
 
@@ -611,18 +618,18 @@ msgstr ""
 msgid "&Highest available port:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1901
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1551
 #: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:42
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:88
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:385
 msgid "&Host:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1418
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:29
 msgid "&IEC binary prefixes (e.g. 1 KiB = 1024 bytes)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1304
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:990
 msgid "&ISO 8601 (example: 2007-09-15)"
 msgstr ""
 
@@ -630,19 +637,19 @@ msgstr ""
 msgid "&Import..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1793
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1362
 msgid "&Inherit system's filetype associations"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:167
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:172
 msgid "&Install new version"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2475
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2125
 msgid "&Keep local path structure relative to search root"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2380
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2030
 msgid "&Keep remote path structure relative to search root"
 msgstr ""
 
@@ -658,7 +665,7 @@ msgstr ""
 msgid "&Limit local ports used by FileZilla"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1166
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1168
 msgid "&Limit number of simultaneous connections"
 msgstr ""
 
@@ -666,12 +673,12 @@ msgstr ""
 msgid "&Local directory tree"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2162
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1812
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:292
 msgid "&Local directory:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1924
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1493
 msgid "&Log to file"
 msgstr ""
 
@@ -679,7 +686,7 @@ msgstr ""
 msgid "&Logon Type:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1956
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1606
 msgid "&Logontype:"
 msgstr ""
 
@@ -695,7 +702,7 @@ msgstr ""
 msgid "&Manual transfer..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1170
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1172
 msgid "&Maximum number of connections:"
 msgstr ""
 
@@ -711,11 +718,11 @@ msgstr ""
 msgid "&Minimize to tray"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1544
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1113
 msgid "&Name sorting mode:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2133
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1783
 msgid "&Name:"
 msgstr ""
 
@@ -723,7 +730,7 @@ msgstr ""
 msgid "&Network configuration wizard..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:693
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:99
 msgid "&New"
 msgstr ""
 
@@ -739,8 +746,8 @@ msgstr ""
 msgid "&Next >"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1241
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1364
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:891
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1014
 msgid "&No"
 msgstr ""
 
@@ -781,7 +788,7 @@ msgstr ""
 msgid "&Overwrite"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1163
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1165
 msgid "&Passive"
 msgstr ""
 
@@ -793,8 +800,8 @@ msgstr ""
 msgid "&Play sound"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1914
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:55
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1564
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:58
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:93
 msgid "&Port:"
 msgstr ""
@@ -803,11 +810,11 @@ msgstr ""
 msgid "&Preserve timestamps of transferred files"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1109
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:759
 msgid "&Queue"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:63
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:66
 msgid "&Quickconnect"
 msgstr ""
 
@@ -815,7 +822,7 @@ msgstr ""
 msgid "&Quickconnect bar"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:973
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:623
 msgid "&Quickconnect history"
 msgstr ""
 
@@ -827,7 +834,7 @@ msgstr ""
 msgid "&Reconnect"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:980
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:630
 msgid "&Reconnect information"
 msgstr ""
 
@@ -844,16 +851,16 @@ msgstr ""
 msgid "&Remember password until FileZilla is closed"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2189
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1839
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:300
 msgid "&Remote directory:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1790
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1440
 msgid "&Remote path:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1062
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:825
 msgid "&Remove"
 msgstr ""
 
@@ -861,30 +868,30 @@ msgstr ""
 msgid "&Remove key"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2976
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2626
 #: ../../../source/FileZilla3/locales/../src/interface/QueueView.cpp:1798
 msgid "&Remove selected"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:705
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:824
 #: ../../../source/FileZilla3/locales/../src/interface/LocalTreeView.cpp:1122
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1078
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteTreeView.cpp:928
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:273
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:354
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:101
 msgid "&Rename"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:525
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:142
 msgid "&Rename..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1282
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:932
 msgid "&Reopen local file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:944
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:87
 msgid "&Replace invalid characters with:"
 msgstr ""
 
@@ -916,7 +923,7 @@ msgstr ""
 msgid "&Run configuration wizard now..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1886
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1455
 msgid "&Run update check now..."
 msgstr ""
 
@@ -928,7 +935,7 @@ msgstr ""
 msgid "&SOCKS 5"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:519
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:141
 msgid "&Save as..."
 msgstr ""
 
@@ -936,7 +943,7 @@ msgstr ""
 msgid "&Search remote files..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1280
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1283
 msgid "&Select a key:"
 msgstr ""
 
@@ -944,20 +951,20 @@ msgstr ""
 msgid "&Select entry:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1669
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1238
 msgid "&Select language:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1642
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1292
 msgid "&Select the columns that should be displayed:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1829
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1479
 #: ../../../source/FileZilla3/locales/../src/interface/menu_bar.cpp:136
 msgid "&Server"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1103
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:753
 msgid "&Settings"
 msgstr ""
 
@@ -965,7 +972,7 @@ msgstr ""
 msgid "&Settings..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2025
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1594
 msgid "&Show debug menu"
 msgstr ""
 
@@ -973,11 +980,11 @@ msgstr ""
 msgid "&Show detailed log"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1919
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1488
 msgid "&Show timestamps in message log"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:986
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:636
 msgid "&Site Manager entries"
 msgstr ""
 
@@ -985,7 +992,7 @@ msgstr ""
 msgid "&Site Manager..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2114
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1764
 msgid "&Site-specific bookmark"
 msgstr ""
 
@@ -997,8 +1004,8 @@ msgstr ""
 msgid "&Speed limits"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2398
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2493
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2048
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2143
 msgid "&Start transfer immediately"
 msgstr ""
 
@@ -1014,7 +1021,7 @@ msgstr ""
 msgid "&Test"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1222
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:138
 msgid "&Theme:"
 msgstr ""
 
@@ -1022,16 +1029,16 @@ msgstr ""
 msgid "&Transfer"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1158
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1160
 msgid "&Transfer mode:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:992
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:642
 #: ../../../source/FileZilla3/locales/../src/interface/menu_bar.cpp:105
 msgid "&Transfer queue"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1086
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:849
 msgid "&Treat dotfiles as ASCII files"
 msgstr ""
 
@@ -1039,7 +1046,7 @@ msgstr ""
 msgid "&Trust this certificate on the listed alternative hostnames."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1404
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1054
 msgid "&Unedit"
 msgstr ""
 
@@ -1052,20 +1059,20 @@ msgstr ""
 msgid "&Upload"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2452
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2102
 msgid "&Upload to:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1207
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1208
 msgid "&Upload..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:889
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1145
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:539
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:908
 msgid "&Uploads:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2283
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1933
 msgid "&Use custom program"
 msgstr ""
 
@@ -1073,7 +1080,7 @@ msgstr ""
 msgid "&Use synchronized browsing"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1713
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1282
 msgid "&Use system's default editor for text files"
 msgstr ""
 
@@ -1085,11 +1092,11 @@ msgstr ""
 msgid "&Use the server's external IP address instead"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1433
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:32
 msgid "&Use thousands separator"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1968
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1618
 #: ../../../source/FileZilla3/locales/../src/interface/loginmanager.cpp:228
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:118
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:388
@@ -1097,7 +1104,7 @@ msgstr ""
 msgid "&User:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:47
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:48
 msgid "&Username:"
 msgstr ""
 
@@ -1111,15 +1118,15 @@ msgid "&View"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1068
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1216
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1217
 msgid "&View/Edit"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1770
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1339
 msgid "&Watch locally edited files and prompt to upload modifications"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1862
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1431
 msgid "&When checking for updates, check for:"
 msgstr ""
 
@@ -1127,8 +1134,8 @@ msgstr ""
 msgid "&Write"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1235
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1358
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:885
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1008
 msgid "&Yes"
 msgstr ""
 
@@ -1181,13 +1188,13 @@ msgid_plural "(%d objects filtered)"
 msgstr[0] ""
 msgstr[1] ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:433
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:441
 #, c-format
 msgid "(%u%% downloaded)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:803
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:824
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:34
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:40
 msgid "(0 for no limit)"
 msgstr ""
 
@@ -1199,7 +1206,7 @@ msgstr ""
 msgid "(0-999 seconds)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:782
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:28
 msgid "(1-10)"
 msgstr ""
 
@@ -1213,18 +1220,18 @@ msgstr ""
 msgid "(app-compat is set to %d.%d)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1371
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1057
 msgid "(example: %H:%M)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1322
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1008
 msgid "(example: %Y-%m-%d)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2708
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2725
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:864
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:889
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2358
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2375
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:57
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:65
 #, c-format
 msgid "(in %s/s)"
 msgstr ""
@@ -1253,19 +1260,19 @@ msgstr ""
 msgid "-s cannot be used together with an FTP URL."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2046
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1615
 msgid "0 - None"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2047
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1616
 msgid "1 - Warning"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2048
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1617
 msgid "2 - Info"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2049
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1618
 msgid "3 - Verbose"
 msgstr ""
 
@@ -1273,7 +1280,7 @@ msgstr ""
 msgid "32-bit system"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2050
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1619
 msgid "4 - Debug"
 msgstr ""
 
@@ -1307,7 +1314,7 @@ msgid ""
 "and asks the server to connect to it."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1154
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:804
 msgid "A file previously opened has been changed."
 msgstr ""
 
@@ -1329,14 +1336,14 @@ msgid ""
 "No further warning will be displayed this session."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2844
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2494
 #: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_passwords.cpp:190
 msgid ""
 "A lost master password cannot be recovered! Please thoroughly memorize your "
 "password."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:149
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:152
 msgid "A new version of FileZilla is available:"
 msgstr ""
 
@@ -1358,17 +1365,17 @@ msgid ""
 "Disable synchronized browsing and continue changing the local directory?"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1007
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:770
 #: ../../../source/FileZilla3/locales/../src/interface/menu_bar.cpp:119
 #: ../../../source/FileZilla3/locales/../src/interface/statusbar.cpp:563
 msgid "A&SCII"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1055
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:818
 msgid "A&dd"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1192
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:955
 msgid "A&llow resume of ASCII files"
 msgstr ""
 
@@ -1388,11 +1395,11 @@ msgstr ""
 msgid "A&utomatically remove successful transfers"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2045
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1695
 msgid "ASCII"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1274
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1277
 msgid "AWS &KMS encryption"
 msgstr ""
 
@@ -1426,11 +1433,11 @@ msgstr ""
 msgid "Action after queue &completion"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1397
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1047
 msgid "Action on selected file:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1277
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:927
 msgid "Action to perform:"
 msgstr ""
 
@@ -1465,8 +1472,8 @@ msgstr ""
 msgid "Active mode IP"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2405
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2500
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2055
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2150
 msgid "Add files to &queue only"
 msgstr ""
 
@@ -1480,8 +1487,8 @@ msgstr ""
 msgid "Add selected files and folders to the transfer queue"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1625
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1645
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1194
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1214
 msgid "Add to queue"
 msgstr ""
 
@@ -1493,7 +1500,7 @@ msgstr ""
 msgid "Advanced"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1877
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1446
 msgid ""
 "Advice: Unless you want to test new features, please keep using stable "
 "versions only. Beta versions and nightly builds are development versions "
@@ -1502,12 +1509,12 @@ msgid ""
 "builds at your own risk."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2644
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2294
 msgid "Al&ways perform this action"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1476
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1522
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1126
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1172
 msgid "Algorithm:"
 msgstr ""
 
@@ -1534,7 +1541,7 @@ msgstr ""
 msgid "Allow fallback to other transfer mode on failure"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2604
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2254
 msgid "Already connected"
 msgstr ""
 
@@ -1556,7 +1563,7 @@ msgid ""
 "SSH_AUTH_SOCK environment variable is set."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:180
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:185
 msgid ""
 "Alternatively, you can also download the latest version from the FileZilla "
 "website:"
@@ -1599,11 +1606,11 @@ msgstr ""
 msgid "Any changes made in the Site Manager could not be saved."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:967
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:1033
 msgid "Any changes made to the filters could not be saved."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:876
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:942
 msgid "Any changes made to the filters will not be saved."
 msgstr ""
 
@@ -1616,7 +1623,7 @@ msgstr ""
 msgid "Application &Key:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:652
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:202
 msgid "Apply"
 msgstr ""
 
@@ -1628,7 +1635,7 @@ msgstr ""
 msgid "Apply to &files only"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:77
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:76
 msgid "Archive"
 msgstr ""
 
@@ -1640,10 +1647,10 @@ msgstr ""
 msgid "As tab in the transfer queue pane"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:874
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:897
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1131
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1152
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:524
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:547
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:894
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:915
 #: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_interface.cpp:159
 msgid "Ask for action"
 msgstr ""
@@ -1670,7 +1677,7 @@ msgstr ""
 msgid "Associated program not found:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:477
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:480
 msgid "At least one filter condition is incomplete"
 msgstr ""
 
@@ -1678,7 +1685,7 @@ msgstr ""
 msgid "At this point, all required information has been gathered."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:109
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:108
 msgid "Attribute"
 msgstr ""
 
@@ -1686,15 +1693,15 @@ msgstr ""
 msgid "Authentication failed."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1231
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:140
 msgid "Author:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2023
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1673
 msgid "Auto"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1025
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:788
 msgid "Automatic file type classification"
 msgstr ""
 
@@ -1724,7 +1731,7 @@ msgstr ""
 msgid "Being edited"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2050
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1700
 msgid "Binary"
 msgstr ""
 
@@ -1790,25 +1797,25 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1079
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteTreeView.cpp:929
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1223
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1224
 msgid "C&opy URL(s) to clipboard"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1080
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteTreeView.cpp:930
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1220
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1221
 msgid "C&opy URL(s) with password to clipboard"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1309
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:995
 msgid "C&ustom"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1285
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1288
 msgid "C&ustom KMS ARN:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1798
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1367
 msgid "C&ustom filetype associations:"
 msgstr ""
 
@@ -1839,28 +1846,28 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:64
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:256
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:365
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:646
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:834
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:941
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1012
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1070
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1135
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1309
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1694
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2076
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2231
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2325
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2422
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2517
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2587
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2662
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2925
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2996
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:591
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:662
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:720
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:785
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:959
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1344
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1726
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1881
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1975
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2072
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2167
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2237
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2312
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2575
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2646
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:283
 #: ../../../source/FileZilla3/locales/../src/interface/fileexistsdlg.cpp:99
 #: ../../../source/FileZilla3/locales/../src/interface/loginmanager.cpp:124
 #: ../../../source/FileZilla3/locales/../src/interface/loginmanager.cpp:266
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:370
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:201
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:143
 msgid "Cancel"
 msgstr ""
 
@@ -1903,15 +1910,15 @@ msgid ""
 "directories are enabled"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:150
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:216
 msgid "Cannot create new filter"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:1929
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1727
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1776
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1609
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1988
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1610
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1989
 msgid "Cannot edit file"
 msgstr ""
 
@@ -1950,12 +1957,12 @@ msgstr ""
 msgid "Cannot rename file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:269
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:339
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:335
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:405
 msgid "Cannot save filterset"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:230
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:296
 msgid "Cannot select filter"
 msgstr ""
 
@@ -1977,23 +1984,23 @@ msgstr ""
 msgid "Case Insensitive"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1553
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1122
 msgid "Case insensitive"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1552
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1121
 msgid "Case insensitive (default)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1554
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1123
 msgid "Case sensitive"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1555
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1124
 msgid "Case sensitive (default)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:966
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:616
 msgid "Categories to clear"
 msgstr ""
 
@@ -2022,7 +2029,7 @@ msgstr ""
 msgid "Change the file permissions."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1997
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1566
 msgid "Changing logfile settings requires restart of FileZilla."
 msgstr ""
 
@@ -2038,11 +2045,11 @@ msgstr ""
 msgid "Check for &updates..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1844
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1413
 msgid "Check for FileZilla &updates automatically:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:64
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:65
 msgid "Check for Updates"
 msgstr ""
 
@@ -2050,7 +2057,7 @@ msgstr ""
 msgid "Check for newer versions of FileZilla"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:60
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:61
 msgid "Check for updates failed"
 msgstr ""
 
@@ -2070,7 +2077,7 @@ msgstr ""
 msgid "Checking for correct external IP address"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:111
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:112
 msgid "Checking for updates..."
 msgstr ""
 
@@ -2123,11 +2130,11 @@ msgstr ""
 msgid "Clear auto&update data"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:199
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:202
 msgid "Clear history"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:954
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:604
 #: ../../../source/FileZilla3/locales/../src/interface/clearprivatedata.cpp:38
 #: ../../../source/FileZilla3/locales/../src/interface/clearprivatedata.cpp:44
 #: ../../../source/FileZilla3/locales/../src/interface/clearprivatedata.cpp:50
@@ -2136,7 +2143,7 @@ msgstr ""
 msgid "Clear private data"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:198
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:201
 msgid "Clear quickconnect bar"
 msgstr ""
 
@@ -2144,11 +2151,11 @@ msgstr ""
 msgid "Click on Finish to save your configuration."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1568
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1218
 msgid "Client to server MAC:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1558
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1208
 msgid "Client to server cipher:"
 msgstr ""
 
@@ -2186,11 +2193,11 @@ msgstr ""
 msgid "Column properties"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1627
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1277
 msgid "Column setup"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1742
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1311
 msgid "Command and its arguments should be properly quoted."
 msgstr ""
 
@@ -2239,7 +2246,7 @@ msgstr ""
 msgid "Compare file&size"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1586
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1155
 msgid "Comparison &threshold (in minutes):"
 msgstr ""
 
@@ -2263,15 +2270,15 @@ msgstr ""
 msgid "Compiler flags:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:78
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:77
 msgid "Compressed"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:758
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:22
 msgid "Concurrent transfers"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:784
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:132
 msgid "Conditions are c&ase sensitive"
 msgstr ""
 
@@ -2291,7 +2298,7 @@ msgstr ""
 msgid "Configuring FileZilla and your network"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1670
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1671
 msgid "Confirm deletion"
 msgstr ""
 
@@ -2300,8 +2307,8 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteTreeView.cpp:1128
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1739
 #: ../../../source/FileZilla3/locales/../src/interface/file_utils.h:47
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1621
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1948
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1622
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1949
 msgid "Confirmation needed"
 msgstr ""
 
@@ -2309,7 +2316,7 @@ msgstr ""
 msgid "Congratulations, your configuration seems to be working."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:196
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:199
 msgid "Connect bypassing proxy settings"
 msgstr ""
 
@@ -2448,7 +2455,7 @@ msgstr[1] ""
 msgid "Connection timed out."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1043
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1044
 msgid "Connection to server lost."
 msgstr ""
 
@@ -2530,7 +2537,7 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:2680
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteTreeView.cpp:1492
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1879
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1880
 msgid "Could not copy URLs"
 msgstr ""
 
@@ -2610,7 +2617,7 @@ msgid "Could not get reply from fzputtyg
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1727
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1609
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1610
 msgid "Could not get temporary directory to download file into."
 msgstr ""
 
@@ -2677,7 +2684,7 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:2680
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteTreeView.cpp:1492
 #: ../../../source/FileZilla3/locales/../src/interface/aboutdialog.cpp:228
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1879
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1880
 msgid "Could not open clipboard"
 msgstr ""
 
@@ -2694,7 +2701,7 @@ msgstr ""
 msgid "Could not parse remote path."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:118
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:121
 msgid "Could not parse server address:"
 msgstr ""
 
@@ -2898,7 +2905,7 @@ msgstr ""
 msgid "Critical file transfer error after transferring %s in %s"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1288
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1291
 msgid "Cu&stomer encryption"
 msgstr ""
 
@@ -2921,41 +2928,41 @@ msgstr ""
 msgid "Current transfer type is set to binary."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1486
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1136
 msgid "Curve:"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:423
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1358
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1044
 msgid "Cus&tom"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1293
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1296
 msgid "Cus&tomer Key:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1283
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1286
 msgid "Custom KMS ARN"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1376
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1379
 msgid "Custom KMS ARN id cannot be empty."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:135
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:145
 msgid "Custom filter set"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1388
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1391
 msgid "Custom key cannot be empty."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1402
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1405
 msgid "Custom key length must be 256-bit."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1880
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1894
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1530
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1544
 msgid "Custom server"
 msgstr ""
 
@@ -2963,43 +2970,42 @@ msgstr ""
 msgid "Cyan"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2014
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1664
 msgid "D&ata type"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1428
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:31
 msgid "D&ecimal prefixes using SI symbols (e.g. 1 KB = 1000 bytes)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1161
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1163
 msgid "D&efault"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1077
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteTreeView.cpp:927
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1210
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1217
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1211
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1218
 msgid "D&elete"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2212
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1862
 msgid "D&irectory comparison"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:561
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:164
 msgid "D&isable all"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2800
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2450
 #: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_passwords.cpp:178
 msgid "D&o not save passwords"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1634
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1203
 msgid "D&ouble-click action on directories:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:711
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:275
 msgid "D&uplicate"
 msgstr ""
@@ -3021,11 +3027,11 @@ msgstr ""
 msgid "Data socket closed too early."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:121
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:120
 msgid "Date"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1292
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:978
 msgid "Date formatting"
 msgstr ""
 
@@ -3041,7 +3047,7 @@ msgstr ""
 msgid "Debug"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2018
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1587
 msgid "Debugging settings"
 msgstr ""
 
@@ -3049,7 +3055,7 @@ msgstr ""
 msgid "Default &local directory:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1282
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1285
 msgid "Default (AWS/S3)"
 msgstr ""
 
@@ -3061,9 +3067,9 @@ msgstr ""
 msgid "Default editor not properly quoted."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:846
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:916
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1171
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:496
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:566
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:934
 msgid "Default file exists action"
 msgstr ""
 
@@ -3071,7 +3077,7 @@ msgstr ""
 msgid "Default r&emote directory:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1039
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1041
 msgid ""
 "Default remote path cannot be parsed. Make sure it is a valid absolute path "
 "for the selected server type."
@@ -3085,7 +3091,7 @@ msgstr ""
 msgid "Default transfer mode:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:995
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:758
 msgid "Default transfer type:"
 msgstr ""
 
@@ -3134,7 +3140,7 @@ msgstr ""
 msgid "Deleting %u files from \"%s\""
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2535
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2185
 msgid "Deleting symbolic link"
 msgstr ""
 
@@ -3156,7 +3162,7 @@ msgstr ""
 msgid "Detected newer version of FileZilla"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:803
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:137
 msgid "Dire&ctories"
 msgstr ""
 
@@ -3164,7 +3170,7 @@ msgstr ""
 msgid "Direction"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2958
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2608
 msgid "Directories:"
 msgstr ""
 
@@ -3172,11 +3178,11 @@ msgstr ""
 msgid "Directory"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:3006
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2656
 msgid "Directory access permissions"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1572
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1141
 #: ../../../source/FileZilla3/locales/../src/interface/Mainfrm.cpp:2372
 #: ../../../source/FileZilla3/locales/../src/interface/Mainfrm.cpp:2392
 #: ../../../source/FileZilla3/locales/../src/interface/filelistctrl.cpp:477
@@ -3207,7 +3213,7 @@ msgstr ""
 msgid "Directory listing failed"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:496
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:126
 msgid "Directory listing filters"
 msgstr ""
 
@@ -3220,7 +3226,7 @@ msgstr ""
 msgid "Directory listing successful"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:596
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:178
 msgid "Disa&ble all"
 msgstr ""
 
@@ -3267,12 +3273,12 @@ msgstr ""
 msgid "Display about dialog"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1707
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1276
 msgid "Do &not use default editor"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1296
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1351
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:946
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1001
 msgid "Do the same with &all selected files already being edited"
 msgstr ""
 
@@ -3303,7 +3309,7 @@ msgstr ""
 msgid "Do you really want to send '%s' to the server?"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1344
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:994
 msgid "Do you want to reopen this file?"
 msgstr ""
 
@@ -3315,20 +3321,20 @@ msgstr ""
 msgid "Don't use external IP address on &local connections."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1092
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:855
 msgid "Dotfiles are filenames starting with a dot, e.g. .htaccess"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1610
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1179
 msgid "Double-click action"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1723
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1373
 msgid "Download"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2697
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:850
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2347
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:51
 msgid "Download &limit:"
 msgstr ""
 
@@ -3341,9 +3347,9 @@ msgstr ""
 msgid "Download limit: none"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2339
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1316
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1321
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1989
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1317
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1322
 msgid "Download search results"
 msgstr ""
 
@@ -3371,7 +3377,7 @@ msgstr ""
 msgid "Downloading %s"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:157
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:160
 msgid "Downloading update..."
 msgstr ""
 
@@ -3397,7 +3403,7 @@ msgstr ""
 msgid "Dupl&icate"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:554
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:163
 msgid "E&nable all"
 msgstr ""
 
@@ -3424,11 +3430,11 @@ msgstr ""
 msgid "E-Mail:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:455
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:458
 msgid "Each filter needs at least one condition."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:842
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:73
 msgid "Edit filters"
 msgstr ""
 
@@ -3437,7 +3443,7 @@ msgid ""
 "Edit the file with the configured editor and upload changes to the server."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1597
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1598
 msgid "Editing directories is not supported"
 msgstr ""
 
@@ -3446,17 +3452,17 @@ msgstr ""
 msgid "Editing failed"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1597
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1598
 msgid "Editing search results"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:171
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:176
 msgid ""
 "Either you or your system administrator has disabled checking for updates. "
 "Please re-enable checking for updates to obtain more information."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1242
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:142
 msgid "Email:"
 msgstr ""
 
@@ -3480,13 +3486,13 @@ msgstr ""
 msgid "Empty file extension."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:211
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:256
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:283
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:328
 msgid "Empty filter names are not allowed."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:211
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:256
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:283
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:328
 msgid "Empty name"
 msgstr ""
 
@@ -3494,19 +3500,19 @@ msgstr ""
 msgid "Empty quoted string."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:589
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:177
 msgid "En&able all"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:931
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:83
 msgid "Enable invalid character &filtering"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:79
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:78
 msgid "Encrypted"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1551
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1201
 msgid "Encryption"
 msgstr ""
 
@@ -3515,7 +3521,7 @@ msgstr ""
 msgid "Encryption &key:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1461
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1111
 msgid "Encryption details"
 msgstr ""
 
@@ -3531,7 +3537,7 @@ msgstr ""
 msgid "Enter &custom command..."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2738
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2388
 msgid "Enter 0 for unlimited speed."
 msgstr ""
 
@@ -3543,13 +3549,13 @@ msgstr ""
 msgid "Enter custom command"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1643
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1212
 msgid "Enter directory"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:143
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:200
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:249
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:209
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:272
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:321
 msgid "Enter filter name"
 msgstr ""
 
@@ -3558,11 +3564,11 @@ msgstr ""
 msgid "Enter master password"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:262
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:328
 msgid "Enter name for filterset"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:326
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:392
 msgid "Enter new name for filterset"
 msgstr ""
 
@@ -3597,7 +3603,7 @@ msgid ""
 "The converted file will be protected with the same password."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:57
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:60
 msgid ""
 "Enter the port on which the server listens. The default for FTP is 21, the "
 "default for SFTP is 22."
@@ -3635,12 +3641,8 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:794
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:834
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:887
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:877
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:968
 #: ../../../source/FileZilla3/locales/../src/interface/osx_sandbox_userdirs.cpp:65
 #: ../../../source/FileZilla3/locales/../src/interface/osx_sandbox_userdirs.cpp:136
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1755
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1789
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager.cpp:39
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager.cpp:470
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager.cpp:530
@@ -3652,6 +3654,10 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:799
 #: ../../../source/FileZilla3/locales/../src/interface/wrapengine.cpp:943
 #: ../../../source/FileZilla3/locales/../src/interface/Options.cpp:260
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:943
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:1034
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1756
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1790
 msgid "Error loading xml file"
 msgstr ""
 
@@ -3684,11 +3690,11 @@ msgstr ""
 msgid "Error:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1815
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1384
 msgid "Example: png \"c:\\program files\\viewer\\viewer.exe\" -open"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1465
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:44
 msgid "Examples"
 msgstr ""
 
@@ -3696,7 +3702,7 @@ msgstr ""
 msgid "Exe&cute"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:60
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:61
 msgid "Executable contains no version info, cannot check for updates."
 msgstr ""
 
@@ -3704,23 +3710,23 @@ msgstr ""
 msgid "Explorer"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1056
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:706
 msgid "Export &Filters"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1051
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:701
 msgid "Export &Queue"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1046
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:696
 msgid "Export &Settings"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1027
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:677
 msgid "Export settings"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:730
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:113
 msgid "F&ilter name:"
 msgstr ""
 
@@ -3740,7 +3746,7 @@ msgstr ""
 msgid "FTP - Insecure File Transfer Protocol"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:103
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:106
 msgid "FTP Engine not initialized, can't connect"
 msgstr ""
 
@@ -3781,7 +3787,7 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:2012
 #: ../../../source/FileZilla3/locales/../src/interface/LocalTreeView.cpp:907
 #: ../../../source/FileZilla3/locales/../src/interface/LocalTreeView.cpp:1209
-#: ../../../source/FileZilla3/locales/../src/interface/viewheader.cpp:503
+#: ../../../source/FileZilla3/locales/../src/interface/viewheader.cpp:504
 msgid "Failed to change directory"
 msgstr ""
 
@@ -3946,11 +3952,11 @@ msgstr ""
 msgid "Fall back to active mode"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1802
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1452
 msgid "Fil&e:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:798
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:136
 msgid "Fil&es"
 msgstr ""
 
@@ -3978,7 +3984,7 @@ msgstr ""
 msgid "File exists action"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1149
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:799
 msgid "File has changed"
 msgstr ""
 
@@ -3994,9 +4000,9 @@ msgstr ""
 msgid "File not found"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:637
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1060
 #: ../../../source/FileZilla3/locales/../src/interface/toolbar.cpp:53
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:638
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1061
 msgid "File search"
 msgstr ""
 
@@ -4035,16 +4041,16 @@ msgstr ""
 msgid "File transfers still in progress."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2033
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1683
 msgid "File would transfer with ASCII data type."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2038
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1688
 msgid "File would transfer with binary data type."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:103
 #: ../../../source/FileZilla3/locales/../src/interface/FileZilla.cpp:470
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:106
 msgid "FileZilla Error"
 msgstr ""
 
@@ -4054,7 +4060,7 @@ msgid ""
 "properly."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2622
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2272
 msgid "FileZilla is already connected to a server."
 msgstr ""
 
@@ -4062,7 +4068,7 @@ msgstr ""
 msgid "FileZilla needs to be restarted for the language change to take effect."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1903
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1472
 msgid "FileZilla updates"
 msgstr ""
 
@@ -4074,8 +4080,8 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:285
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:336
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1200
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:101
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:173
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:174
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:100
 msgid "Filename"
 msgstr ""
 
@@ -4093,8 +4099,8 @@ msgstr ""
 msgid "Filename unchanged"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1166
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1935
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:816
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1504
 msgid "Filename:"
 msgstr ""
 
@@ -4108,7 +4114,7 @@ msgid ""
 "|"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1457
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1107
 msgid "Files currently being edited"
 msgstr ""
 
@@ -4122,8 +4128,8 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:286
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:337
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:105
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:175
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:176
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:104
 msgid "Filesize"
 msgstr ""
 
@@ -4133,48 +4139,48 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:287
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:338
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:176
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:177
 msgid "Filetype"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1827
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1396
 #: ../../../source/FileZilla3/locales/../src/interface/settings/settingsdialog.cpp:136
 msgid "Filetype associations"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:791
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:135
 msgid "Filter applies to:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:925
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:82
 msgid "Filter invalid characters in filenames"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:155
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:220
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:261
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:362
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:221
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:292
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:333
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:434
 msgid "Filter name already exists"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:758
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:123
 msgid "Filter out items matching all of the following"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:759
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:124
 msgid "Filter out items matching any of the following"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:760
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:125
 msgid "Filter out items matching none of the following"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:761
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:126
 msgid "Filter out items matching not all of the following"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:285
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:345
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:351
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:411
 msgid "Filter set already exists"
 msgstr ""
 
@@ -4182,9 +4188,9 @@ msgstr ""
 msgid "Filter the directory listings"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:346
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:354
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:362
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:418
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:426
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:434
 msgid "Filter validation failed"
 msgstr ""
 
@@ -4198,7 +4204,7 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:319
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:440
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1532
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1182
 msgid "Fingerprints:"
 msgstr ""
 
@@ -4222,7 +4228,7 @@ msgid ""
 "settings will not be saved."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1077
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1079
 msgid "Force &UTF-8"
 msgstr ""
 
@@ -4238,7 +4244,7 @@ msgstr ""
 msgid "Format specifications:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1810
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1379
 msgid "Format: Extension followed by properly quoted command and arguments."
 msgstr ""
 
@@ -4282,8 +4288,8 @@ msgstr ""
 msgid "Getting help"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:285
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:345
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:351
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:411
 msgid "Given filterset name already exists, overwrite filter set?"
 msgstr ""
 
@@ -4311,15 +4317,15 @@ msgstr ""
 msgid "HTTPS - HTTP over TLS"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1496
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1146
 msgid "Hash:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:80
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:79
 msgid "Hidden"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:908
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:70
 #: ../../../source/FileZilla3/locales/../src/interface/queue.cpp:997
 #: ../../../source/FileZilla3/locales/../src/interface/queue.cpp:1059
 msgid "High"
@@ -4334,7 +4340,7 @@ msgstr ""
 msgid "Highest available port has to be a number between 1024 and 65535."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:612
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:185
 msgid ""
 "Hold the shift key to toggle the filter state on both sides simultaneously."
 msgstr ""
@@ -4378,7 +4384,7 @@ msgstr ""
 msgid "Hostkey algorithm:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:956
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:957
 msgid "Hours,"
 msgstr ""
 
@@ -4387,7 +4393,7 @@ msgid ""
 "I &forgot my master password. Delete all passwords stored with this key."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1353
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1039
 msgid "I&SO 8601 (example: 15:47)"
 msgstr ""
 
@@ -4412,7 +4418,7 @@ msgid ""
 "reconnect."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2067
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1636
 msgid "If reporting bugs, please provide logs with \"Verbose\" logging level."
 msgstr ""
 
@@ -4448,14 +4454,14 @@ msgid ""
 "connection."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1990
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1559
 msgid ""
 "If the size of the logfile reaches the limit, it gets renamed by adding "
 "\".1\" to the end of the filename (possibly overwriting older logfiles) and "
 "a new file gets created."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2547
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2197
 msgid ""
 "If the symlink points to a directory, FileZilla can either delete the "
 "symbolic link or remove the contents of the linked directory."
@@ -4471,21 +4477,21 @@ msgstr ""
 msgid "If this problem stays, please contact your router manufacturer."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:925
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1184
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:575
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:947
 msgid ""
 "If using 'overwrite if newer', your system time has to be synchronized with "
 "the server. If the time differs (e.g. different timezone), specify a time "
 "offset in the site manager."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1579
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1148
 msgid ""
 "If using timestamp based comparison, consider two files equal if their "
 "timestamp difference does not exceed this threshold."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1684
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1253
 msgid "If you change the language, you need to restart FileZilla."
 msgstr ""
 
@@ -4505,7 +4511,7 @@ msgid ""
 "internet."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1072
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:835
 msgid ""
 "If you enter the wrong filetypes, those files may get corrupted when "
 "transferred."
@@ -4552,7 +4558,7 @@ msgid ""
 "manufacturer."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1084
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:734
 msgid "Import settings"
 msgstr ""
 
@@ -4596,7 +4602,7 @@ msgstr ""
 msgid "Incorrect password"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:129
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:132
 msgid ""
 "Information about the latest version of FileZilla could not be retrieved. "
 "Please try again later."
@@ -4719,8 +4725,8 @@ msgstr ""
 msgid "Invalid port given. The port has to be a value from 1 to 65535."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:164
 #: ../../../source/FileZilla3/locales/../src/interface/serverdata.cpp:203
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:167
 msgid ""
 "Invalid protocol specified. Valid protocols are:\n"
 "ftp:// for normal FTP with optional encryption,\n"
@@ -4734,7 +4740,7 @@ msgid ""
 "Invalid proxy host, after closing bracket only colon and port may follow."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:496
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:499
 msgid "Invalid regular expression"
 msgstr ""
 
@@ -4742,7 +4748,7 @@ msgstr ""
 msgid "Invalid response code"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1060
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1061
 #, c-format
 msgid "Invalid search conditions: %s"
 msgstr ""
@@ -4754,7 +4760,7 @@ msgstr ""
 msgid "Invalid site path"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:511
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:514
 msgid "Invalid size in condition"
 msgstr ""
 
@@ -4786,7 +4792,7 @@ msgstr ""
 msgid "Jurisdiction state or province:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1536
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1105
 msgid "Keep directories on top"
 msgstr ""
 
@@ -4797,7 +4803,7 @@ msgid ""
 "some tests to check if the server supports this feature, the test may fail."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1469
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1119
 msgid "Key exchange"
 msgstr ""
 
@@ -4819,7 +4825,7 @@ msgstr ""
 msgid "L&owest"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1665
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1234
 #: ../../../source/FileZilla3/locales/../src/interface/settings/settingsdialog.cpp:134
 msgid "Language"
 msgstr ""
@@ -4830,7 +4836,7 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:288
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:339
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:177
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:178
 msgid "Last modified"
 msgstr ""
 
@@ -4848,11 +4854,11 @@ msgstr ""
 msgid "Leave empty to keep existing password."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:788
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:29
 msgid "Limit for concurrent &downloads:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:809
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:35
 msgid "Limit for concurrent &uploads:"
 msgstr ""
 
@@ -4860,11 +4866,11 @@ msgstr ""
 msgid "Limit local ports"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1959
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1528
 msgid "Limit size of logfile"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1967
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1536
 msgid "Limit:"
 msgstr ""
 
@@ -4903,7 +4909,7 @@ msgstr ""
 msgid "Local endpoint has been closed"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1746
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1396
 msgid "Local file"
 msgstr ""
 
@@ -4925,20 +4931,20 @@ msgstr ""
 msgid "Local file is not a valid filename."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1022
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1028
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1023
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1029
 msgid "Local file search"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:540
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:157
 msgid "Local filters:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2470
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2120
 msgid "Local path handling:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/viewheader.cpp:341
+#: ../../../source/FileZilla3/locales/../src/interface/viewheader.cpp:342
 msgid "Local site:"
 msgstr ""
 
@@ -4959,7 +4965,7 @@ msgstr ""
 msgid "Logged in"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1913
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1482
 #: ../../../source/FileZilla3/locales/../src/interface/settings/settingsdialog.cpp:142
 msgid "Logging"
 msgstr ""
@@ -5051,7 +5057,7 @@ msgstr ""
 msgid "Malformed response: %s"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2088
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1738
 #: ../../../source/FileZilla3/locales/../src/interface/manual_transfer.cpp:288
 #: ../../../source/FileZilla3/locales/../src/interface/manual_transfer.cpp:294
 #: ../../../source/FileZilla3/locales/../src/interface/manual_transfer.cpp:300
@@ -5068,12 +5074,12 @@ msgstr ""
 msgid "Master &Password:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2816
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2466
 #: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_passwords.cpp:183
 msgid "Master password:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:767
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:23
 msgid "Maximum simultaneous &transfers:"
 msgstr ""
 
@@ -5094,19 +5100,19 @@ msgstr ""
 msgid "Message too large"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1979
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1548
 msgid "MiB"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:960
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:962
 msgid "Minutes"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1661
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1311
 msgid "Move &down"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1655
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1305
 msgid "Move &up"
 msgstr ""
 
@@ -5124,16 +5130,16 @@ msgstr ""
 msgid "My Sites"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1268
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1271
 msgid "N&o encryption"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:197
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:200
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:207
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:210
 msgid "N/a"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2126
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1776
 msgid "Name"
 msgstr ""
 
@@ -5159,23 +5165,23 @@ msgstr ""
 msgid "Name:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1556
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1125
 msgid "Natural sort"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:354
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:426
 msgid "Need to enter filter name"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1022
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1023
 msgid "Need to enter valid local path"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1050
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1051
 msgid "Need to enter valid remote path"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1137
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1139
 msgid "Need to specify a character encoding"
 msgstr ""
 
@@ -5194,7 +5200,7 @@ msgstr ""
 msgid "Network unreachable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1850
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1419
 msgid "Never"
 msgstr ""
 
@@ -5211,7 +5217,7 @@ msgstr ""
 msgid "New Book&mark"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2091
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1741
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:63
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:76
 #: ../../../source/FileZilla3/locales/../src/interface/bookmarks_dialog.cpp:82
@@ -5241,7 +5247,7 @@ msgstr ""
 msgid "New features and improvements in %s"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:137
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:203
 msgid "New filter"
 msgstr ""
 
@@ -5292,7 +5298,7 @@ msgstr ""
 msgid "No files are currently being edited."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:150
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:216
 msgid "No filter name given"
 msgstr ""
 
@@ -5302,20 +5308,20 @@ msgstr ""
 msgid "No host given, please enter a host."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:94
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:96
 msgid "No images available"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:269
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:339
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:335
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:405
 msgid "No name for the filterset given."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2336
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1986
 msgid "No program associated with filetype"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2253
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1903
 #, c-format
 msgid "No program has been associated to edit files with the extension '%s'."
 msgstr ""
@@ -5324,8 +5330,8 @@ msgstr ""
 msgid "No route to host"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:711
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:717
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:712
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:718
 msgid "No search results"
 msgstr ""
 
@@ -5341,14 +5347,14 @@ msgstr ""
 msgid "No username given."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1627
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1646
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1196
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1215
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager.cpp:20
 #: ../../../source/FileZilla3/locales/../src/interface/verifycertdialog.cpp:394
 msgid "None"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1862
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1512
 msgid "None selected yet"
 msgstr ""
 
@@ -5356,9 +5362,9 @@ msgstr ""
 msgid "Nonrecoverable failure in name resolution"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:907
 #: ../../../source/FileZilla3/locales/../src/engine/server.cpp:693
 #: ../../../source/FileZilla3/locales/../src/engine/server.cpp:720
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:69
 #: ../../../source/FileZilla3/locales/../src/interface/manual_transfer.cpp:148
 #: ../../../source/FileZilla3/locales/../src/interface/manual_transfer.cpp:176
 #: ../../../source/FileZilla3/locales/../src/interface/manual_transfer.cpp:535
@@ -5414,7 +5420,7 @@ msgstr ""
 msgid "Null character in line"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1440
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:36
 msgid "Number of decimal places:"
 msgstr ""
 
@@ -5422,7 +5428,7 @@ msgstr ""
 msgid "Number of retries has to be between 0 and 99."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1208
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1209
 msgid "O&pen"
 msgstr ""
 
@@ -5431,29 +5437,29 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:250
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:359
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:480
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:639
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:828
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:935
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1006
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1064
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1129
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1303
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1440
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1612
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1687
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2070
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2225
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2319
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2416
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2511
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2580
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2755
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2857
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2990
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:585
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:656
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:714
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:779
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:953
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1090
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1262
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1337
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1720
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1875
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1969
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2066
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2161
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2230
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2405
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2507
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2640
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/storj.xrc:37
 #: ../../../source/FileZilla3/locales/../src/interface/settings/settingsdialog.cpp:72
 #: ../../../source/FileZilla3/locales/../src/interface/aboutdialog.cpp:134
 #: ../../../source/FileZilla3/locales/../src/interface/welcome_dialog.cpp:114
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:198
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:140
 msgid "OK"
 msgstr ""
 
@@ -5475,11 +5481,11 @@ msgstr ""
 msgid "Once"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1851
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1420
 msgid "Once a day"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1852
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1421
 msgid "Once a week"
 msgstr ""
 
@@ -5487,7 +5493,7 @@ msgstr ""
 msgid "Only use plain FTP (insecure)"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1425
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1075
 msgid "Op&en file"
 msgstr ""
 
@@ -5522,7 +5528,7 @@ msgstr ""
 msgid "Open the settings dialog of FileZilla"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1176
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:826
 msgid "Opened as:"
 msgstr ""
 
@@ -5530,8 +5536,8 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:1937
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1770
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1889
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1983
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1996
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1984
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1997
 msgid "Opening failed"
 msgstr ""
 
@@ -5601,31 +5607,31 @@ msgstr ""
 msgid "Overwrite &if source newer"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:875
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:898
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1132
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1153
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:525
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:548
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:895
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:916
 msgid "Overwrite file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:877
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:900
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1134
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1155
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:527
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:550
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:897
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:918
 msgid "Overwrite file if size differs"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:878
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:901
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1135
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1156
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:528
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:551
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:898
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:919
 msgid "Overwrite file if size differs or source file is newer"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:876
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:899
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1133
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1154
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:526
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:549
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:896
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:917
 msgid "Overwrite file if source file newer"
 msgstr ""
 
@@ -5647,7 +5653,7 @@ msgid "Owner permissions"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:341
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:179
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:180
 msgid "Owner/Group"
 msgstr ""
 
@@ -5679,8 +5685,8 @@ msgstr ""
 msgid "Parsing %d bytes of version information.\n"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1978
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:51
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1628
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:53
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:126
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:389
 msgid "Pass&word:"
@@ -5715,8 +5721,8 @@ msgstr ""
 msgid "Passwords"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:117
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:174
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:175
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:116
 msgid "Path"
 msgstr ""
 
@@ -5735,7 +5741,7 @@ msgstr ""
 msgid "Path of identity service"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2155
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1805
 msgid "Paths"
 msgstr ""
 
@@ -5746,7 +5752,7 @@ msgstr ""
 msgid "Pending removal"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:113
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:112
 msgid "Permission"
 msgstr ""
 
@@ -5756,7 +5762,7 @@ msgid "Permission denied"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:340
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:178
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:179
 msgid "Permissions"
 msgstr ""
 
@@ -5774,7 +5780,7 @@ msgid ""
 "upload files from."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2950
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2600
 msgid "Please add the local directories you want to use FileZilla with."
 msgstr ""
 
@@ -5814,46 +5820,46 @@ msgstr ""
 msgid "Please enter a custom time format."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:525
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:528
 msgid ""
 "Please enter a date of the form YYYY-MM-DD such as for example 2010-07-18."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:123
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:196
 #: ../../../source/FileZilla3/locales/../src/interface/speedlimits_dialog.cpp:64
 #, c-format
 msgid "Please enter a download speed limit greater or equal to 0 %s/s."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:143
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:209
 msgid "Please enter a name for the new filter."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:249
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:321
 msgid "Please enter a new name for the copied filter."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:324
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:390
 #, c-format
 msgid "Please enter a new name for the filter set \"%s\""
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:200
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:272
 msgid "Please enter a new name for the filter."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:112
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:184
 msgid ""
 "Please enter a number between 0 and 10 for the number of concurrent "
 "downloads."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:117
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:190
 msgid ""
 "Please enter a number between 0 and 10 for the number of concurrent uploads."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:107
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:178
 msgid ""
 "Please enter a number between 1 and 10 for the number of concurrent "
 "transfers."
@@ -5868,7 +5874,7 @@ msgid ""
 "Please enter a timeout between 10 and 9999 seconds or 0 to disable timeouts."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:262
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:328
 msgid "Please enter a unique name for this filter set"
 msgstr ""
 
@@ -5884,7 +5890,7 @@ msgstr ""
 msgid "Please enter an URL where to get your external address from"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:130
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:202
 #: ../../../source/FileZilla3/locales/../src/interface/speedlimits_dialog.cpp:72
 #, c-format
 msgid "Please enter an upload speed limit greater or equal to 0 %s/s."
@@ -5999,11 +6005,11 @@ msgid ""
 "uploaded files cannot be accessed."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2552
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2202
 msgid "Please select an action:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1122
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:772
 msgid "Please select the categories you would like to import."
 msgstr ""
 
@@ -6051,11 +6057,11 @@ msgstr ""
 msgid "Postal code:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:976
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:103
 msgid "Pre&allocate space before downloading"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:972
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:102
 msgid "Preallocation"
 msgstr ""
 
@@ -6068,7 +6074,7 @@ msgstr ""
 msgid "Preserving file timestamps"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1273
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:156
 msgid "Preview"
 msgstr ""
 
@@ -6080,7 +6086,7 @@ msgstr ""
 msgid "Print version information to stdout and exit"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1535
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1104
 msgid "Prioritize directories (default)"
 msgstr ""
 
@@ -6088,7 +6094,7 @@ msgstr ""
 msgid "Priority"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1891
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1460
 msgid ""
 "Privacy policy: Only your version of FileZilla, your used operating system "
 "and your CPU architecture will be submitted to the server."
@@ -6231,8 +6237,8 @@ msgstr ""
 msgid "Queued files"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2393
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2488
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2043
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2138
 msgid "Queueing:"
 msgstr ""
 
@@ -6284,7 +6290,7 @@ msgstr ""
 msgid "Rea&d"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:81
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:80
 msgid "Read-only"
 msgstr ""
 
@@ -6297,7 +6303,7 @@ msgid "Really cancel current operation?"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1427
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1662
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1663
 #, c-format
 msgid "Really delete %d directory with its contents from the server?"
 msgid_plural ""
@@ -6306,7 +6312,7 @@ msgstr[0] ""
 msgstr[1] ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1424
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1659
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1660
 #, c-format
 msgid "Really delete %d file from the server?"
 msgid_plural "Really delete %d files from the server?"
@@ -6314,7 +6320,7 @@ msgstr[0] ""
 msgstr[1] ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/RemoteListView.cpp:1432
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1667
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1668
 #, c-format
 msgid "Really delete %s and %s from the server?"
 msgstr ""
@@ -6415,7 +6421,7 @@ msgstr ""
 msgid "Refresh the file and folder lists"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2877
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2527
 msgid "Remember passwords?"
 msgstr ""
 
@@ -6423,17 +6429,17 @@ msgstr ""
 msgid "Remote"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1781
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1431
 #: ../../../source/FileZilla3/locales/../src/interface/queue.cpp:1275
 msgid "Remote file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1043
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1050
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1044
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1051
 msgid "Remote file search"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:575
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:171
 msgid "Remote filters:"
 msgstr ""
 
@@ -6465,15 +6471,15 @@ msgstr ""
 msgid "Remote path could not be parsed."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2375
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2025
 msgid "Remote path handling:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1196
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:846
 msgid "Remote path:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/viewheader.cpp:533
+#: ../../../source/FileZilla3/locales/../src/interface/viewheader.cpp:534
 msgid "Remote site:"
 msgstr ""
 
@@ -6487,10 +6493,10 @@ msgstr ""
 msgid "Remove &selected"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:880
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:903
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1137
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1158
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:530
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:553
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:900
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:921
 #: ../../../source/FileZilla3/locales/../src/interface/asyncrequestqueue.cpp:353
 msgid "Rename file"
 msgstr ""
@@ -6511,7 +6517,7 @@ msgstr ""
 msgid "Renaming '%s' to '%s'"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2828
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2478
 #: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_passwords.cpp:186
 msgid "Repeat password:"
 msgstr ""
@@ -6575,14 +6581,14 @@ msgstr ""
 msgid "Restore ta&bs and reconnect"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:879
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:902
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1136
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1157
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:529
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:552
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:899
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:920
 msgid "Resume file transfer"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1197
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:960
 msgid ""
 "Resuming ASCII files can cause problems if server uses a different line "
 "ending format than the client."
@@ -6656,12 +6662,12 @@ msgstr ""
 msgid "SQLite:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2805
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2455
 #: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_passwords.cpp:179
 msgid "Sa&ve passwords protected by a master password"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2795
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2445
 #: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_passwords.cpp:177
 msgid "Sav&e passwords"
 msgstr ""
@@ -6680,7 +6686,7 @@ msgstr ""
 msgid "Saving of passwords has been disabled by you."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1253
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:144
 msgid "Scale factor:"
 msgstr ""
 
@@ -6704,7 +6710,7 @@ msgstr ""
 msgid "Search sites"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:650
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:651
 msgid "Search type:"
 msgstr ""
 
@@ -6722,7 +6728,7 @@ msgstr ""
 msgid "See also: https://wiki.filezilla-project.org/Network_Configuration"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1869
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1519
 msgid "Sele&ct server"
 msgstr ""
 
@@ -6730,11 +6736,11 @@ msgstr ""
 msgid "Select &page:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1215
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_themes.cpp:137
 msgid "Select Theme"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1112
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:875
 msgid ""
 "Select default action to perform if target file of a transfer already exists."
 msgstr ""
@@ -6794,11 +6800,11 @@ msgstr ""
 msgid "Select filename for converted key file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2258
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1908
 msgid "Select how these files should be opened."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1304
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1305
 msgid "Select target download directory"
 msgstr ""
 
@@ -6806,15 +6812,15 @@ msgstr ""
 msgid "Select target filename"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1035
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:685
 msgid "Select the categories to export:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:961
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:611
 msgid "Select the private data you would like to delete."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1261
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1262
 #, c-format
 msgid "Selected %d directory with its contents for transfer."
 msgid_plural "Selected %d directories with their contents for transfer."
@@ -6828,7 +6834,7 @@ msgid_plural "Selected %d directories."
 msgstr[0] ""
 msgstr[1] ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1258
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1259
 #, c-format
 msgid "Selected %d file for transfer."
 msgid_plural "Selected %d files for transfer."
@@ -6849,7 +6855,7 @@ msgid_plural "Selected %d files. Total s
 msgstr[0] ""
 msgstr[1] ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1266
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1267
 #, c-format
 msgid "Selected %s and %s for transfer."
 msgstr ""
@@ -6870,8 +6876,8 @@ msgstr ""
 msgid "Selected editor does not exist."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1255
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1322
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:905
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:972
 msgid "Selected file already being edited"
 msgstr ""
 
@@ -6887,7 +6893,7 @@ msgstr ""
 msgid "Selected file is still being edited"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:230
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:296
 msgid "Selected filter only works for local files."
 msgstr ""
 
@@ -6922,7 +6928,7 @@ msgstr ""
 msgid "Server &type:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1266
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1269
 msgid "Server Side Encryption:"
 msgstr ""
 
@@ -6951,7 +6957,7 @@ msgstr ""
 msgid "Server does not support resume of files > 4GB."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1515
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1165
 msgid "Server host key"
 msgstr ""
 
@@ -7024,15 +7030,15 @@ msgstr ""
 msgid "Server sent unexpected reply."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1588
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1238
 msgid "Server to client MAC:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1578
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1228
 msgid "Server to client cipher:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1932
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1582
 msgid "Server&type:"
 msgstr ""
 
@@ -7040,8 +7046,8 @@ msgstr ""
 msgid "Server/Local file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1186
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1855
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:836
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1505
 msgid "Server:"
 msgstr ""
 
@@ -7071,7 +7077,7 @@ msgstr ""
 msgid "Sh&ow notification bubble"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2075
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1644
 msgid "Show &raw directory listing"
 msgstr ""
 
@@ -7083,16 +7089,16 @@ msgstr ""
 msgid "Show both directory trees and continue comparing?"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:133
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:178
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:136
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:183
 msgid "Show details"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1390
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1076
 msgid "Show details about custom date and time formats"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1209
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1210
 msgid "Show in file &manager"
 msgstr ""
 
@@ -7116,7 +7122,7 @@ msgstr ""
 msgid "Signup"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1097
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:747
 msgid "Site &Manager entries"
 msgstr ""
 
@@ -7144,12 +7150,12 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:715
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:726
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:754
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1039
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1051
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1137
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1376
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1388
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1402
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1041
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1053
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1139
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1379
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1391
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1405
 msgid "Site Manager - Invalid data"
 msgstr ""
 
@@ -7192,7 +7198,7 @@ msgstr ""
 msgid "Size"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1404
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_sizeformatting.cpp:27
 msgid "Size formatting"
 msgstr ""
 
@@ -7200,10 +7206,10 @@ msgstr ""
 msgid "Size unknown"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:881
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:904
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1138
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1159
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:531
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:554
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:901
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:922
 msgid "Skip file"
 msgstr ""
 
@@ -7259,7 +7265,7 @@ msgid ""
 "their local IP address."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1537
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1106
 msgid "Sort directories inline"
 msgstr ""
 
@@ -7267,11 +7273,11 @@ msgstr ""
 msgid "Sort order cannot be changed if comparing directories."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1521
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1090
 msgid "Sorting"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1528
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1097
 msgid "Sorting &mode:"
 msgstr ""
 
@@ -7291,13 +7297,13 @@ msgstr ""
 msgid "Source file:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2773
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2423
 #: ../../../source/FileZilla3/locales/../src/interface/speedlimits_dialog.cpp:64
 #: ../../../source/FileZilla3/locales/../src/interface/speedlimits_dialog.cpp:72
 msgid "Speed Limits"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:837
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:44
 msgid "Speed limits"
 msgstr ""
 
@@ -7309,19 +7315,19 @@ msgstr ""
 msgid "Speed limits are enabled, click to change."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1869
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1438
 msgid "Stable and beta versions"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1868
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1437
 msgid "Stable versions only"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1870
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1439
 msgid "Stable, beta and nightly versions"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2063
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1713
 msgid "Start transfer &immediately"
 msgstr ""
 
@@ -7408,13 +7414,13 @@ msgstr ""
 msgid "Suspend now"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2569
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2219
 msgid ""
 "Symlinks to files are not affected by this choice, such symlinks are always "
 "deleted."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2880
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2530
 #: ../../../source/FileZilla3/locales/../src/interface/state.cpp:275
 #: ../../../source/FileZilla3/locales/../src/interface/state.cpp:290
 #: ../../../source/FileZilla3/locales/../src/interface/state.cpp:297
@@ -7439,8 +7445,8 @@ msgstr ""
 msgid "Synchronizing directories."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:121
-#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:165
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:124
+#: ../../../source/FileZilla3/locales/../src/interface/quickconnectbar.cpp:168
 msgid "Syntax error"
 msgstr ""
 
@@ -7454,7 +7460,7 @@ msgstr ""
 msgid "Syntax error in command line"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:82
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:81
 msgid "System"
 msgstr ""
 
@@ -7526,7 +7532,7 @@ msgstr ""
 msgid "Testing resume capabilities of server"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1383
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1033
 msgid "The &following files are currently being edited:"
 msgstr ""
 
@@ -7592,19 +7598,19 @@ msgstr ""
 msgid "The data connection could not be established: %s"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2276
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1926
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1658
 msgid "The default editor for text files could not be found."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2269
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1919
 #, c-format
 msgid "The default editor for text files is '%s'."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:155
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:220
-#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:261
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:221
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:292
+#: ../../../source/FileZilla3/locales/../src/interface/filteredit.cpp:333
 msgid "The entered filter name already exists, please choose a different name."
 msgstr ""
 
@@ -7628,7 +7634,7 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:1928
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1775
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1987
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1988
 #, c-format
 msgid ""
 "The file '%s' cannot be opened:\n"
@@ -7655,7 +7661,7 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:1924
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1770
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1983
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1984
 #, c-format
 msgid ""
 "The file '%s' could not be opened:\n"
@@ -7664,7 +7670,7 @@ msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:1937
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1889
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1996
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1997
 #, c-format
 msgid ""
 "The file '%s' could not be opened:\n"
@@ -7699,12 +7705,12 @@ msgstr ""
 msgid "The filename column cannot be hidden."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:69
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:96
 #, c-format
 msgid "The following character will be replaced: %s"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:66
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:93
 #, c-format
 msgid "The following characters will be replaced: %s"
 msgstr ""
@@ -7721,7 +7727,7 @@ msgstr ""
 msgid "The global bookmarks could not be saved."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:2062
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1631
 msgid ""
 "The higher the debug level, the more information will be displayed in the "
 "message log. Displaying debug information has a negative impact on "
@@ -7760,11 +7766,11 @@ msgstr ""
 msgid "The master password needs to be at least 8 characters long."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:172
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:177
 msgid "The new version could not be downloaded, please retry later."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:166
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:171
 msgid "The new version has been saved in your Downloads directory."
 msgstr ""
 
@@ -7788,13 +7794,13 @@ msgstr ""
 msgid "The selected categories have been imported."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1092
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:742
 msgid ""
 "The selected file contains importable data for the following categories:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1262
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1329
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:912
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:979
 msgid "The selected file is already being edited:"
 msgstr ""
 
@@ -7818,7 +7824,7 @@ msgstr ""
 msgid "The server sent an unexpected or unrecognized reply."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1072
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1074
 msgid "The server uses following charset encoding for filenames:"
 msgstr ""
 
@@ -7886,11 +7892,11 @@ msgstr ""
 msgid "Themes"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:382
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:448
 msgid "This filter set cannot be removed."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:318
+#: ../../../source/FileZilla3/locales/../src/interface/filter.cpp:384
 msgid "This filter set cannot be renamed."
 msgstr ""
 
@@ -7926,7 +7932,7 @@ msgstr ""
 msgid "Time"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1341
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1027
 msgid "Time formatting"
 msgstr ""
 
@@ -8012,12 +8018,12 @@ msgstr ""
 msgid "Trace:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1624
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1644
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1193
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1213
 msgid "Transfer"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1719
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1369
 msgid "Transfer &direction"
 msgstr ""
 
@@ -8059,11 +8065,11 @@ msgstr ""
 msgid "Transfers finished"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1080
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:843
 msgid "Treat files &without extension as ASCII file"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1032
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:795
 msgid "Treat the &following filetypes as ASCII files:"
 msgstr ""
 
@@ -8087,12 +8093,12 @@ msgstr ""
 msgid "Trust this host and carry on connecting?"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:130
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:177
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:133
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:182
 msgid "Try again"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2099
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1749
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1201
 msgid "Type"
 msgstr ""
@@ -8105,20 +8111,19 @@ msgstr ""
 msgid "Type of generic proxy:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1410
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1060
 msgid "U&pload"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2714
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:875
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2364
 msgid "U&pload limit:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1754
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1323
 msgid "U&se filetype associations if available"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1347
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1033
 msgid "U&se system defaults for current language"
 msgstr ""
 
@@ -8132,7 +8137,7 @@ msgstr ""
 msgid "Unassigned error code %d"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:170
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:175
 msgid "Unfortunately information about the new update could not be retrieved."
 msgstr ""
 
@@ -8144,8 +8149,8 @@ msgstr ""
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:324
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:435
 #: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:445
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1527
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1537
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1177
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1187
 #: ../../../source/FileZilla3/locales/../src/engine/sizeformatting_base.cpp:61
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1232
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1260
@@ -8216,7 +8221,7 @@ msgstr ""
 msgid "Unsupported redirect"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1416
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1066
 msgid "Up&load and unedit"
 msgstr ""
 
@@ -8225,10 +8230,14 @@ msgstr ""
 msgid "Updates"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1733
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1383
 msgid "Upload"
 msgstr ""
 
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:59
+msgid "Upload &limit:"
+msgstr ""
+
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1223
 msgid "Upload failed"
 msgstr ""
@@ -8242,8 +8251,8 @@ msgstr ""
 msgid "Upload limit: none"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2440
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1330
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2090
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1331
 msgid "Upload search results"
 msgstr ""
 
@@ -8255,11 +8264,11 @@ msgstr ""
 msgid "Upload selected files and directories"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1221
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:871
 msgid "Upload this file back to the server?"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1216
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:866
 msgid "Upload this file to the server?"
 msgstr ""
 
@@ -8279,19 +8288,19 @@ msgstr ""
 msgid "Uploading and unediting"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1079
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1081
 msgid "Use &custom charset"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1718
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1287
 msgid "Use &custom editor:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2263
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1913
 msgid "Use &default editor for text files"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2205
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1855
 #: ../../../source/FileZilla3/locales/../src/interface/sitemanager_dialog.cpp:303
 msgid "Use &synchronized browsing"
 msgstr ""
@@ -8300,8 +8309,8 @@ msgstr ""
 msgid "Use Regular Expressions"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:873
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:896
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:523
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:546
 msgid "Use default action"
 msgstr ""
 
@@ -8309,15 +8318,15 @@ msgstr ""
 msgid "Use explicit FTP over TLS if available"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1838
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1488
 msgid "Use server currently connected to"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1844
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1494
 msgid "Use server from site manager"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1298
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:984
 msgid "Use system &defaults for current language"
 msgstr ""
 
@@ -8356,7 +8365,7 @@ msgstr ""
 msgid "Username cannot be a series of spaces"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1075
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1077
 msgid "Uses UTF-8 if the server supports it, else uses local charset."
 msgstr ""
 
@@ -8373,7 +8382,7 @@ msgstr ""
 msgid "Using secure HTTPS"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1088
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1090
 msgid ""
 "Using the wrong charset can result in filenames not displaying properly."
 msgstr ""
@@ -8390,7 +8399,7 @@ msgstr ""
 msgid "Verbose log messages from wxWidgets"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:909
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:71
 msgid "Very high"
 msgstr ""
 
@@ -8398,11 +8407,11 @@ msgstr ""
 msgid "View hidden option set, but unsupported by server"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1626
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1195
 msgid "View/Edit"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1635
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:1285
 msgid "Visible columns"
 msgstr ""
 
@@ -8473,17 +8482,17 @@ msgstr ""
 msgid "What's new"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:152
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:155
 msgid "What's new:"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2788
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2438
 msgid ""
 "When allowing FileZilla to remember passwords, you can reconnect without "
 "having to re-enter a password after restarting FileZilla."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:936
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:84
 msgid ""
 "When enabled, characters that are not supported by the local operating "
 "system in filenames are replaced if downloading such a file."
@@ -8497,7 +8506,7 @@ msgstr ""
 msgid "Widescreen"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2783
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2433
 msgid "Would you like FileZilla to remember passwords?"
 msgstr ""
 
@@ -8538,7 +8547,7 @@ msgid ""
 "environment."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:196
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:201
 msgid "You are using the latest version of FileZilla."
 msgstr ""
 
@@ -8546,8 +8555,8 @@ msgstr ""
 msgid "You can always open this dialog again through the help menu."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:137
-#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:181
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:140
+#: ../../../source/FileZilla3/locales/../src/interface/update_dialog.cpp:186
 msgid "You can download the latest version from the FileZilla website:"
 msgstr ""
 
@@ -8571,7 +8580,7 @@ msgstr ""
 msgid "You cannot import settings from FileZilla's own settings directory."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:149
+#: ../../../source/FileZilla3/locales/../src/interface/settings/optionspage_transfer.cpp:221
 msgid ""
 "You cannot replace an invalid character with another invalid character. "
 "Please enter a character that is allowed in filenames."
@@ -8589,19 +8598,19 @@ msgstr ""
 msgid "You do not have permission to list this directory"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2542
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2192
 msgid "You have selected at least one symbolic link."
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/edithandler.cpp:1740
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1622
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1623
 msgid ""
 "You have selected more than 10 files for editing, do you really want to "
 "continue?"
 msgstr ""
 
 #: ../../../source/FileZilla3/locales/../src/interface/LocalListView.cpp:1892
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1949
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1950
 msgid ""
 "You have selected more than 10 files or directories to open, do you really "
 "want to continue?"
@@ -8616,11 +8625,11 @@ msgstr ""
 msgid "You have to enter a key file path"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1316
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1317
 msgid "You have to enter a local directory."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1330
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1331
 msgid "You have to enter a remote directory."
 msgstr ""
 
@@ -8633,7 +8642,7 @@ msgstr ""
 msgid "You have to enter a valid encryption key"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1321
+#: ../../../source/FileZilla3/locales/../src/interface/search.cpp:1322
 msgid "You have to enter a writable local directory."
 msgstr ""
 
@@ -8696,13 +8705,13 @@ msgid ""
 "browsing for this bookmark."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1051
+#: ../../../source/FileZilla3/locales/../src/interface/sitemanager_controls.cpp:1053
 msgid ""
 "You need to enter both a local and a remote path to enable synchronized "
 "browsing for this site."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2945
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/dialogs.xrc:2595
 msgid ""
 "You need to grant FileZilla access to the directories you want to download "
 "files into or to upload files from."
@@ -8734,24 +8743,24 @@ msgstr ""
 msgid "Your computer will suspend unless you click Cancel."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:97
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:96
 msgid "after"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:94
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:93
 msgid "before"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:64
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:63
 msgid "begins with"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:138
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:288
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:137
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:287
 msgid "bytes"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:62
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:61
 msgid "contains"
 msgstr ""
 
@@ -8759,21 +8768,21 @@ msgstr ""
 msgid "custom"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:67
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:66
 msgid "does not contain"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:71
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:96
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:70
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:95
 msgid "does not equal"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:65
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:64
 msgid "ends with"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:70
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:95
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:69
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:94
 msgid "equals"
 msgstr ""
 
@@ -8816,43 +8825,43 @@ msgid ""
 "FileZilla executable."
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:69
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:68
 msgid "greater than"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:89
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:88
 msgid "group executable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:87
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:86
 msgid "group readable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:88
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:87
 msgid "group writeable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1392
+#: ../../../source/FileZilla3/locales/../src/interface/resources/xrc/settings.xrc:1078
 msgid "https://wiki.filezilla-project.org/Date_and_Time_formatting"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:63
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:62
 msgid "is equal to"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:74
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:73
 msgid "is set"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:75
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:74
 msgid "is unset"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:72
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:71
 msgid "less than"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:66
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:65
 msgid "matches regex"
 msgstr ""
 
@@ -8860,15 +8869,15 @@ msgstr ""
 msgid "new name"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:86
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:85
 msgid "owner executable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:84
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:83
 msgid "owner readable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:85
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:84
 msgid "owner writeable"
 msgstr ""
 
@@ -8877,15 +8886,15 @@ msgstr ""
 msgid "unknown"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:92
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:91
 msgid "world executable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:90
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:89
 msgid "world readable"
 msgstr ""
 
-#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:91
+#: ../../../source/FileZilla3/locales/../src/interface/filter_conditions_dialog.cpp:90
 msgid "world writeable"
 msgstr ""
 
diff -Naupr a/src/interface/LocalListView.h b/src/interface/LocalListView.h
--- a/src/interface/LocalListView.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/LocalListView.h	2020-01-24 15:21:03.000000000 +0100
@@ -0,0 +1,124 @@
+#ifndef FILEZILLA_INTERFACE_LOCALLISTVIEW_HEADER
+#define FILEZILLA_INTERFACE_LOCALLISTVIEW_HEADER
+
+#include "filelistctrl.h"
+#include "state.h"
+
+class CInfoText;
+class CQueueView;
+class CLocalListViewDropTarget;
+#ifdef __WXMSW__
+class CVolumeDescriptionEnumeratorThread;
+#endif
+class CView;
+class CWindowTinter;
+
+class CLocalFileData final : public CGenericFileData
+{
+public:
+	std::wstring name;
+#ifdef __WXMSW__
+	fz::sparse_optional<std::wstring> label;
+#endif
+	fz::datetime time;
+	int64_t size;
+	int attributes;
+	bool dir;
+	bool is_dir() const { return dir; }
+};
+
+class CLocalListView final : public CFileListCtrl<CLocalFileData>, CStateEventHandler
+{
+	friend class CLocalListViewDropTarget;
+	friend class CLocalListViewSortType;
+
+public:
+	CLocalListView(CView* parent, CState& state, CQueueView *pQueue);
+	virtual ~CLocalListView();
+
+protected:
+	void OnStateChange(t_statechange_notifications notification, std::wstring const& data, const void*) override;
+	bool DisplayDir(CLocalPath const& dirname);
+	void ApplyCurrentFilter();
+
+	// Declared const due to design error in wxWidgets.
+	// Won't be fixed since a fix would break backwards compatibility
+	// Both functions use a const_cast<CLocalListView *>(this) and modify
+	// the instance.
+	virtual int OnGetItemImage(long item) const;
+	virtual wxListItemAttr* OnGetItemAttr(long item) const;
+
+	// Clears all selections and returns the list of items that were selected
+	std::vector<std::wstring> RememberSelectedItems(std::wstring & focused, int & focusedItem);
+
+	// Select a list of items based in their names.
+	// Sort order may not change between call to RememberSelectedItems and
+	// ReselectItems
+	void ReselectItems(std::vector<std::wstring> const& selectedNames, std::wstring focused, int focusedItem, bool ensureVisible = false);
+
+#ifdef __WXMSW__
+	void DisplayDrives();
+	void DisplayShares(wxString computer);
+#endif
+
+public:
+	virtual bool CanStartComparison();
+	virtual void StartComparison();
+	virtual bool get_next_file(std::wstring_view & name, std::wstring & path, bool &dir, int64_t &size, fz::datetime& date) override;
+	virtual void FinishComparison();
+
+	virtual bool ItemIsDir(int index) const;
+	virtual int64_t ItemGetSize(int index) const;
+
+protected:
+	virtual wxString GetItemText(int item, unsigned int column);
+
+	bool IsItemValid(unsigned int item) const;
+	CLocalFileData *GetData(unsigned int item);
+
+	virtual std::unique_ptr<CFileListCtrlSortBase> GetSortComparisonObject() override;
+
+	void RefreshFile(std::wstring const& file);
+
+	virtual void OnNavigationEvent(bool forward);
+
+	virtual bool OnBeginRename(const wxListEvent& event);
+	virtual bool OnAcceptRename(const wxListEvent& event);
+
+	CLocalPath m_dir;
+
+	int m_dropTarget{-1};
+
+	wxString MenuMkdir();
+
+	std::unique_ptr<CWindowTinter> m_windowTinter;
+
+	CView *m_parentView{};
+
+	CInfoText* m_pInfoText{};
+	void SetInfoText(wxString const& text);
+
+	// Event handlers
+	DECLARE_EVENT_TABLE()
+	void OnItemActivated(wxListEvent& event);
+	void OnContextMenu(wxContextMenuEvent& event);
+	void OnMenuUpload(wxCommandEvent& event);
+	void OnMenuMkdir(wxCommandEvent& event);
+	void OnMenuMkdirChgDir(wxCommandEvent&);
+	void OnMenuDelete(wxCommandEvent& event);
+	void OnMenuRename(wxCommandEvent& event);
+	void OnKeyDown(wxKeyEvent& event);
+	void OnSize(wxSizeEvent& event);
+	void OnBeginDrag(wxListEvent& event);
+	void OnMenuOpen(wxCommandEvent& event);
+	void OnMenuEdit(wxCommandEvent& event);
+	void OnMenuEnter(wxCommandEvent& event);
+	void OnMenuRefresh(wxCommandEvent& event);
+
+#ifdef __WXMSW__
+	void OnVolumesEnumerated(wxCommandEvent& event);
+	std::unique_ptr<CVolumeDescriptionEnumeratorThread> volumeEnumeratorThread_;
+#endif
+};
+
+#endif
diff -Naupr a/src/interface/LocalTreeView.h b/src/interface/LocalTreeView.h
--- a/src/interface/LocalTreeView.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/LocalTreeView.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,98 @@
+#ifndef FILEZILLA_INTERFACE_LOCALTREEVIEW_HEADER
+#define FILEZILLA_INTERFACE_LOCALTREEVIEW_HEADER
+
+#include <option_change_event_handler.h>
+#include "systemimagelist.h"
+#include "state.h"
+#include "treectrlex.h"
+
+class CQueueView;
+class CWindowTinter;
+
+#ifdef __WXMSW__
+class CVolumeDescriptionEnumeratorThread;
+#endif
+
+class CLocalTreeView final : public wxTreeCtrlEx, CSystemImageList, CStateEventHandler, COptionChangeEventHandler
+{
+	friend class CLocalTreeViewDropTarget;
+
+public:
+	CLocalTreeView(wxWindow* parent, wxWindowID id, CState& state, CQueueView *pQueueView);
+	virtual ~CLocalTreeView();
+
+#ifdef __WXMSW__
+	// React to changed drive letters
+	void OnDevicechange(WPARAM wParam, LPARAM lParam);
+#endif
+
+protected:
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+
+	void SetDir(wxString const& localDir);
+	void RefreshListing();
+
+#ifdef __WXMSW__
+	bool CreateRoot();
+	bool DisplayDrives(wxTreeItemId parent);
+	wxString GetSpecialFolder(int folder, int &iconIndex, int &openIconIndex);
+
+	wxTreeItemId m_desktop;
+	wxTreeItemId m_drives;
+	wxTreeItemId m_documents;
+#endif
+
+	void UpdateSortMode();
+
+	virtual void OnOptionsChanged(changed_options_t const& options);
+
+	wxTreeItemId GetNearestParent(wxString& localDir);
+	wxTreeItemId GetSubdir(wxTreeItemId parent, const wxString& subDir);
+	void DisplayDir(wxTreeItemId parent, std::wstring const& dirname, std::wstring const& knownSubdir = std::wstring());
+	std::wstring HasSubdir(std::wstring const& dirname);
+	wxTreeItemId MakeSubdirs(wxTreeItemId parent, std::wstring dirname, wxString subDir);
+	wxString m_currentDir;
+
+	bool CheckSubdirStatus(wxTreeItemId& item, std::wstring const& path);
+
+	wxString MenuMkdir();
+
+	DECLARE_EVENT_TABLE()
+	void OnItemExpanding(wxTreeEvent& event);
+#ifdef __WXMSW__
+	void OnSelectionChanging(wxTreeEvent& event);
+#endif
+	void OnSelectionChanged(wxTreeEvent& event);
+	void OnBeginDrag(wxTreeEvent& event);
+#ifdef __WXMSW__
+	void OnVolumesEnumerated(wxCommandEvent& event);
+	CVolumeDescriptionEnumeratorThread* m_pVolumeEnumeratorThread;
+#endif
+	void OnContextMenu(wxTreeEvent& event);
+	void OnMenuUpload(wxCommandEvent& event);
+	void OnMenuMkdir(wxCommandEvent& event);
+	void OnMenuMkdirChgDir(wxCommandEvent& event);
+	void OnMenuRename(wxCommandEvent& event);
+	void OnMenuDelete(wxCommandEvent& event);
+	void OnBeginLabelEdit(wxTreeEvent& event);
+	void OnEndLabelEdit(wxTreeEvent& event);
+	void OnChar(wxKeyEvent& event);
+	void OnMenuOpen(wxCommandEvent&);
+
+#ifdef __WXMSW__
+	// React to changed drive letters
+	wxTreeItemId AddDrive(wxChar letter);
+	void RemoveDrive(wxChar letter);
+#endif
+
+	std::wstring GetDirFromItem(wxTreeItemId item);
+
+	CQueueView* m_pQueueView;
+
+	wxTreeItemId m_contextMenuItem;
+	wxTreeItemId m_dropHighlight;
+
+	std::unique_ptr<CWindowTinter> m_windowTinter;
+};
+
+#endif
diff -Naupr a/src/interface/Mainfrm.h b/src/interface/Mainfrm.h
--- a/src/interface/Mainfrm.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/Mainfrm.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,198 @@
+#ifndef FILEZILLA_INTERFACE_MAINFRM_HEADER
+#define FILEZILLA_INTERFACE_MAINFRM_HEADER
+
+#include "statusbar.h"
+#include "engine_context.h"
+#include "notification.h"
+#include "serverdata.h"
+
+#include <wx/timer.h>
+
+#ifndef __WXMAC__
+#include <wx/taskbar.h>
+#endif
+
+#if FZ_MANUALUPDATECHECK
+#include "updater.h"
+#endif
+
+class CAsyncRequestQueue;
+class CContextControl;
+class CLed;
+class CMainFrameStateEventHandler;
+class CMenuBar;
+class CQueue;
+class CQueueView;
+class CQuickconnectBar;
+class Site;
+class CSplitterWindowEx;
+class CStatusView;
+class CState;
+class CToolBar;
+class CWindowStateManager;
+
+class CMainFrame final : public wxNavigationEnabled<wxFrame>, private COptionChangeEventHandler, public EngineNotificationHandler
+#if FZ_MANUALUPDATECHECK
+	, protected CUpdateHandler
+#endif
+{
+	friend class CMainFrameStateEventHandler;
+public:
+	CMainFrame();
+	virtual ~CMainFrame();
+
+	void UpdateActivityLed(int direction);
+
+	CStatusView* GetStatusView() { return m_pStatusView; }
+	CQueueView* GetQueue() { return m_pQueueView; }
+	CQuickconnectBar* GetQuickconnectBar() { return m_pQuickconnectBar; }
+
+	// Window size and position as well as pane sizes
+	void RememberSplitterPositions();
+	bool RestoreSplitterPositions();
+	void SetDefaultSplitterPositions();
+
+	void CheckChangedSettings();
+
+	void ConnectNavigationHandler(wxEvtHandler* handler);
+
+	wxStatusBar* GetStatusBar() const { return m_pStatusBar; }
+
+	void ProcessCommandLine();
+
+	void PostInitialize();
+
+	CContextControl* GetContextControl() { return m_pContextControl; }
+
+	bool ConnectToSite(Site & data, Bookmark const& bookmark, CState* pState = 0);
+
+	CFileZillaEngineContext& GetEngineContext() { return m_engineContext; }
+private:
+	void UpdateLayout();
+	void FixTabOrder();
+
+	bool CloseDialogsAndQuit(wxCloseEvent &event);
+	bool CreateMenus();
+	bool CreateQuickconnectBar();
+	bool CreateMainToolBar();
+	void OpenSiteManager(Site const* site = 0);
+
+	void FocusNextEnabled(std::list<wxWindow*>& windowOrder, std::list<wxWindow*>::iterator iter, bool skipFirst, bool forward);
+
+	CStatusBar* m_pStatusBar{};
+	CMenuBar* m_pMenuBar{};
+	CToolBar* m_pToolBar{};
+	CQuickconnectBar* m_pQuickconnectBar{};
+
+	CSplitterWindowEx* m_pTopSplitter{}; // If log position is 0, splits message log from rest of panes
+	CSplitterWindowEx* m_pBottomSplitter{}; // Top contains view splitter, bottom queue (or queuelog splitter if in position 1)
+	CSplitterWindowEx* m_pQueueLogSplitter{};
+
+	CFileZillaEngineContext m_engineContext;
+	CContextControl* m_pContextControl{};
+
+	CStatusView* m_pStatusView{};
+	CQueueView* m_pQueueView{};
+	CLed* m_pActivityLed[2];
+#if FZ_MANUALUPDATECHECK
+	CUpdater* m_pUpdater{};
+	virtual void UpdaterStateChanged( UpdaterState s, build const& v );
+	void TriggerUpdateDialog();
+	wxTimer update_dialog_timer_;
+#endif
+
+	void ShowDirectoryTree(bool local, bool show);
+
+	void ShowDropdownMenu(wxMenu* pMenu, wxToolBar* pToolBar, wxCommandEvent& event);
+
+#ifdef __WXMSW__
+	virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
+#endif
+
+	void HandleResize();
+
+	void SetupKeyboardAccelerators();
+
+	void OnOptionsChanged(changed_options_t const& options);
+
+	virtual void OnEngineEvent(CFileZillaEngine* engine); // Before thread jump
+	void DoOnEngineEvent(CFileZillaEngine* engine); // After thread jump
+
+	// Event handlers
+	DECLARE_EVENT_TABLE()
+	void OnSize(wxSizeEvent& event);
+	void OnMenuHandler(wxCommandEvent& event);
+	void OnUpdateLedTooltip(wxCommandEvent&);
+	void OnDisconnect(wxCommandEvent&);
+	void OnCancel(wxCommandEvent&);
+	void OnClose(wxCloseEvent& event);
+	void OnReconnect(wxCommandEvent&);
+	void OnRefresh(wxCommandEvent&);
+	void OnTimer(wxTimerEvent& event);
+	void OnSiteManager(wxCommandEvent&);
+	void OnProcessQueue(wxCommandEvent& event);
+	void OnMenuEditSettings(wxCommandEvent&);
+	void OnToggleToolBar(wxCommandEvent& event);
+	void OnToggleLogView(wxCommandEvent&);
+	void OnToggleDirectoryTreeView(wxCommandEvent& event);
+	void OnToggleQueueView(wxCommandEvent& event);
+	void OnMenuHelpAbout(wxCommandEvent&);
+	void OnFilter(wxCommandEvent& event);
+	void OnFilterRightclicked(wxCommandEvent& event);
+#if FZ_MANUALUPDATECHECK
+	void OnCheckForUpdates(wxCommandEvent& event);
+#endif //FZ_MANUALUPDATECHECK
+	void OnSitemanagerDropdown(wxCommandEvent& event);
+	void OnNavigationKeyEvent(wxNavigationKeyEvent& event);
+	void OnChar(wxKeyEvent& event);
+	void OnActivate(wxActivateEvent& event);
+	void OnToolbarComparison(wxCommandEvent& event);
+	void OnToolbarComparisonDropdown(wxCommandEvent& event);
+	void OnDropdownComparisonMode(wxCommandEvent& event);
+	void OnDropdownComparisonHide(wxCommandEvent& event);
+	void OnSyncBrowse(wxCommandEvent& event);
+#ifdef __WXMAC__
+	void OnChildFocused(wxChildFocusEvent& event);
+#else
+	void OnIconize(wxIconizeEvent& event);
+	void OnTaskBarClick(wxTaskBarIconEvent&);
+#endif
+#ifdef __WXGTK__
+	void OnTaskBarClick_Delayed(wxCommandEvent& event);
+#endif
+	void OnSearch(wxCommandEvent& event);
+	void OnMenuNewTab(wxCommandEvent& event);
+	void OnMenuCloseTab(wxCommandEvent& event);
+
+	bool m_bInitDone{};
+	bool m_bQuit{};
+	wxEventType m_closeEvent{};
+	wxTimer m_closeEventTimer;
+
+	CAsyncRequestQueue* m_pAsyncRequestQueue{};
+	CMainFrameStateEventHandler* m_pStateEventHandler{};
+
+	CWindowStateManager* m_pWindowStateManager{};
+
+	CQueue* m_pQueuePane{};
+
+#ifndef __WXMAC__
+	wxTaskBarIcon* m_taskBarIcon{};
+#endif
+#ifdef __WXGTK__
+	// There is a bug in KDE, causing the window to toggle iconized state
+	// several times a second after uniconizing it from taskbar icon.
+	// Set m_taskbar_is_uniconizing in OnTaskBarClick and unset the
+	// next time the pending event processing runs and calls OnTaskBarClick_Delayed.
+	// While set, ignore iconize events.
+	bool m_taskbar_is_uniconizing{};
+#endif
+
+	int m_comparisonToggleAcceleratorId{};
+
+#ifdef __WXMAC__
+	int m_lastFocusedChild{-1};
+#endif
+};
+
+#endif
diff -Naupr a/src/interface/Makefile.am b/src/interface/Makefile.am
--- a/src/interface/Makefile.am	2020-01-29 05:30:03.000000000 +0100
+++ b/src/interface/Makefile.am	2020-02-22 05:30:03.000000000 +0100
@@ -140,13 +140,14 @@ filezilla_SOURCES = \
 		welcome_dialog.cpp \
 		window_state_manager.cpp \
 		wrapengine.cpp \
+		wxext/spinctrlex.cpp \
 		wxfilesystem_blob_handler.cpp \
 		xh_text_ex.cpp \
 		xmlfunctions.cpp \
 		xrc_helper.cpp
 
 
-noinst_HEADERS =
+noinst_HEADERS = \
 		aboutdialog.h \
 		asksavepassworddialog.h \
 		asyncrequestqueue.h \
@@ -266,6 +267,7 @@ noinst_HEADERS =
 		welcome_dialog.h \
 		window_state_manager.h \
 		wrapengine.h \
+		wxext/spinctrlex.h \
 		wxfilesystem_blob_handler.h \
 		xh_text_ex.h \
 		xmlfunctions.h \
diff -Naupr a/src/interface/Makefile.in b/src/interface/Makefile.in
--- a/src/interface/Makefile.in	2020-02-16 17:26:59.000000000 +0100
+++ b/src/interface/Makefile.in	2020-02-22 05:30:20.000000000 +0100
@@ -207,7 +207,7 @@ am__filezilla_SOURCES_DIST = aboutdialog
 	toolbar.cpp treectrlex.cpp updater.cpp update_dialog.cpp \
 	verifycertdialog.cpp verifyhostkeydialog.cpp view.cpp \
 	viewheader.cpp volume_enumerator.cpp welcome_dialog.cpp \
-	window_state_manager.cpp wrapengine.cpp \
+	window_state_manager.cpp wrapengine.cpp wxext/spinctrlex.cpp \
 	wxfilesystem_blob_handler.cpp xh_text_ex.cpp xmlfunctions.cpp \
 	xrc_helper.cpp overlay.cpp storj_key_interface.cpp \
 	osx_sandbox_userdirs.cpp
@@ -315,6 +315,7 @@ am_filezilla_OBJECTS = filezilla-aboutdi
 	filezilla-welcome_dialog.$(OBJEXT) \
 	filezilla-window_state_manager.$(OBJEXT) \
 	filezilla-wrapengine.$(OBJEXT) \
+	wxext/filezilla-spinctrlex.$(OBJEXT) \
 	filezilla-wxfilesystem_blob_handler.$(OBJEXT) \
 	filezilla-xh_text_ex.$(OBJEXT) \
 	filezilla-xmlfunctions.$(OBJEXT) \
@@ -469,7 +470,8 @@ am__depfiles_remade = ./$(DEPDIR)/filezi
 	settings/$(DEPDIR)/filezilla-optionspage_themes.Po \
 	settings/$(DEPDIR)/filezilla-optionspage_transfer.Po \
 	settings/$(DEPDIR)/filezilla-optionspage_updatecheck.Po \
-	settings/$(DEPDIR)/filezilla-settingsdialog.Po
+	settings/$(DEPDIR)/filezilla-settingsdialog.Po \
+	wxext/$(DEPDIR)/filezilla-spinctrlex.Po
 am__mv = mv -f
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
@@ -542,7 +544,55 @@ am__can_run_installinfo = \
     *) (install-info --version) >/dev/null 2>&1;; \
   esac
 DATA = $(dist_noinst_DATA) $(noinst_DATA)
-am__noinst_HEADERS_DIST = overlay.h storj_key_interface.h \
+am__noinst_HEADERS_DIST = aboutdialog.h asksavepassworddialog.h \
+	asyncrequestqueue.h aui_notebook_ex.h auto_ascii_files.h \
+	bookmarks_dialog.h buildinfo.h chmoddialog.h \
+	clearprivatedata.h cmdline.h commandqueue.h \
+	conditionaldialog.h context_control.h customheightlistctrl.h \
+	defaultfileexistsdlg.h dialogex.h dndobjects.h \
+	dragdropmanager.h drop_target_ex.h edithandler.h \
+	encoding_converter.h export.h fileexistsdlg.h filelistctrl.h \
+	filelist_statusbar.h filezilla.h filezillaapp.h filter.h \
+	filter_conditions_dialog.h filteredit.h file_utils.h \
+	fzputtygen_interface.h graphics.h import.h infotext.h \
+	inputdialog.h ipcmutex.h led.h listctrlex.h \
+	listingcomparison.h list_search_panel.h \
+	local_recursive_operation.h locale_initializer.h \
+	LocalListView.h LocalTreeView.h loginmanager.h Mainfrm.h \
+	manual_transfer.h menu_bar.h msgbox.h netconfwizard.h \
+	Options.h power_management.h queue.h queue_storage.h \
+	QueueView.h queueview_failed.h queueview_successful.h \
+	quickconnectbar.h recentserverlist.h recursive_operation.h \
+	recursive_operation_status.h remote_recursive_operation.h \
+	RemoteListView.h RemoteTreeView.h search.h serverdata.h \
+	settings/optionspage.h settings/optionspage_connection.h \
+	settings/optionspage_connection_active.h \
+	settings/optionspage_connection_ftp.h \
+	settings/optionspage_connection_passive.h \
+	settings/optionspage_connection_sftp.h \
+	settings/optionspage_dateformatting.h \
+	settings/optionspage_debug.h settings/optionspage_edit.h \
+	settings/optionspage_edit_associations.h \
+	settings/optionspage_fileexists.h \
+	settings/optionspage_filelists.h \
+	settings/optionspage_filetype.h \
+	settings/optionspage_ftpproxy.h \
+	settings/optionspage_interface.h \
+	settings/optionspage_language.h settings/optionspage_logging.h \
+	settings/optionspage_passwords.h settings/optionspage_proxy.h \
+	settings/optionspage_sizeformatting.h \
+	settings/optionspage_themes.h settings/optionspage_transfer.h \
+	settings/optionspage_updatecheck.h settings/settingsdialog.h \
+	sftp_crypt_info_dlg.h sitemanager.h sitemanager_controls.h \
+	sitemanager_dialog.h sitemanager_site.h sizeformatting.h \
+	speedlimits_dialog.h splitter.h state.h statuslinectrl.h \
+	statusbar.h StatusView.h systemimagelist.h textctrlex.h \
+	themeprovider.h timeformatting.h toolbar.h treectrlex.h \
+	updater.h update_dialog.h verifycertdialog.h \
+	verifyhostkeydialog.h view.h viewheader.h volume_enumerator.h \
+	welcome_dialog.h window_state_manager.h wrapengine.h \
+	wxext/spinctrlex.h wxfilesystem_blob_handler.h xh_text_ex.h \
+	xmlfunctions.h xrc_helper.h overlay.h storj_key_interface.h \
 	osx_sandbox_userdirs.h
 HEADERS = $(noinst_HEADERS)
 RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
@@ -848,10 +898,58 @@ filezilla_SOURCES = aboutdialog.cpp asks
 	toolbar.cpp treectrlex.cpp updater.cpp update_dialog.cpp \
 	verifycertdialog.cpp verifyhostkeydialog.cpp view.cpp \
 	viewheader.cpp volume_enumerator.cpp welcome_dialog.cpp \
-	window_state_manager.cpp wrapengine.cpp \
+	window_state_manager.cpp wrapengine.cpp wxext/spinctrlex.cpp \
 	wxfilesystem_blob_handler.cpp xh_text_ex.cpp xmlfunctions.cpp \
 	xrc_helper.cpp $(am__append_2) $(am__append_10)
-noinst_HEADERS = $(am__append_3) $(am__append_11)
+noinst_HEADERS = aboutdialog.h asksavepassworddialog.h \
+	asyncrequestqueue.h aui_notebook_ex.h auto_ascii_files.h \
+	bookmarks_dialog.h buildinfo.h chmoddialog.h \
+	clearprivatedata.h cmdline.h commandqueue.h \
+	conditionaldialog.h context_control.h customheightlistctrl.h \
+	defaultfileexistsdlg.h dialogex.h dndobjects.h \
+	dragdropmanager.h drop_target_ex.h edithandler.h \
+	encoding_converter.h export.h fileexistsdlg.h filelistctrl.h \
+	filelist_statusbar.h filezilla.h filezillaapp.h filter.h \
+	filter_conditions_dialog.h filteredit.h file_utils.h \
+	fzputtygen_interface.h graphics.h import.h infotext.h \
+	inputdialog.h ipcmutex.h led.h listctrlex.h \
+	listingcomparison.h list_search_panel.h \
+	local_recursive_operation.h locale_initializer.h \
+	LocalListView.h LocalTreeView.h loginmanager.h Mainfrm.h \
+	manual_transfer.h menu_bar.h msgbox.h netconfwizard.h \
+	Options.h power_management.h queue.h queue_storage.h \
+	QueueView.h queueview_failed.h queueview_successful.h \
+	quickconnectbar.h recentserverlist.h recursive_operation.h \
+	recursive_operation_status.h remote_recursive_operation.h \
+	RemoteListView.h RemoteTreeView.h search.h serverdata.h \
+	settings/optionspage.h settings/optionspage_connection.h \
+	settings/optionspage_connection_active.h \
+	settings/optionspage_connection_ftp.h \
+	settings/optionspage_connection_passive.h \
+	settings/optionspage_connection_sftp.h \
+	settings/optionspage_dateformatting.h \
+	settings/optionspage_debug.h settings/optionspage_edit.h \
+	settings/optionspage_edit_associations.h \
+	settings/optionspage_fileexists.h \
+	settings/optionspage_filelists.h \
+	settings/optionspage_filetype.h \
+	settings/optionspage_ftpproxy.h \
+	settings/optionspage_interface.h \
+	settings/optionspage_language.h settings/optionspage_logging.h \
+	settings/optionspage_passwords.h settings/optionspage_proxy.h \
+	settings/optionspage_sizeformatting.h \
+	settings/optionspage_themes.h settings/optionspage_transfer.h \
+	settings/optionspage_updatecheck.h settings/settingsdialog.h \
+	sftp_crypt_info_dlg.h sitemanager.h sitemanager_controls.h \
+	sitemanager_dialog.h sitemanager_site.h sizeformatting.h \
+	speedlimits_dialog.h splitter.h state.h statuslinectrl.h \
+	statusbar.h StatusView.h systemimagelist.h textctrlex.h \
+	themeprovider.h timeformatting.h toolbar.h treectrlex.h \
+	updater.h update_dialog.h verifycertdialog.h \
+	verifyhostkeydialog.h view.h viewheader.h volume_enumerator.h \
+	welcome_dialog.h window_state_manager.h wrapengine.h \
+	wxext/spinctrlex.h wxfilesystem_blob_handler.h xh_text_ex.h \
+	xmlfunctions.h xrc_helper.h $(am__append_3) $(am__append_11)
 @USE_RESOURCEFILE_TRUE@RESOURCEFILE = resources/filezilla.o
 
 # GTK+ libs, empty if not using wxGTK
@@ -1013,6 +1111,14 @@ settings/filezilla-optionspage_updateche
 	settings/$(am__dirstamp) settings/$(DEPDIR)/$(am__dirstamp)
 settings/filezilla-settingsdialog.$(OBJEXT): settings/$(am__dirstamp) \
 	settings/$(DEPDIR)/$(am__dirstamp)
+wxext/$(am__dirstamp):
+	@$(MKDIR_P) wxext
+	@: > wxext/$(am__dirstamp)
+wxext/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) wxext/$(DEPDIR)
+	@: > wxext/$(DEPDIR)/$(am__dirstamp)
+wxext/filezilla-spinctrlex.$(OBJEXT): wxext/$(am__dirstamp) \
+	wxext/$(DEPDIR)/$(am__dirstamp)
 
 filezilla$(EXEEXT): $(filezilla_OBJECTS) $(filezilla_DEPENDENCIES) $(EXTRA_filezilla_DEPENDENCIES) 
 	@rm -f filezilla$(EXEEXT)
@@ -1021,6 +1127,7 @@ filezilla$(EXEEXT): $(filezilla_OBJECTS)
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
 	-rm -f settings/*.$(OBJEXT)
+	-rm -f wxext/*.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
@@ -1152,6 +1259,7 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@settings/$(DEPDIR)/filezilla-optionspage_transfer.Po@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@settings/$(DEPDIR)/filezilla-optionspage_updatecheck.Po@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@settings/$(DEPDIR)/filezilla-settingsdialog.Po@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@wxext/$(DEPDIR)/filezilla-spinctrlex.Po@am__quote@ # am--include-marker
 
 $(am__depfiles_remade):
 	@$(MKDIR_P) $(@D)
@@ -2835,6 +2943,20 @@ filezilla-wrapengine.obj: wrapengine.cpp
 @AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(filezilla_CPPFLAGS) $(CPPFLAGS) $(filezilla_CXXFLAGS) $(CXXFLAGS) -c -o filezilla-wrapengine.obj `if test -f 'wrapengine.cpp'; then $(CYGPATH_W) 'wrapengine.cpp'; else $(CYGPATH_W) '$(srcdir)/wrapengine.cpp'; fi`
 
+wxext/filezilla-spinctrlex.o: wxext/spinctrlex.cpp
+@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(filezilla_CPPFLAGS) $(CPPFLAGS) $(filezilla_CXXFLAGS) $(CXXFLAGS) -MT wxext/filezilla-spinctrlex.o -MD -MP -MF wxext/$(DEPDIR)/filezilla-spinctrlex.Tpo -c -o wxext/filezilla-spinctrlex.o `test -f 'wxext/spinctrlex.cpp' || echo '$(srcdir)/'`wxext/spinctrlex.cpp
+@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wxext/$(DEPDIR)/filezilla-spinctrlex.Tpo wxext/$(DEPDIR)/filezilla-spinctrlex.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wxext/spinctrlex.cpp' object='wxext/filezilla-spinctrlex.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(filezilla_CPPFLAGS) $(CPPFLAGS) $(filezilla_CXXFLAGS) $(CXXFLAGS) -c -o wxext/filezilla-spinctrlex.o `test -f 'wxext/spinctrlex.cpp' || echo '$(srcdir)/'`wxext/spinctrlex.cpp
+
+wxext/filezilla-spinctrlex.obj: wxext/spinctrlex.cpp
+@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(filezilla_CPPFLAGS) $(CPPFLAGS) $(filezilla_CXXFLAGS) $(CXXFLAGS) -MT wxext/filezilla-spinctrlex.obj -MD -MP -MF wxext/$(DEPDIR)/filezilla-spinctrlex.Tpo -c -o wxext/filezilla-spinctrlex.obj `if test -f 'wxext/spinctrlex.cpp'; then $(CYGPATH_W) 'wxext/spinctrlex.cpp'; else $(CYGPATH_W) '$(srcdir)/wxext/spinctrlex.cpp'; fi`
+@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) wxext/$(DEPDIR)/filezilla-spinctrlex.Tpo wxext/$(DEPDIR)/filezilla-spinctrlex.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wxext/spinctrlex.cpp' object='wxext/filezilla-spinctrlex.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(filezilla_CPPFLAGS) $(CPPFLAGS) $(filezilla_CXXFLAGS) $(CXXFLAGS) -c -o wxext/filezilla-spinctrlex.obj `if test -f 'wxext/spinctrlex.cpp'; then $(CYGPATH_W) 'wxext/spinctrlex.cpp'; else $(CYGPATH_W) '$(srcdir)/wxext/spinctrlex.cpp'; fi`
+
 filezilla-wxfilesystem_blob_handler.o: wxfilesystem_blob_handler.cpp
 @am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(filezilla_CPPFLAGS) $(CPPFLAGS) $(filezilla_CXXFLAGS) $(CXXFLAGS) -MT filezilla-wxfilesystem_blob_handler.o -MD -MP -MF $(DEPDIR)/filezilla-wxfilesystem_blob_handler.Tpo -c -o filezilla-wxfilesystem_blob_handler.o `test -f 'wxfilesystem_blob_handler.cpp' || echo '$(srcdir)/'`wxfilesystem_blob_handler.cpp
 @am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/filezilla-wxfilesystem_blob_handler.Tpo $(DEPDIR)/filezilla-wxfilesystem_blob_handler.Po
@@ -3187,6 +3309,8 @@ distclean-generic:
 	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
 	-rm -f settings/$(DEPDIR)/$(am__dirstamp)
 	-rm -f settings/$(am__dirstamp)
+	-rm -f wxext/$(DEPDIR)/$(am__dirstamp)
+	-rm -f wxext/$(am__dirstamp)
 	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
 
 maintainer-clean-generic:
@@ -3326,6 +3450,7 @@ distclean: distclean-recursive
 	-rm -f settings/$(DEPDIR)/filezilla-optionspage_transfer.Po
 	-rm -f settings/$(DEPDIR)/filezilla-optionspage_updatecheck.Po
 	-rm -f settings/$(DEPDIR)/filezilla-settingsdialog.Po
+	-rm -f wxext/$(DEPDIR)/filezilla-spinctrlex.Po
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-tags
@@ -3498,6 +3623,7 @@ maintainer-clean: maintainer-clean-recur
 	-rm -f settings/$(DEPDIR)/filezilla-optionspage_transfer.Po
 	-rm -f settings/$(DEPDIR)/filezilla-optionspage_updatecheck.Po
 	-rm -f settings/$(DEPDIR)/filezilla-settingsdialog.Po
+	-rm -f wxext/$(DEPDIR)/filezilla-spinctrlex.Po
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
@@ -3537,129 +3663,6 @@ uninstall-am: uninstall-binPROGRAMS
 
 .PRECIOUS: Makefile
 
-		aboutdialog.h \
-		asksavepassworddialog.h \
-		asyncrequestqueue.h \
-		aui_notebook_ex.h \
-		auto_ascii_files.h \
-		bookmarks_dialog.h \
-		buildinfo.h \
-		chmoddialog.h \
-		clearprivatedata.h \
-		cmdline.h \
-		commandqueue.h \
-		conditionaldialog.h \
-		context_control.h \
-		customheightlistctrl.h \
-		defaultfileexistsdlg.h \
-		dialogex.h \
-		dndobjects.h \
-		dragdropmanager.h \
-		drop_target_ex.h \
-		edithandler.h \
-		encoding_converter.h \
-		export.h \
-		fileexistsdlg.h \
-		filelistctrl.h \
-		filelist_statusbar.h \
-		filezilla.h \
-		filezillaapp.h \
-		filter.h \
-		filter_conditions_dialog.h \
-		filteredit.h \
-		file_utils.h \
-		fzputtygen_interface.h \
-		graphics.h \
-		import.h \
-		infotext.h \
-		inputdialog.h \
-		ipcmutex.h \
-		led.h \
-		listctrlex.h \
-		listingcomparison.h \
-		list_search_panel.h \
-		local_recursive_operation.h \
-		locale_initializer.h \
-		LocalListView.h \
-		LocalTreeView.h \
-		loginmanager.h \
-		Mainfrm.h \
-		manual_transfer.h \
-		menu_bar.h \
-		msgbox.h \
-		netconfwizard.h \
-		Options.h \
-		power_management.h \
-		queue.h \
-		queue_storage.h \
-		QueueView.h \
-		queueview_failed.h \
-		queueview_successful.h \
-		quickconnectbar.h \
-		recentserverlist.h \
-		recursive_operation.h \
-		recursive_operation_status.h \
-		remote_recursive_operation.h \
-		RemoteListView.h \
-		RemoteTreeView.h \
-		search.h \
-		serverdata.h \
-		settings/optionspage.h \
-		settings/optionspage_connection.h \
-		settings/optionspage_connection_active.h \
-		settings/optionspage_connection_ftp.h \
-		settings/optionspage_connection_passive.h \
-		settings/optionspage_connection_sftp.h \
-		settings/optionspage_dateformatting.h \
-		settings/optionspage_debug.h \
-		settings/optionspage_edit.h \
-		settings/optionspage_edit_associations.h \
-		settings/optionspage_fileexists.h \
-		settings/optionspage_filelists.h \
-		settings/optionspage_filetype.h \
-		settings/optionspage_ftpproxy.h \
-		settings/optionspage_interface.h \
-		settings/optionspage_language.h \
-		settings/optionspage_logging.h \
-		settings/optionspage_passwords.h \
-		settings/optionspage_proxy.h \
-		settings/optionspage_sizeformatting.h \
-		settings/optionspage_themes.h \
-		settings/optionspage_transfer.h \
-		settings/optionspage_updatecheck.h \
-		settings/settingsdialog.h \
-		sftp_crypt_info_dlg.h \
-		sitemanager.h \
-		sitemanager_controls.h \
-		sitemanager_dialog.h \
-		sitemanager_site.h \
-		sizeformatting.h \
-		speedlimits_dialog.h \
-		splitter.h \
-		state.h \
-		statuslinectrl.h \
-		statusbar.h \
-		StatusView.h \
-		systemimagelist.h \
-		textctrlex.h \
-		themeprovider.h \
-		timeformatting.h \
-		toolbar.h \
-		treectrlex.h \
-		updater.h \
-		update_dialog.h \
-		verifycertdialog.h \
-		verifyhostkeydialog.h \
-		view.h \
-		viewheader.h \
-		volume_enumerator.h \
-		welcome_dialog.h \
-		window_state_manager.h \
-		wrapengine.h \
-		wxfilesystem_blob_handler.h \
-		xh_text_ex.h \
-		xmlfunctions.h \
-		xrc_helper.h
 
 $(top_builddir)/FileZilla.app/Contents/MacOS/filezilla$(EXEEXT): filezilla
 	mkdir -p $(top_builddir)/FileZilla.app/Contents/MacOS
diff -Naupr a/src/interface/Options.cpp b/src/interface/Options.cpp
--- a/src/interface/Options.cpp	2020-02-15 05:30:03.000000000 +0100
+++ b/src/interface/Options.cpp	2020-02-18 17:28:51.000000000 +0100
@@ -629,6 +629,14 @@ int COptions::Validate(unsigned int nID,
 			value = 60 * 60 * 24;
 		}
 		break;
+	case OPTION_ICONS_SCALE:
+		if (value < 25) {
+			value = 25;
+		}
+		else if (value > 400) {
+			value = 400;
+		}
+		break;
 	}
 	return value;
 }
diff -Naupr a/src/interface/Options.h b/src/interface/Options.h
--- a/src/interface/Options.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/Options.h	2020-02-15 05:30:03.000000000 +0100
@@ -0,0 +1,199 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONS_HEADER
+#define FILEZILLA_INTERFACE_OPTIONS_HEADER
+
+#include "local_path.h"
+
+#include <option_change_event_handler.h>
+
+#include <libfilezilla/mutex.hpp>
+
+#include <wx/timer.h>
+
+#include "xmlfunctions.h"
+
+enum interfaceOptions
+{
+	OPTION_NUMTRANSFERS = OPTIONS_ENGINE_NUM,
+	OPTION_ASCIIBINARY,
+	OPTION_ASCIIFILES,
+	OPTION_ASCIINOEXT,
+	OPTION_ASCIIDOTFILE,
+	OPTION_LANGUAGE,
+	OPTION_CONCURRENTDOWNLOADLIMIT,
+	OPTION_CONCURRENTUPLOADLIMIT,
+	OPTION_UPDATECHECK,
+	OPTION_UPDATECHECK_INTERVAL,
+	OPTION_UPDATECHECK_LASTDATE,
+	OPTION_UPDATECHECK_LASTVERSION,
+	OPTION_UPDATECHECK_NEWVERSION,
+	OPTION_UPDATECHECK_CHECKBETA,
+	OPTION_DEBUG_MENU,
+	OPTION_FILEEXISTS_DOWNLOAD,
+	OPTION_FILEEXISTS_UPLOAD,
+	OPTION_ASCIIRESUME,
+	OPTION_GREETINGVERSION,
+	OPTION_GREETINGRESOURCES,
+	OPTION_ONETIME_DIALOGS,
+	OPTION_SHOW_TREE_LOCAL,
+	OPTION_SHOW_TREE_REMOTE,
+	OPTION_FILEPANE_LAYOUT,
+	OPTION_FILEPANE_SWAP,
+	OPTION_FILELIST_DIRSORT,
+	OPTION_FILELIST_NAMESORT,
+	OPTION_QUEUE_SUCCESSFUL_AUTOCLEAR,
+	OPTION_QUEUE_COLUMN_WIDTHS,
+	OPTION_LOCALFILELIST_COLUMN_WIDTHS,
+	OPTION_REMOTEFILELIST_COLUMN_WIDTHS,
+	OPTION_MAINWINDOW_POSITION,
+	OPTION_MAINWINDOW_SPLITTER_POSITION,
+	OPTION_LOCALFILELIST_SORTORDER,
+	OPTION_REMOTEFILELIST_SORTORDER,
+	OPTION_TIME_FORMAT,
+	OPTION_DATE_FORMAT,
+	OPTION_SHOW_MESSAGELOG,
+	OPTION_SHOW_QUEUE,
+	OPTION_EDIT_DEFAULTEDITOR,
+	OPTION_EDIT_ALWAYSDEFAULT,
+	OPTION_EDIT_INHERITASSOCIATIONS,
+	OPTION_EDIT_CUSTOMASSOCIATIONS,
+	OPTION_COMPARISONMODE,
+	OPTION_COMPARISON_THRESHOLD,
+	OPTION_SITEMANAGER_POSITION,
+	OPTION_ICONS_THEME,
+	OPTION_ICONS_SCALE,
+	OPTION_MESSAGELOG_TIMESTAMP,
+	OPTION_SITEMANAGER_LASTSELECTED,
+	OPTION_LOCALFILELIST_COLUMN_SHOWN,
+	OPTION_REMOTEFILELIST_COLUMN_SHOWN,
+	OPTION_LOCALFILELIST_COLUMN_ORDER,
+	OPTION_REMOTEFILELIST_COLUMN_ORDER,
+	OPTION_FILELIST_STATUSBAR,
+	OPTION_FILTERTOGGLESTATE,
+	OPTION_SHOW_QUICKCONNECT,
+	OPTION_MESSAGELOG_POSITION,
+	OPTION_DOUBLECLICK_ACTION_FILE,
+	OPTION_DOUBLECLICK_ACTION_DIRECTORY,
+	OPTION_MINIMIZE_TRAY,
+	OPTION_SEARCH_COLUMN_WIDTHS,
+	OPTION_SEARCH_COLUMN_SHOWN,
+	OPTION_SEARCH_COLUMN_ORDER,
+	OPTION_SEARCH_SIZE,
+	OPTION_COMPARE_HIDEIDENTICAL,
+	OPTION_SEARCH_SORTORDER,
+	OPTION_EDIT_TRACK_LOCAL,
+	OPTION_PREVENT_IDLESLEEP,
+	OPTION_FILTEREDIT_SIZE,
+	OPTION_INVALID_CHAR_REPLACE_ENABLE,
+	OPTION_INVALID_CHAR_REPLACE,
+	OPTION_ALREADYCONNECTED_CHOICE,
+	OPTION_EDITSTATUSDIALOG_SIZE,
+	OPTION_SPEED_DISPLAY,
+	OPTION_TOOLBAR_HIDDEN,
+	OPTION_STRIP_VMS_REVISION,
+	OPTION_STARTUP_ACTION,
+	OPTION_PROMPTPASSWORDSAVE,
+	OPTION_PERSISTENT_CHOICES,
+	OPTION_QUEUE_COMPLETION_ACTION,
+	OPTION_QUEUE_COMPLETION_COMMAND,
+	OPTION_DND_DISABLED,
+	OPTION_DISABLE_UPDATE_FOOTER,
+	OPTION_MASTERPASSWORDENCRYPTOR,
+	OPTION_TAB_DATA,
+
+	// Default/internal options
+	OPTION_DEFAULT_SETTINGSDIR, // guaranteed to be (back)slash-terminated
+	OPTION_DEFAULT_KIOSKMODE,
+	OPTION_DEFAULT_DISABLEUPDATECHECK,
+	OPTION_DEFAULT_CACHE_DIR,
+
+	// Has to be last element
+	OPTIONS_NUM
+};
+
+struct t_OptionsCache
+{
+	bool operator==(std::wstring_view const& v) const { return strValue == v; }
+	bool operator==(int v) const { return numValue == v; }
+	bool operator==(std::unique_ptr<pugi::xml_document> const& v) const { return *xmlValue == *v; }
+	t_OptionsCache& operator=(std::wstring_view const& v);
+	t_OptionsCache& operator=(std::wstring && v);
+	t_OptionsCache& operator=(int v);
+	t_OptionsCache& operator=(std::unique_ptr<pugi::xml_document> const& v);
+
+	bool from_default;
+	int numValue;
+	std::wstring strValue;
+	std::unique_ptr<pugi::xml_document> xmlValue;
+};
+
+class CXmlFile;
+class COptions final : public wxEvtHandler, public COptionsBase
+{
+public:
+	virtual int GetOptionVal(unsigned int nID);
+	virtual std::wstring GetOption(unsigned int nID);
+	virtual std::unique_ptr<pugi::xml_document> GetOptionXml(unsigned int nID);
+
+	virtual bool SetOption(unsigned int nID, int value);
+	virtual bool SetOption(unsigned int nID, std::wstring_view const& value);
+	virtual bool SetOptionXml(unsigned int nID, pugi::xml_node const& value);
+
+	bool OptionFromFzDefaultsXml(unsigned int nID);
+
+	static COptions* Get();
+	static void Init();
+	static void Destroy();
+
+	void Import(pugi::xml_node element);
+
+	void RequireCleanup();
+	void SaveIfNeeded();
+
+	static CLocalPath GetUnadjustedSettingsDir();
+	CLocalPath GetCacheDirectory();
+
+protected:
+	COptions();
+	virtual ~COptions();
+
+	int Validate(unsigned int nID, int value);
+	std::wstring Validate(unsigned int nID, std::wstring_view const& value);
+	std::unique_ptr<pugi::xml_document> Validate(unsigned int nID, std::unique_ptr<pugi::xml_document> const& value);
+
+	template<typename T> void ContinueSetOption(unsigned int nID, T const& value);
+	void SetXmlValue(unsigned int nID, int value);
+	void SetXmlValue(unsigned int nID, std::wstring_view const& value);
+	void SetXmlValue(unsigned int nID, std::unique_ptr<pugi::xml_document> const& value);
+
+	pugi::xml_node CreateSettingsXmlElement();
+
+	std::map<std::string, unsigned int> GetNameOptionMap() const;
+	void LoadOptions(std::map<std::string, unsigned int> const& nameOptionMap, pugi::xml_node settings = pugi::xml_node());
+	void LoadGlobalDefaultOptions(std::map<std::string, unsigned int> const& nameOptionMap);
+	void LoadOptionFromElement(pugi::xml_node option, std::map<std::string, unsigned int> const& nameOptionMap, bool allowDefault);
+	CLocalPath InitSettingsDir();
+	void SetDefaultValues();
+
+	bool Cleanup(); // Removes all unknown elements from the XML
+	void Save();
+
+	void NotifyChangedOptions();
+
+	std::unique_ptr<CXmlFile> xmlFile_;
+
+	t_OptionsCache m_optionsCache[OPTIONS_NUM];
+
+	static COptions* m_theOptions;
+
+	wxTimer m_save_timer;
+	bool needsCleanup_{};
+
+	DECLARE_EVENT_TABLE()
+	void OnTimer(wxTimerEvent& event);
+
+	fz::mutex m_sync_{false};
+
+	changed_options_t changedOptions_;
+};
+
+#endif
diff -Naupr a/src/interface/QueueView.h b/src/interface/QueueView.h
--- a/src/interface/QueueView.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/QueueView.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,322 @@
+#ifndef FILEZILLA_INTERFACE_QUEUEVIEW_HEADER
+#define FILEZILLA_INTERFACE_QUEUEVIEW_HEADER
+
+#include "dndobjects.h"
+#include "queue.h"
+
+#include <libfilezilla_engine.h>
+#include <option_change_event_handler.h>
+
+#include <set>
+#include <wx/progdlg.h>
+
+#include "queue_storage.h"
+#include "local_recursive_operation.h"
+#include "notification.h"
+
+
+namespace ActionAfterState {
+enum type {
+	None,
+	ShowNotification,
+	RequestAttention,
+	Close,
+	RunCommand,
+	PlaySound,
+
+	// On Windows and OS X, wx can reboot or shutdown the system as well.
+	Reboot,
+	Shutdown,
+	Sleep,
+	CloseOnce,
+
+	Count
+};
+}
+
+class CStatusLineCtrl;
+class CFileItem;
+struct t_EngineData final
+{
+	t_EngineData()
+		: pEngine()
+		, active()
+		, transient()
+		, state(t_EngineData::none)
+		, pItem()
+		, pStatusLineCtrl()
+		, m_idleDisconnectTimer()
+	{
+	}
+
+	~t_EngineData()
+	{
+		wxASSERT(!active);
+		if (!transient)
+			delete pEngine;
+		delete m_idleDisconnectTimer;
+	}
+
+	CFileZillaEngine* pEngine;
+	bool active;
+	bool transient;
+
+	enum EngineDataState
+	{
+		none,
+		cancel,
+		disconnect,
+		connect,
+		transfer,
+		list,
+		mkdir,
+		askpassword,
+		waitprimary
+	} state;
+
+	CFileItem* pItem;
+	Site lastSite;
+	CStatusLineCtrl* pStatusLineCtrl;
+	wxTimer* m_idleDisconnectTimer;
+};
+
+class CMainFrame;
+class CStatusLineCtrl;
+class CAsyncRequestQueue;
+class CQueue;
+#if WITH_LIBDBUS
+class CDesktopNotification;
+#elif defined(__WXGTK__) || defined(__WXMSW__)
+class wxNotificationMessage;
+#endif
+
+class CActionAfterBlocker final
+{
+public:
+	CActionAfterBlocker(CQueueView& queueView)
+		: queueView_(queueView)
+	{
+	}
+
+	~CActionAfterBlocker();
+
+private:
+	friend class CQueueView;
+	CQueueView& queueView_;
+	bool trigger_{};
+};
+
+class CQueueView final : public CQueueViewBase, public COptionChangeEventHandler, public CGlobalStateEventHandler, private EngineNotificationHandler
+{
+	friend class CQueueViewDropTarget;
+	friend class CQueueViewFailed;
+	friend class CActionAfterBlocker;
+
+public:
+	CQueueView(CQueue* parent, int index, CMainFrame* pMainFrame, CAsyncRequestQueue* pAsyncRequestQueue);
+	virtual ~CQueueView();
+
+	bool QueueFile(const bool queueOnly, const bool download,
+		std::wstring const& localFile, std::wstring const& remoteFile,
+		const CLocalPath& localPath, const CServerPath& remotePath,
+		Site const& site, int64_t size, CEditHandler::fileType edit = CEditHandler::none,
+		QueuePriority priority = QueuePriority::normal);
+
+	void QueueFile_Finish(const bool start); // Need to be called after QueueFile
+	bool QueueFiles(const bool queueOnly, CLocalPath const& localPath, const CRemoteDataObject& dataObject);
+	bool QueueFiles(const bool queueOnly, Site const& site, CLocalRecursiveOperation::listing const& listing);
+
+	bool empty() const;
+	int IsActive() const { return m_activeMode; }
+	bool SetActive(bool active = true);
+	bool Quit();
+
+	// This sets the default file exists action for all files currently in queue.
+	void SetDefaultFileExistsAction(CFileExistsNotification::OverwriteAction action, const TransferDirection direction);
+
+	void UpdateItemSize(CFileItem* pItem, int64_t size);
+
+	void RemoveAll();
+
+	void LoadQueue();
+	void LoadQueueFromXML();
+	void ImportQueue(pugi::xml_node element, bool updateSelections);
+
+	virtual void InsertItem(CServerItem* pServerItem, CQueueItem* pItem) override;
+
+	virtual void CommitChanges() override;
+
+	void ProcessNotification(CFileZillaEngine* pEngine, std::unique_ptr<CNotification>&& pNotification);
+
+	void RenameFileInTransfer(CFileZillaEngine *pEngine, const wxString& newName, bool local);
+
+	static std::wstring ReplaceInvalidCharacters(std::wstring const& filename);
+
+	// Get the current download speed as the sum of all active downloads.
+	// Unit is byte/s.
+	wxFileOffset GetCurrentDownloadSpeed();
+
+	// Get the current upload speed as the sum of all active uploads.
+	// Unit is byte/s.
+	wxFileOffset GetCurrentUploadSpeed();
+
+	std::shared_ptr<CActionAfterBlocker> GetActionAfterBlocker();
+
+protected:
+
+#ifdef __WXMSW__
+	WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
+#endif
+
+	virtual void OnOptionsChanged(changed_options_t const& options) override;
+
+	void AdvanceQueue(bool refresh = true);
+	bool TryStartNextTransfer();
+
+	// Called from TryStartNextTransfer(), checks
+	// whether it is allowed to start another transfer on that server item
+	bool CanStartTransfer(const CServerItem& server_item, t_EngineData *&pEngineData);
+
+	void ProcessReply(t_EngineData* pEngineData, COperationNotification const& notification);
+	void SendNextCommand(t_EngineData& engineData);
+
+	enum class ResetReason
+	{
+		success,
+		failure,
+		reset,
+		retry,
+		remove
+	};
+
+	void ResetEngine(t_EngineData& data, const ResetReason reason);
+	void DeleteEngines();
+
+	virtual bool RemoveItem(CQueueItem* item, bool destroy, bool updateItemCount = true, bool updateSelections = true, bool forward = true) override;
+
+	// Stops processing of given item
+	// Returns true on success, false if it would block
+	bool StopItem(CFileItem* item);
+	bool StopItem(CServerItem* pServerItem, bool updateSelections);
+
+	void CheckQueueState();
+	bool IncreaseErrorCount(t_EngineData& engineData);
+	void UpdateStatusLinePositions();
+	void CalculateQueueSize();
+	void DisplayQueueSize();
+	void SaveQueue(bool silent = false);
+
+	bool IsActionAfter(ActionAfterState::type);
+	void ActionAfter(bool warned = false);
+#if defined(__WXMSW__) || defined(__WXMAC__)
+	void ActionAfterWarnUser(ActionAfterState::type s);
+#endif
+
+	void ProcessNotification(t_EngineData* pEngineData, std::unique_ptr<CNotification> && pNotification);
+
+	// Tries to refresh the current remote directory listing
+	// if there's an idle engine connected to the current server of
+	// the primary connection.
+	void TryRefreshListings();
+	CServer m_last_refresh_server;
+	CServerPath m_last_refresh_path;
+	fz::monotonic_clock m_last_refresh_listing_time;
+
+	bool IsOtherEngineConnected(t_EngineData* pEngineData);
+
+	t_EngineData* GetIdleEngine(Site const& site = Site(), bool allowTransient = false);
+	t_EngineData* GetEngineData(const CFileZillaEngine* pEngine);
+
+	std::vector<t_EngineData*> m_engineData;
+	std::list<CStatusLineCtrl*> m_statusLineList;
+
+	/*
+	 * Don't update status line positions if m_waitStatusLineUpdate is true.
+	 * This assures we are updating the status line positions only once,
+	 * and not multiple times (for example inside a loop).
+	 */
+	bool m_waitStatusLineUpdate{};
+
+	// Remember last top item in UpdateStatusLinePositions()
+	int m_lastTopItem{-1};
+
+	int m_activeCount{};
+	int m_activeCountDown{};
+	int m_activeCountUp{};
+	int m_activeMode{}; // 0 inactive, 1 only immediate transfers, 2 all
+	int m_quit{};
+
+	ActionAfterState::type m_actionAfterState;
+#if defined(__WXMSW__) || defined(__WXMAC__)
+	wxTimer* m_actionAfterTimer{};
+	wxProgressDialog* m_actionAfterWarnDialog{};
+	int m_actionAfterTimerCount{};
+	int m_actionAfterTimerId{-1};
+#endif
+
+	int64_t m_totalQueueSize{};
+	int m_filesWithUnknownSize{};
+
+	CMainFrame* m_pMainFrame;
+	CAsyncRequestQueue* m_pAsyncRequestQueue;
+
+	std::list<CFileZillaEngine*> m_waitingForPassword;
+
+	virtual void OnPostScroll() override;
+
+	int GetLineHeight();
+	int m_line_height;
+#ifdef __WXMSW__
+	int m_header_height;
+#endif
+
+	wxTimer m_resize_timer;
+
+	void ReleaseExclusiveEngineLock(CFileZillaEngine* pEngine);
+
+#if WITH_LIBDBUS
+	std::unique_ptr<CDesktopNotification> m_desktop_notification;
+#elif defined(__WXGTK__) || defined(__WXMSW__)
+	std::unique_ptr<wxNotificationMessage> m_desktop_notification;
+#endif
+
+	CQueueStorage m_queue_storage;
+
+	// Get the current transfer speed.
+	// Unit is byte/s.
+	wxFileOffset GetCurrentSpeed(bool countDownload, bool countUpload);
+
+	virtual void OnEngineEvent(CFileZillaEngine* engine) override;
+	void DoOnEngineEvent(CFileZillaEngine* engine);
+
+	void OnAskPassword();
+
+	std::weak_ptr<CActionAfterBlocker> m_actionAfterBlocker;
+
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+
+	DECLARE_EVENT_TABLE()
+	void OnChar(wxKeyEvent& event);
+
+	// Context menu handlers
+	void OnContextMenu(wxContextMenuEvent& event);
+	void OnProcessQueue(wxCommandEvent& event);
+	void OnStopAndClear(wxCommandEvent& event);
+	void OnRemoveSelected(wxCommandEvent& event);
+	void OnSetDefaultFileExistsAction(wxCommandEvent& event);
+
+	void OnTimer(wxTimerEvent& evnet);
+
+	void OnSetPriority(wxCommandEvent& event);
+
+	void OnExclusiveEngineRequestGranted(wxCommandEvent& event);
+
+	void OnActionAfter(wxCommandEvent& event);
+	void OnActionAfterTimerTick();
+
+	void OnSize(wxSizeEvent& event);
+
+	void OnColumnClicked(wxListEvent &event);
+};
+
+#endif
diff -Naupr a/src/interface/RemoteListView.h b/src/interface/RemoteListView.h
--- a/src/interface/RemoteListView.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/RemoteListView.h	2020-01-24 15:21:03.000000000 +0100
@@ -0,0 +1,142 @@
+#ifndef FILEZILLA_INTERFACE_REMOTELISTVIEW_HEADER
+#define FILEZILLA_INTERFACE_REMOTELISTVIEW_HEADER
+
+#include "state.h"
+#include "listctrlex.h"
+#include "filelistctrl.h"
+
+class CChmodDialog;
+class CInfoText;
+class CQueueView;
+class CRemoteListViewDropTarget;
+class CView;
+class CWindowTinter;
+
+class CRemoteListView final : public CFileListCtrl<CGenericFileData>, CStateEventHandler
+{
+	friend class CRemoteListViewDropTarget;
+public:
+	CRemoteListView(CView* pParent, CState& state, CQueueView* pQueue);
+	virtual ~CRemoteListView();
+
+	virtual bool CanStartComparison();
+	virtual void StartComparison();
+	virtual bool get_next_file(std::wstring_view & name, std::wstring & path, bool &dir, int64_t &size, fz::datetime& date) override;
+	virtual void FinishComparison();
+	virtual void OnExitComparisonMode();
+
+	void LinkIsNotDir(CServerPath const& path, std::wstring const& link);
+
+	struct ChmodUICommand 
+	{
+		wxWindow		*parentWindow;
+		char			*permissions;
+		int				fileCount;
+		int				dirCount;
+		std::wstring	const &name;
+	};
+
+	typedef std::function<void(ChmodUICommand &, CState &)> ChmodHandler;
+
+	static std::map<ServerProtocol, CRemoteListView::ChmodHandler> chmodHandlers;
+	
+protected:
+	virtual wxString GetItemText(int item, unsigned int column);
+
+	// Clears all selections and returns the list of items that were selected
+	std::vector<std::wstring> RememberSelectedItems(std::wstring & focused, int & focusItem);
+
+	// Select a list of items based in their names.
+	// Sort order may not change between call to RememberSelectedItems and
+	// ReselectItems
+	void ReselectItems(std::vector<std::wstring>& selectedNames, std::wstring focused, int focusedItem, bool ensureVisible = false);
+
+
+	// Declared const due to design error in wxWidgets.
+	// Won't be fixed since a fix would break backwards compatibility
+	// Both functions use a const_cast<CLocalListView *>(this) and modify
+	// the instance.
+	virtual wxListItemAttr* OnGetItemAttr(long item) const;
+	virtual int OnGetItemImage(long item) const;
+
+	virtual bool ItemIsDir(int index) const;
+	virtual int64_t ItemGetSize(int index) const;
+
+	bool IsItemValid(unsigned int item) const;
+	int GetItemIndex(unsigned int item) const;
+
+	virtual std::unique_ptr<CFileListCtrlSortBase> GetSortComparisonObject() override;
+
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+	void ApplyCurrentFilter();
+	void SetDirectoryListing(std::shared_ptr<CDirectoryListing> const& pDirectoryListing);
+	bool UpdateDirectoryListing(std::shared_ptr<CDirectoryListing> const& pDirectoryListing);
+	void UpdateDirectoryListing_Removed(std::shared_ptr<CDirectoryListing> const& pDirectoryListing);
+	void UpdateDirectoryListing_Added(std::shared_ptr<CDirectoryListing> const& pDirectoryListing);
+
+#ifdef __WXDEBUG__
+	void ValidateIndexMapping();
+#endif
+
+	virtual void OnNavigationEvent(bool forward);
+
+	std::shared_ptr<CDirectoryListing> m_pDirectoryListing;
+
+	// Caller is responsible to check selection is valid!
+	void TransferSelectedFiles(const CLocalPath& local_parent, bool queue_only);
+
+	void HandleGenericChmod(ChmodUICommand &command);
+
+	// Cache icon for directories, no need to calculate it multiple times
+	int m_dirIcon;
+
+	CInfoText* m_pInfoText{};
+	void SetInfoText();
+
+	virtual bool OnBeginRename(const wxListEvent& event);
+	virtual bool OnAcceptRename(const wxListEvent& event);
+
+#ifdef __WXMSW__
+	virtual int GetOverlayIndex(int item);
+#endif
+
+	int m_dropTarget;
+
+	// Used to track state for resolving symlinks
+	// While being resolved, global state might have changed
+	// already.
+	struct t_linkResolveState
+	{
+		Site site;
+		CServerPath remote_path;
+		std::wstring link;
+		CLocalPath local_path;
+	};
+	std::unique_ptr<t_linkResolveState> m_pLinkResolveState;
+
+	CServerPath MenuMkdir();
+
+	std::unique_ptr<CWindowTinter> m_windowTinter;
+
+	CView *m_parentView{};
+	
+	DECLARE_EVENT_TABLE()
+	void OnItemActivated(wxListEvent &event);
+	void OnContextMenu(wxContextMenuEvent& event);
+	void OnMenuDownload(wxCommandEvent& event);
+	void OnMenuMkdir(wxCommandEvent&);
+	void OnMenuMkdirChgDir(wxCommandEvent&);
+	void OnMenuDelete(wxCommandEvent&);
+	void OnMenuRename(wxCommandEvent&);
+	void OnKeyDown(wxKeyEvent& event);
+	void OnMenuChmod(wxCommandEvent& event);
+	void OnSize(wxSizeEvent& event);
+	void OnBeginDrag(wxListEvent&);
+	void OnMenuEdit(wxCommandEvent&);
+	void OnMenuEnter(wxCommandEvent&);
+	void OnMenuGeturl(wxCommandEvent& event);
+	void OnMenuRefresh(wxCommandEvent&);
+	void OnMenuNewfile(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/RemoteTreeView.h b/src/interface/RemoteTreeView.h
--- a/src/interface/RemoteTreeView.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/RemoteTreeView.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,80 @@
+#ifndef FILEZILLA_INTERFACE_REMOTETREEVIEW_HEADER
+#define FILEZILLA_INTERFACE_REMOTETREEVIEW_HEADER
+
+#include <option_change_event_handler.h>
+#include "systemimagelist.h"
+#include "state.h"
+#include "filter.h"
+#include "treectrlex.h"
+
+class CQueueView;
+class CWindowTinter;
+class CRemoteTreeView final : public wxTreeCtrlEx, CSystemImageList, CStateEventHandler, COptionChangeEventHandler
+{
+	friend class CRemoteTreeViewDropTarget;
+
+public:
+	CRemoteTreeView(wxWindow* parent, wxWindowID id, CState& state, CQueueView* pQueue);
+	virtual ~CRemoteTreeView();
+
+protected:
+	wxTreeItemId MakeParent(CServerPath path, bool select);
+	void SetDirectoryListing(std::shared_ptr<CDirectoryListing> const& pListing, bool primary);
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const&, const void*) override;
+
+	void DisplayItem(wxTreeItemId parent, const CDirectoryListing& listing);
+	void RefreshItem(wxTreeItemId parent, const CDirectoryListing& listing, bool will_select_parent);
+
+	void SetItemImages(wxTreeItemId item, bool unknown);
+
+	bool HasSubdirs(const CDirectoryListing& listing, const CFilterManager& filter);
+
+	CServerPath GetPathFromItem(const wxTreeItemId& item) const;
+
+	bool ListExpand(wxTreeItemId item);
+
+	void ApplyFilters(bool resort);
+
+	CQueueView* m_pQueue;
+
+	void CreateImageList();
+	wxBitmap CreateIcon(int index, wxString const& overlay = wxString());
+	wxImageList* m_pImageList{};
+
+	// Set to true in SetDirectoryListing.
+	// Used to suspends event processing in OnItemExpanding for example
+	bool m_busy{};
+
+	wxTreeItemId m_ExpandAfterList;
+
+	wxTreeItemId m_dropHighlight;
+
+	CServerPath MenuMkdir();
+
+	void UpdateSortMode();
+
+	virtual void OnOptionsChanged(changed_options_t const& options);
+
+	std::unique_ptr<CWindowTinter> m_windowTinter;
+
+	wxTreeItemId m_contextMenuItem;
+
+	DECLARE_EVENT_TABLE()
+	void OnItemExpanding(wxTreeEvent& event);
+	void OnSelectionChanged(wxTreeEvent& event);
+	void OnItemActivated(wxTreeEvent& event);
+	void OnBeginDrag(wxTreeEvent& event);
+	void OnContextMenu(wxTreeEvent& event);
+	void OnMenuChmod(wxCommandEvent&);
+	void OnMenuDownload(wxCommandEvent& event);
+	void OnMenuDelete(wxCommandEvent&);
+	void OnMenuRename(wxCommandEvent&);
+	void OnBeginLabelEdit(wxTreeEvent& event);
+	void OnEndLabelEdit(wxTreeEvent& event);
+	void OnMkdir(wxCommandEvent&);
+	void OnMenuMkdirChgDir(wxCommandEvent&);
+	void OnChar(wxKeyEvent& event);
+	void OnMenuGeturl(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/StatusView.h b/src/interface/StatusView.h
--- a/src/interface/StatusView.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/StatusView.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,77 @@
+#ifndef FILEZILLA_INTERFACE_STATUSVIEW_HEADER
+#define FILEZILLA_INTERFACE_STATUSVIEW_HEADER
+
+#ifdef __WXMSW__
+#include "richedit.h"
+#endif
+
+#include <wx/timer.h>
+
+#include "option_change_event_handler.h"
+
+class CFastTextCtrl;
+class CStatusView final : public wxNavigationEnabled<wxWindow>, private COptionChangeEventHandler
+{
+public:
+	CStatusView(wxWindow* parent, wxWindowID id);
+	virtual ~CStatusView();
+
+	void AddToLog(CLogmsgNotification const& pNotification);
+	void AddToLog(logmsg::type messagetype, std::wstring const& message, fz::datetime const& time);
+
+	void InitDefAttr();
+
+	virtual void SetFocus();
+
+	virtual bool Show(bool show = true);
+
+private:
+
+	int m_nLineCount{};
+	CFastTextCtrl *m_pTextCtrl{};
+
+	void OnOptionsChanged(changed_options_t const& options);
+
+	DECLARE_EVENT_TABLE()
+	void OnSize(wxSizeEvent &);
+	void OnContextMenu(wxContextMenuEvent&);
+	void OnClear(wxCommandEvent& );
+	void OnCopy(wxCommandEvent& );
+	void OnTimer(wxTimerEvent&);
+
+	std::list<int> m_lineLengths;
+	std::list<int> m_unusedLineLengths;
+
+	struct t_attributeCache
+	{
+		std::wstring prefix;
+		size_t len{};
+		wxTextAttr attr;
+#ifdef __WXMSW__
+		CHARFORMAT2 cf{};
+#endif
+	} m_attributeCache[sizeof(logmsg::type) * 8];
+
+	bool m_rtl{};
+
+	bool m_shown{};
+
+	// Don't update actual log window if not shown,
+	// do it later when showing the window.
+	struct t_line
+	{
+		logmsg::type messagetype;
+		std::wstring message;
+		fz::datetime time;
+	};
+	std::list<t_line> m_hiddenLines;
+
+	bool m_showTimestamps{};
+	fz::datetime m_lastTime;
+	std::wstring m_lastTimeString;
+
+	// Re-using the same string to format the message in avoids uneeded allocations
+	std::wstring m_formattedMessage;
+};
+
+#endif
diff -Naupr a/src/interface/aboutdialog.h b/src/interface/aboutdialog.h
--- a/src/interface/aboutdialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/aboutdialog.h	2020-01-24 15:21:03.000000000 +0100
@@ -0,0 +1,17 @@
+#ifndef FILEZILLA_INTERFACE_ABOUTDIALOG_HEADER
+#define FILEZILLA_INTERFACE_ABOUTDIALOG_HEADER
+
+#include "dialogex.h"
+
+class CAboutDialog final : public wxDialogEx
+{
+public:
+	CAboutDialog() = default;
+
+	bool Create(wxWindow* parent);
+
+protected:
+	void OnCopy();
+};
+
+#endif
diff -Naupr a/src/interface/asksavepassworddialog.h b/src/interface/asksavepassworddialog.h
--- a/src/interface/asksavepassworddialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/asksavepassworddialog.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,16 @@
+#ifndef FILEZILLA_INTERFACE_ASKSAVEPASSWORDDIALOG_HEADER
+#define FILEZILLA_INTERFACE_ASKSAVEPASSWORDDIALOG_HEADER
+
+#include "dialogex.h"
+
+class CAskSavePasswordDialog final : public wxDialogEx
+{
+public:
+	static bool Run(wxWindow* parent);
+private:
+	bool Create(wxWindow* parent);
+
+	void OnOk(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/asyncrequestqueue.h b/src/interface/asyncrequestqueue.h
--- a/src/interface/asyncrequestqueue.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/asyncrequestqueue.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,69 @@
+#ifndef FILEZILLA_INTERFACE_ASYNCREQUESTQUEUE_HEADER
+#define FILEZILLA_INTERFACE_ASYNCREQUESTQUEUE_HEADER
+
+#include "context_control.h"
+
+#include <wx/timer.h>
+
+#include <memory>
+
+class CertStore;
+class CQueueView;
+class CVerifyCertDialog;
+
+class CAsyncRequestQueue final : public wxEvtHandler, protected CGlobalStateEventHandler
+{
+public:
+	CAsyncRequestQueue(wxTopLevelWindow * parent);
+	~CAsyncRequestQueue();
+
+	bool AddRequest(CFileZillaEngine *pEngine, std::unique_ptr<CAsyncRequestNotification> && pNotification);
+	void ClearPending(CFileZillaEngine const* const pEngine);
+	void RecheckDefaults();
+
+	void SetQueue(CQueueView *pQueue);
+
+	void TriggerProcessing();
+
+protected:
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const&, const void*) override;
+
+	// Returns false if main window doesn't have focus or is minimized.
+	// Request attention if needed
+	bool CheckWindowState();
+
+	wxTopLevelWindow *parent_{};
+	CQueueView *m_pQueueView{};
+	std::unique_ptr<CertStore> certStore_;
+
+	bool ProcessNextRequest();
+	bool ProcessDefaults(CFileZillaEngine *pEngine, std::unique_ptr<CAsyncRequestNotification> & pNotification);
+
+	struct t_queueEntry
+	{
+		t_queueEntry(CFileZillaEngine *e, std::unique_ptr<CAsyncRequestNotification>&& n)
+			: pEngine(e)
+			, pNotification(std::move(n))
+		{
+		}
+
+		CFileZillaEngine *pEngine{};
+		std::unique_ptr<CAsyncRequestNotification> pNotification;
+	};
+	std::list<t_queueEntry> m_requestList;
+
+	bool ProcessFileExistsNotification(t_queueEntry &entry);
+
+	bool SendReply(t_queueEntry & entry);
+
+	DECLARE_EVENT_TABLE()
+	void OnProcessQueue(wxCommandEvent &event);
+	void OnTimer(wxTimerEvent& event);
+
+	// Reentrancy guard
+	bool m_inside_request{};
+
+	wxTimer m_timer;
+};
+
+#endif
diff -Naupr a/src/interface/aui_notebook_ex.h b/src/interface/aui_notebook_ex.h
--- a/src/interface/aui_notebook_ex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/aui_notebook_ex.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,43 @@
+#ifndef FILEZILLA_INTERFACE_AUI_NOTEBOOK_EX_HEADER
+#define FILEZILLA_INTERFACE_AUI_NOTEBOOK_EX_HEADER
+
+#include <wx/aui/aui.h>
+
+#include <map>
+
+class wxAuiTabArtEx;
+class wxAuiNotebookEx : public wxAuiNotebook
+{
+public:
+	wxAuiNotebookEx() = default;
+
+	void RemoveExtraBorders();
+
+	void SetExArtProvider();
+
+	// Basically identical to the AUI one, but not calling Update
+	virtual bool SetPageText(size_t page_idx, const wxString& text) final;
+
+	void Highlight(size_t page, bool highlight = true);
+	bool Highlighted(size_t page) const;
+
+	void AdvanceTab(bool forward);
+
+	virtual bool AddPage(wxWindow *page, const wxString &text, bool select = false, int imageId = -1) final;
+
+	virtual bool RemovePage(size_t page) final;
+
+	void SetTabColour(size_t page, wxColour const& c);
+	wxColour GetTabColour(wxWindow* page);
+
+protected:
+	std::vector<bool> m_highlighted;
+
+	std::map<wxWindow*, wxColour> m_colourMap;
+
+	DECLARE_EVENT_TABLE()
+	void OnPageChanged(wxAuiNotebookEvent& event);
+	void OnTabDragMotion(wxAuiNotebookEvent& evt);
+};
+
+#endif
diff -Naupr a/src/interface/auto_ascii_files.h b/src/interface/auto_ascii_files.h
--- a/src/interface/auto_ascii_files.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/auto_ascii_files.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,16 @@
+#ifndef FILEZILLA_INTERFACE_AUTO_ASCII_FILES_HEADER
+#define FILEZILLA_INTERFACE_AUTO_ASCII_FILES_HEADER
+
+class CAutoAsciiFiles final
+{
+public:
+	static bool TransferLocalAsAscii(std::wstring const& local_file, ServerType server_type);
+	static bool TransferRemoteAsAscii(std::wstring const& remote_file, ServerType server_type);
+
+	static void SettingsChanged();
+protected:
+	static bool IsAsciiExtension(std::wstring const& ext);
+	static std::vector<std::wstring> ascii_extensions_;
+};
+
+#endif
diff -Naupr a/src/interface/bookmarks_dialog.h b/src/interface/bookmarks_dialog.h
--- a/src/interface/bookmarks_dialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/bookmarks_dialog.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,70 @@
+#ifndef FILEZILLA_INTERFACE_BOOKMARKS_DIALOG_HEADER
+#define FILEZILLA_INTERFACE_BOOKMARKS_DIALOG_HEADER
+
+#include "dialogex.h"
+#include "serverdata.h"
+
+class CNewBookmarkDialog final : public wxDialogEx
+{
+public:
+	CNewBookmarkDialog(wxWindow* parent, std::wstring& site_path, Site const* site);
+
+	int Run(wxString const& local_path, CServerPath const& remote_path);
+
+protected:
+	wxWindow* m_parent;
+	std::wstring &m_site_path;
+	Site const* site_;
+
+	DECLARE_EVENT_TABLE()
+	void OnOK(wxCommandEvent&);
+	void OnBrowse(wxCommandEvent&);
+};
+
+class wxTreeCtrlEx;
+class CBookmarksDialog final : public wxDialogEx
+{
+public:
+	CBookmarksDialog(wxWindow* parent, std::wstring& site_path, Site const* site);
+
+	int Run();
+
+	static bool GetGlobalBookmarks(std::vector<std::wstring> &bookmarks);
+	static bool GetBookmark(const wxString& name, wxString &local_dir, CServerPath &remote_dir, bool &sync, bool &comparison);
+	static bool AddBookmark(const wxString& name, const wxString &local_dir, const CServerPath &remote_dir, bool sync, bool comparison);
+
+protected:
+	bool Verify();
+	void UpdateBookmark();
+	void DisplayBookmark();
+
+	void LoadGlobalBookmarks();
+	void LoadSiteSpecificBookmarks();
+
+	void SaveSiteSpecificBookmarks();
+	void SaveGlobalBookmarks();
+
+	wxWindow* m_parent{};
+	std::wstring &m_site_path;
+	Site const* site_{};
+
+	wxTreeCtrlEx* tree_{};
+	wxTreeItemId m_bookmarks_global;
+	wxTreeItemId m_bookmarks_site;
+
+	bool m_is_deleting{};
+
+	DECLARE_EVENT_TABLE()
+	void OnSelChanging(wxTreeEvent& event);
+	void OnSelChanged(wxTreeEvent& event);
+	void OnOK(wxCommandEvent& event);
+	void OnBrowse(wxCommandEvent& event);
+	void OnNewBookmark(wxCommandEvent& event);
+	void OnRename(wxCommandEvent& event);
+	void OnDelete(wxCommandEvent& event);
+	void OnCopy(wxCommandEvent& event);
+	void OnBeginLabelEdit(wxTreeEvent& event);
+	void OnEndLabelEdit(wxTreeEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/buildinfo.h b/src/interface/buildinfo.h
--- a/src/interface/buildinfo.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/buildinfo.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,44 @@
+#ifndef FILEZILLA_BUILDINFO_HEADER
+#define FILEZILLA_BUILDINFO_HEADER
+
+#include <string>
+
+enum class gui_lib_dependency
+{
+	wxwidgets,
+	sqlite,
+	count
+};
+
+class CBuildInfo final
+{
+public:
+	CBuildInfo() = delete;
+
+public:
+
+	static std::wstring GetVersion();
+	static int64_t ConvertToVersionNumber(wchar_t const* version);
+	static std::wstring GetBuildDateString();
+	static std::wstring GetBuildTimeString();
+	static fz::datetime GetBuildDate();
+	static std::wstring GetBuildType();
+	static std::wstring GetCompiler();
+	static std::wstring GetCompilerFlags();
+	static std::wstring GetHostname();
+	static std::wstring GetBuildSystem();
+	static bool IsUnstable(); // Returns true on beta or rc releases.
+	static std::wstring GetCPUCaps(char separator = ',');
+};
+
+std::wstring GetDependencyName(gui_lib_dependency d);
+std::wstring GetDependencyVersion(gui_lib_dependency d);
+
+// Microsoft, in its insane stupidity, has decided to make GetVersion(Ex) useless, starting with Windows 8.1,
+// this function no longer returns the operating system version but instead some arbitrary and random value depending
+// on the phase of the moon.
+// This function instead returns the actual Windows version. On non-Windows systems, it's equivalent to
+// wxGetOsVersion
+bool GetRealOsVersion(int& major, int& minor);
+
+#endif
diff -Naupr a/src/interface/chmoddialog.h b/src/interface/chmoddialog.h
--- a/src/interface/chmoddialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/chmoddialog.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,61 @@
+#ifndef FILEZILLA_INTERFACE_CHMODDIALOG_HEADER
+#define FILEZILLA_INTERFACE_CHMODDIALOG_HEADER
+
+#include "dialogex.h"
+
+class ChmodData
+{
+public:
+	int GetApplyType() const { return applyType_; }
+
+	// Converts permission string into a series of chars
+	// The permissions parameter has to be able to hold at least
+	// 9 characters.
+	// Example:
+	//   drwxr--r-- gets converted into 222211211
+	//   0644 gets converted into 221211211
+	//   foo (0273) gets converted into 121222122
+	static bool ConvertPermissions(std::wstring const& rwx, char* permissions);
+
+	std::wstring GetPermissions(const char* previousPermissions, bool dir);
+
+	int applyType_{};
+	std::wstring numeric_;
+	char permissions_[9]{};
+
+private:
+	static bool DoConvertPermissions(std::wstring const& rwx, char* permissions);
+};
+
+class CChmodDialog final : public wxDialogEx
+{
+public:
+	CChmodDialog(ChmodData & data);
+
+	bool Create(wxWindow* parent, int fileCount, int dirCount,
+				const wxString& name, const char permissions[9]);
+
+	bool Recursive() const ;
+
+protected:
+
+	DECLARE_EVENT_TABLE()
+	void OnOK(wxCommandEvent&);
+	void OnCancel(wxCommandEvent&);
+	void OnRecurseChanged(wxCommandEvent&);
+
+	void OnCheckboxClick(wxCommandEvent&);
+	void OnNumericChanged(wxCommandEvent&);
+
+	ChmodData & data_;
+
+	wxCheckBox* m_checkBoxes[9];
+
+	bool m_noUserTextChange{};
+	wxString oldNumeric;
+	bool lastChangedNumeric{};
+
+	bool m_recursive{};
+};
+
+#endif
diff -Naupr a/src/interface/clearprivatedata.h b/src/interface/clearprivatedata.h
--- a/src/interface/clearprivatedata.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/clearprivatedata.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,34 @@
+#ifndef FILEZILLA_INTERFACE_CLEARPRIVATEDATA_HEADER
+#define FILEZILLA_INTERFACE_CLEARPRIVATEDATA_HEADER
+
+#include "dialogex.h"
+
+#include <wx/timer.h>
+
+class CMainFrame;
+class CClearPrivateDataDialog final : public wxDialogEx
+{
+public:
+
+	static CClearPrivateDataDialog* Create(CMainFrame* pMainFrame) { return new CClearPrivateDataDialog(pMainFrame); }
+	void Run();
+
+	void Delete();
+
+protected:
+	CClearPrivateDataDialog(CMainFrame* pMainFrame);
+	virtual ~CClearPrivateDataDialog() = default;
+
+	bool ClearReconnect();
+
+	void RemoveXmlFile(std::wstring const& name);
+
+	CMainFrame* const m_pMainFrame;
+
+	wxTimer m_timer;
+
+	DECLARE_EVENT_TABLE()
+	void OnTimer(wxTimerEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/cmdline.h b/src/interface/cmdline.h
--- a/src/interface/cmdline.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/cmdline.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,38 @@
+#ifndef FILEZILLA_INTERFACE_CMDLINE_HEADER
+#define FILEZILLA_INTERFACE_CMDLINE_HEADER
+
+#include <wx/cmdline.h>
+
+class CCommandLine final
+{
+public:
+	enum t_switches
+	{
+		sitemanager,
+		close,
+		version,
+		debug_startup
+	};
+
+	enum t_option
+	{
+		logontype,
+		site,
+		local
+	};
+
+	CCommandLine(int argc, wxChar** argv);
+	bool Parse();
+	void DisplayUsage();
+
+	bool HasSwitch(t_switches s) const;
+	std::wstring GetOption(t_option option) const;
+	std::wstring GetParameter() const;
+
+	bool BlocksReconnectAtStartup() const;
+
+protected:
+	wxCmdLineParser m_parser;
+};
+
+#endif
diff -Naupr a/src/interface/commandqueue.h b/src/interface/commandqueue.h
--- a/src/interface/commandqueue.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/commandqueue.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,71 @@
+#ifndef FILEZILLA_INTERFACE_COMMANDQUEUE_HEADER
+#define FILEZILLA_INTERFACE_COMMANDQUEUE_HEADER
+
+class CFileZillaEngine;
+class CNotification;
+class CState;
+class CMainFrame;
+
+DECLARE_EVENT_TYPE(fzEVT_GRANTEXCLUSIVEENGINEACCESS, -1)
+
+class CCommandQueue final
+{
+public:
+	enum command_origin
+	{
+		any = -1,
+		normal, // Most user actions
+		recursiveOperation
+	};
+
+	CCommandQueue(CFileZillaEngine *pEngine, CMainFrame* pMainFrame, CState& state);
+
+	void ProcessCommand(CCommand *pCommand, command_origin origin = normal);
+	void ProcessNextCommand();
+	bool Idle(command_origin origin = any) const;
+	bool Cancel();
+	bool Quit();
+	void Finish(std::unique_ptr<COperationNotification> && pNotification);
+
+	void RequestExclusiveEngine(bool requestExclusive);
+
+	CFileZillaEngine* GetEngineExclusive(int requestId);
+	void ReleaseEngine();
+	bool EngineLocked() const { return m_exclusiveEngineLock; }
+
+	void ProcessDirectoryListing(CDirectoryListingNotification const& listingNotification);
+
+protected:
+	void ProcessReply(int nReplyCode, Command commandId);
+
+	void GrantExclusiveEngineRequest();
+
+	CFileZillaEngine *m_pEngine;
+	CMainFrame* m_pMainFrame;
+	CState& m_state;
+	bool m_exclusiveEngineRequest{};
+	bool m_exclusiveEngineLock{};
+	int m_requestId{};
+	static int m_requestIdCounter;
+
+	// Used to make this class reentrance-safe
+	int m_inside_commandqueue{};
+
+	struct CommandInfo {
+		CommandInfo() = default;
+		CommandInfo(command_origin o, std::unique_ptr<CCommand> && c)
+			: origin(o)
+			, command(std::move(c))
+		{}
+
+		command_origin origin;
+		std::unique_ptr<CCommand> command;
+		bool didReconnect{};
+	};
+	std::deque<CommandInfo> m_CommandList;
+
+	bool m_quit{};
+};
+
+#endif
+
diff -Naupr a/src/interface/conditionaldialog.h b/src/interface/conditionaldialog.h
--- a/src/interface/conditionaldialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/conditionaldialog.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,44 @@
+#ifndef FILEZILLA_INTERFACE_CONDITIONALDIALOG_HEADER
+#define FILEZILLA_INTERFACE_CONDITIONALDIALOG_HEADER
+
+#include <wx/dialog.h>
+
+class CConditionalDialog final : public wxDialog
+{
+public:
+	enum Modes
+	{
+		ok,
+		yesno
+	};
+
+	enum DialogType
+	{
+		rawcommand_quote,
+		viewhidden,
+		confirmexit,
+		sitemanager_confirmdelete,
+		confirmexit_edit, // Confirm closing FileZilla while files are still being edited
+		confirm_preserve_timestamps,
+		compare_treeviewmismatch,
+		compare_changesorting,
+		many_selected_for_edit,
+		quick_search
+	};
+
+	CConditionalDialog(wxWindow* parent, DialogType type, Modes mode, bool checked = false);
+
+	void AddText(const wxString &text);
+
+	bool Run();
+
+protected:
+	DialogType m_type;
+
+	wxSizer* m_pTextSizer;
+
+	DECLARE_EVENT_TABLE()
+	void OnButton(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/context_control.h b/src/interface/context_control.h
--- a/src/interface/context_control.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/context_control.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,99 @@
+#ifndef FILEZILLA_INTERFACE_CONTEXT_CONTROL_HEADER
+#define FILEZILLA_INTERFACE_CONTEXT_CONTROL_HEADER
+
+#include <wx/aui/auibook.h>
+#include "state.h"
+
+#include <memory>
+
+class wxAuiNotebookEx;
+class CLocalListView;
+class CLocalTreeView;
+class CMainFrame;
+class CRemoteListView;
+class CRemoteTreeView;
+class CView;
+class CViewHeader;
+class CSplitterWindowEx;
+class CState;
+class CListSearchPanel;
+
+class CContextControl final : public wxSplitterWindow, public CGlobalStateEventHandler
+{
+public:
+	struct _context_controls final
+	{
+		bool used() const { return pViewSplitter != 0; }
+
+		// List of all windows and controls assorted with a context
+		CView* pLocalTreeViewPanel{};
+		CView* pLocalListViewPanel{};
+		CLocalTreeView* pLocalTreeView{};
+		CLocalListView* pLocalListView{};
+		CView* pRemoteTreeViewPanel{};
+		CView* pRemoteListViewPanel{};
+		CRemoteTreeView* pRemoteTreeView{};
+		CRemoteListView* pRemoteListView{};
+		CViewHeader* pLocalViewHeader{};
+		CViewHeader* pRemoteViewHeader{};
+		CListSearchPanel* pLocalListSearchPanel{};
+		CListSearchPanel* pRemoteListSearchPanel{};
+
+		CSplitterWindowEx* pViewSplitter{}; // Contains local and remote splitters
+		CSplitterWindowEx* pLocalSplitter{};
+		CSplitterWindowEx* pRemoteSplitter{};
+
+		CState* pState{};
+
+		void SwitchFocusedSide();
+	};
+
+	CContextControl(CMainFrame& mainFrame);
+	virtual ~CContextControl();
+
+	void Create(wxWindow* parent);
+
+	bool CreateTab();
+	bool CreateTab(CLocalPath const& localPath, Site const& site, CServerPath const& remotePath);
+	bool CloseTab(int tab);
+
+	_context_controls* GetCurrentControls();
+	_context_controls* GetControlsFromState(CState* pState);
+
+	int GetCurrentTab() const;
+	int GetTabCount() const;
+	_context_controls* GetControlsFromTabIndex(int i);
+
+	bool SelectTab(int i);
+	void AdvanceTab(bool forward);
+
+	void SaveTabs();
+	void RestoreTabs();
+
+protected:
+
+	void CreateContextControls(CState& state);
+
+	std::vector<_context_controls> m_context_controls;
+	int m_current_context_controls{-1};
+
+	wxAuiNotebookEx* m_tabs{};
+	int m_right_clicked_tab{-1};
+	CMainFrame& m_mainFrame;
+
+protected:
+	DECLARE_EVENT_TABLE()
+	void OnTabRefresh(wxCommandEvent&);
+	void OnTabChanged(wxAuiNotebookEvent& event);
+	void OnTabClosing(wxAuiNotebookEvent& event);
+	void OnTabClosing_Deferred(wxCommandEvent& event);
+	void OnTabBgDoubleclick(wxAuiNotebookEvent&);
+	void OnTabRightclick(wxAuiNotebookEvent& event);
+	void OnTabContextClose(wxCommandEvent& event);
+	void OnTabContextCloseOthers(wxCommandEvent& event);
+	void OnTabContextNew(wxCommandEvent&);
+
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const&, const void*) override;
+};
+
+#endif
diff -Naupr a/src/interface/customheightlistctrl.cpp b/src/interface/customheightlistctrl.cpp
--- a/src/interface/customheightlistctrl.cpp	2020-01-23 12:18:26.000000000 +0100
+++ b/src/interface/customheightlistctrl.cpp	2020-02-20 16:00:03.000000000 +0100
@@ -3,8 +3,6 @@
 
 #include <algorithm>
 
-IMPLEMENT_DYNAMIC_CLASS(wxCustomHeightListCtrl, wxScrolledWindow)
-
 BEGIN_EVENT_TABLE(wxCustomHeightListCtrl, wxScrolledWindow)
 EVT_MOUSE_EVENTS(wxCustomHeightListCtrl::OnMouseEvent)
 EVT_SIZE(wxCustomHeightListCtrl::OnSize)
diff -Naupr a/src/interface/customheightlistctrl.h b/src/interface/customheightlistctrl.h
--- a/src/interface/customheightlistctrl.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/customheightlistctrl.h	2020-02-20 16:00:03.000000000 +0100
@@ -0,0 +1,55 @@
+#ifndef FILEZILLA_INTERFACE_CUSTOM_HEIGHT_LISTCTRL_HEADER
+#define FILEZILLA_INTERFACE_CUSTOM_HEIGHT_LISTCTRL_HEADER
+
+#include <wx/scrolwin.h>
+
+#include <set>
+#include <vector>
+
+class wxCustomHeightListCtrl final : public wxScrolledWindow
+{
+public:
+	wxCustomHeightListCtrl() = default;
+
+	wxCustomHeightListCtrl(wxWindow* parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxHSCROLL | wxVSCROLL, const wxString& name = _T("scrolledWindow"));
+
+	void SetLineHeight(int height);
+
+	virtual void SetFocus();
+
+	void ClearSelection();
+
+	std::set<size_t> GetSelection() const;
+	size_t GetRowCount() const;
+	void SelectLine(size_t line);
+
+	void AllowSelection(bool allow_selection);
+
+	void InsertRow(wxSizer* sizer, size_t pos);
+	void DeleteRow(size_t pos);
+	void DeleteRow(wxSizer *sizer);
+	void ClearRows();
+
+protected:
+	void AdjustView();
+
+	virtual void OnDraw(wxDC& dc);
+
+	DECLARE_EVENT_TABLE()
+	void OnMouseEvent(wxMouseEvent& event);
+	void OnSize(wxSizeEvent& event);
+
+	int m_lineHeight{20};
+
+	std::vector<wxSizer*> m_rows;
+
+	std::set<size_t> m_selectedLines;
+
+	static size_t const npos{static_cast<size_t>(-1)};
+
+	size_t m_focusedLine{npos};
+
+	bool m_allow_selection{true};
+};
+
+#endif
diff -Naupr a/src/interface/defaultfileexistsdlg.h b/src/interface/defaultfileexistsdlg.h
--- a/src/interface/defaultfileexistsdlg.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/defaultfileexistsdlg.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,22 @@
+#ifndef FILEZILLA_INTERFACE_DEFAULTFILEEXISTSDLG_HEADER
+#define FILEZILLA_INTERFACE_DEFAULTFILEEXISTSDLG_HEADER
+
+#include "dialogex.h"
+
+class CDefaultFileExistsDlg final : protected wxDialogEx
+{
+public:
+	bool Load(wxWindow *parent, bool fromQueue);
+
+	static CFileExistsNotification::OverwriteAction GetDefault(bool download);
+	static void SetDefault(bool download, CFileExistsNotification::OverwriteAction action);
+
+	bool Run(CFileExistsNotification::OverwriteAction *downloadAction = 0, CFileExistsNotification::OverwriteAction *uploadAction = 0);
+
+protected:
+	void SelectDefaults(CFileExistsNotification::OverwriteAction* downloadAction, CFileExistsNotification::OverwriteAction* uploadAction);
+
+	static CFileExistsNotification::OverwriteAction m_defaults[2];
+};
+
+#endif
diff -Naupr a/src/interface/dialogex.cpp b/src/interface/dialogex.cpp
--- a/src/interface/dialogex.cpp	2020-01-23 12:18:26.000000000 +0100
+++ b/src/interface/dialogex.cpp	2020-02-19 16:50:02.000000000 +0100
@@ -222,6 +222,7 @@ wxSizerFlags const DialogLayout::grow(wx
 wxSizerFlags const DialogLayout::valign(wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL));
 wxSizerFlags const DialogLayout::halign(wxSizerFlags().Align(wxALIGN_CENTER_HORIZONTAL));
 wxSizerFlags const DialogLayout::valigng(wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL).Expand());
+wxSizerFlags const DialogLayout::ralign(wxSizerFlags().Align(wxALIGN_RIGHT));
 
 DialogLayout::DialogLayout(wxTopLevelWindow * parent)
 	: parent_(parent)
@@ -252,6 +253,12 @@ wxFlexGridSizer* DialogLayout::createFle
 	return new wxFlexGridSizer(rows, cols, g, g);
 }
 
+wxGridSizer* DialogLayout::createGrid(int cols, int rows) const
+{
+	int const g = gap;
+	return new wxGridSizer(rows, cols, g, g);
+}
+
 wxGridBagSizer* DialogLayout::createGridBag(int cols, int rows) const
 {
 	int const g = gap;
diff -Naupr a/src/interface/dialogex.h b/src/interface/dialogex.h
--- a/src/interface/dialogex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/dialogex.h	2020-02-19 16:50:02.000000000 +0100
@@ -0,0 +1,83 @@
+#ifndef FILEZILLA_INTERFACE_DIALOGEX_HEADER
+#define FILEZILLA_INTERFACE_DIALOGEX_HEADER
+
+#include "wrapengine.h"
+
+class wxGridBagSizer;
+struct DialogLayout final
+{
+public:
+	int gap{};
+	int border{};
+
+	int dlgUnits(int num) const;
+
+	static wxSizerFlags const grow;
+	static wxSizerFlags const halign;
+	static wxSizerFlags const valign;
+	static wxSizerFlags const valigng;
+	static wxSizerFlags const ralign;
+
+	wxFlexGridSizer* createMain(wxWindow* parent, int cols, int rows = 0) const;
+	wxFlexGridSizer* createFlex(int cols, int rows = 0) const;
+	wxGridSizer* createGrid(int cols, int rows = 0) const;
+	wxGridBagSizer* createGridBag(int cols, int rows = 0) const;
+	wxStdDialogButtonSizer* createButtonSizer(wxWindow* parent, wxSizer * sizer, bool hline) const;
+
+	std::tuple<wxStaticBox*, wxFlexGridSizer*> createStatBox(wxSizer* parent, wxString const& title, int cols, int rows = 0) const;
+
+	DialogLayout(wxTopLevelWindow * parent);
+
+	void gbNewRow(wxGridBagSizer * gb) const;
+	wxSizerItem* gbAddRow(wxGridBagSizer * gb, wxWindow* wnd, wxSizerFlags const& flags = wxSizerFlags()) const;
+	wxSizerItem* gbAdd(wxGridBagSizer * gb, wxWindow* wnd, wxSizerFlags const& flags = wxSizerFlags()) const;
+	wxSizerItem* gbAdd(wxGridBagSizer* gb, wxSizer* sizer, wxSizerFlags const& flags = wxSizerFlags()) const;
+
+protected:
+	wxTopLevelWindow * parent_;
+};
+
+class wxDialogEx : public wxDialog, public CWrapEngine
+{
+public:
+	bool Create(wxWindow * parent, int id, wxString const& title, wxPoint const& pos = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = wxDEFAULT_DIALOG_STYLE);
+
+	bool Load(wxWindow *pParent, wxString const& name, std::wstring const& file = std::wstring());
+
+	bool SetChildLabel(int id, const wxString& label, unsigned long maxLength = 0);
+	bool SetChildLabel(char const* id, const wxString& label, unsigned long maxLength = 0);
+	wxString GetChildLabel(int id);
+
+	virtual int ShowModal();
+
+	bool ReplaceControl(wxWindow* old, wxWindow* wnd);
+
+	static bool CanShowPopupDialog(wxTopLevelWindow * parent = 0);
+
+	DialogLayout const& layout();
+
+protected:
+	virtual void InitDialog();
+
+	DECLARE_EVENT_TABLE()
+	virtual void OnChar(wxKeyEvent& event);
+	void OnMenuEvent(wxCommandEvent& event);
+
+#ifdef __WXMAC__
+	virtual bool ProcessEvent(wxEvent& event);
+#endif
+
+	static std::vector<wxDialogEx*> shown_dialogs_;
+
+	std::unique_ptr<DialogLayout> layout_;
+
+	std::vector<wxAcceleratorEntry> acceleratorTable_;
+};
+
+std::wstring LabelEscape(std::wstring const& label);
+
+#ifdef __WXMAC__
+void FixPasswordPaste(std::vector<wxAcceleratorEntry> & entries);
+#endif
+
+#endif
diff -Naupr a/src/interface/dndobjects.h b/src/interface/dndobjects.h
--- a/src/interface/dndobjects.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/dndobjects.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,129 @@
+#ifndef FILEZILLA_INTERFACE_DNDOBJECTS_HEADER
+#define FILEZILLA_INTERFACE_DNDOBJECTS_HEADER
+
+#ifdef __WXMSW__
+#define FZ3_USESHELLEXT 1
+#else
+#define FZ3_USESHELLEXT 0
+#endif
+
+#include "drop_target_ex.h"
+#include "xmlfunctions.h"
+
+#include <wx/dnd.h>
+
+#include <memory>
+
+class CLocalDataObject final : public wxDataObjectSimple
+{
+public:
+	CLocalDataObject();
+
+	virtual size_t GetDataSize() const;
+	virtual bool GetDataHere(void *buf) const;
+
+	virtual bool SetData(size_t len, const void* buf);
+
+	std::vector<std::string> const& GetFiles() const { return files_; }
+	std::vector<std::wstring> GetFilesW() const;
+
+	void Reserve(size_t count);
+	void AddFile(std::wstring const& file);
+
+protected:
+	std::vector<std::string> files_;
+};
+
+class CRemoteDataObject final : public wxDataObjectSimple
+{
+public:
+	CRemoteDataObject(Site const& site, const CServerPath& path);
+	CRemoteDataObject();
+
+	virtual size_t GetDataSize() const;
+	virtual bool GetDataHere(void *buf ) const;
+
+	virtual bool SetData(size_t len, const void* buf);
+
+	// Finalize has to be called prior to calling wxDropSource::DoDragDrop
+	void Finalize();
+
+	bool DidSendData() const { return m_didSendData; }
+
+	Site const& GetSite() const { return site_; }
+	const CServerPath& GetServerPath() const { return m_path; }
+	int GetProcessId() const { return m_processId; }
+
+	struct t_fileInfo
+	{
+		std::wstring name;
+		int64_t size;
+		bool dir;
+		bool link;
+	};
+
+	const std::vector<t_fileInfo>& GetFiles() const { return m_fileList; }
+
+	void Reserve(size_t count);
+	void AddFile(std::wstring const& name, bool dir, int64_t size, bool link);
+
+protected:
+	Site site_;
+	CServerPath m_path;
+
+	mutable CXmlFile m_xmlFile;
+
+	bool m_didSendData{};
+
+	int m_processId;
+
+	std::vector<t_fileInfo> m_fileList;
+
+	mutable size_t m_expectedSize{};
+};
+
+#if FZ3_USESHELLEXT
+
+// This class checks if the shell extension is installed and
+// communicates with it.
+class CShellExtensionInterface final
+{
+public:
+	CShellExtensionInterface();
+	~CShellExtensionInterface();
+
+	bool IsLoaded() const { return m_shellExtension != 0; }
+
+	wxString InitDrag();
+
+	wxString GetTarget();
+
+	wxString GetDragDirectory() const { return m_dragDirectory; }
+
+	static std::unique_ptr<CShellExtensionInterface> CreateInitialized();
+
+protected:
+	bool CreateDragDirectory();
+
+	void* m_shellExtension;
+	HANDLE m_hMutex;
+	HANDLE m_hMapping;
+
+	std::wstring m_dragDirectory;
+};
+
+#endif
+
+template<typename Control>
+class CFileDropTarget : public CScrollableDropTarget<Control>
+{
+protected:
+	CFileDropTarget(Control* ctrl);
+
+	CLocalDataObject* m_pLocalDataObject{};
+	wxFileDataObject* m_pFileDataObject{};
+	CRemoteDataObject* m_pRemoteDataObject{};
+	wxDataObjectComposite* m_pDataObject{};
+};
+
+#endif
diff -Naupr a/src/interface/dragdropmanager.h b/src/interface/dragdropmanager.h
--- a/src/interface/dragdropmanager.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/dragdropmanager.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,36 @@
+#ifndef FILEZILLA_INTERFACE_DRAGDROPMANAGER_HEADER
+#define FILEZILLA_INTERFACE_DRAGDROPMANAGER_HEADER
+
+// wxWidgets doesn't provide any means to check on the type of objects
+// while an object hasn't been dropped yet and is still being moved around
+// At least on Windows, that appears to be a limitation of the native drag
+// and drop system.
+
+// As such, keep track on the objects.
+
+#include "serverdata.h"
+
+class CDragDropManager final
+{
+public:
+	static CDragDropManager* Get() { return m_pDragDropManager; }
+
+	static CDragDropManager* Init();
+	void Release();
+
+	const wxWindow* pDragSource;
+	const wxWindow* pDropTarget;
+
+	CLocalPath localParent;
+
+	Site site;
+	CServerPath remoteParent;
+
+protected:
+	CDragDropManager();
+	virtual ~CDragDropManager() = default;
+
+	static CDragDropManager* m_pDragDropManager;
+};
+
+#endif
diff -Naupr a/src/interface/drop_target_ex.h b/src/interface/drop_target_ex.h
--- a/src/interface/drop_target_ex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/drop_target_ex.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,41 @@
+#ifndef FILEZILLA_DROP_TARGET_EX_HEADER
+#define FILEZILLA_DROP_TARGET_EX_HEADER
+
+#include <wx/dnd.h>
+#include <wx/timer.h>
+
+template<class Control>
+class CScrollableDropTarget : public wxEvtHandler, public wxDropTarget
+{
+public:
+	CScrollableDropTarget(Control* pCtrl);
+
+	virtual bool OnDrop(wxCoord x, wxCoord y);
+
+	virtual wxDragResult OnDragOver(wxCoord x, wxCoord y, wxDragResult def);
+
+	virtual void OnLeave();
+
+	virtual wxDragResult OnEnter(wxCoord x, wxCoord y, wxDragResult def);
+
+	virtual typename Control::Item DisplayDropHighlight(wxPoint) = 0;
+
+protected:
+	wxDragResult FixupDragResult(wxDragResult res);
+
+	bool IsScroll(wxPoint p) const;
+	bool IsTopScroll(wxPoint p) const;
+	bool IsBottomScroll(wxPoint p) const;
+
+	void OnTimer(wxTimerEvent& /*event*/);
+
+protected:
+	Control *m_pCtrl;
+
+	wxTimer m_timer;
+	int m_count{};
+
+	DECLARE_EVENT_TABLE()
+};
+
+#endif
diff -Naupr a/src/interface/edithandler.h b/src/interface/edithandler.h
--- a/src/interface/edithandler.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/edithandler.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,212 @@
+#ifndef FILEZILLA_INTERFACE_EDITHANDLER_HEADER
+#define FILEZILLA_INTERFACE_EDITHANDLER_HEADER
+
+#include "dialogex.h"
+#include "serverdata.h"
+
+#include <wx/timer.h>
+
+// Handles all aspects about remote file viewing/editing
+
+namespace edit_choices {
+enum type
+{
+	edit_existing_action = 0x1,
+	edit_existing_always = 0x2
+};
+}
+
+class CQueueView;
+class CEditHandler final : protected wxEvtHandler
+{
+public:
+	enum fileState
+	{
+		unknown = -1,
+		edit,
+		download,
+		upload,
+		upload_and_remove,
+		upload_and_remove_failed,
+		removing
+	};
+
+	enum fileType : signed char
+	{
+		none = -1,
+		local,
+		remote
+	};
+
+	static CEditHandler* Create();
+	static CEditHandler* Get();
+
+	std::wstring GetLocalDirectory();
+
+	// This tries to deletes all temporary files.
+	// If files are locked, they won't be removed though
+	void Release();
+
+	fileState GetFileState(wxString const& fileName) const; // Local files
+	fileState GetFileState(wxString const& fileName, CServerPath const& remotePath, Site const& site) const; // Remote files
+
+	// Returns the number of files in given state
+	// pServer may be set only if state isn't unknown
+	int GetFileCount(fileType type, fileState state, Site const& site = Site()) const;
+
+	// Starts editing the given file, queues it if needed. For local files, fileName must include local path.
+	// Can be used to edit files already being added, user is prompted for action.
+	bool Edit(CEditHandler::fileType type, std::wstring const& fileName, CServerPath const& path, Site const& site, int64_t size, wxWindow* parent);
+
+	class FileData final {
+	public:
+		FileData() = default;
+		FileData(std::wstring const& n, int64_t s)
+			: name(n), size(s) {}
+
+		std::wstring name;
+		int64_t size{};
+	};
+	bool Edit(CEditHandler::fileType type, std::vector<FileData> const& data, CServerPath const& path, Site const& site, wxWindow* parent);
+
+	// Adds the file that doesn't exist yet. (Has to be in unknown state)
+	// The initial state will be download
+	bool AddFile(fileType type, std::wstring& fileName, CServerPath const& remotePath, Site const& site);
+
+	// Tries to unedit and remove file
+	bool Remove(wxString const& fileName); // Local files
+	bool Remove(wxString const& fileName, CServerPath const& remotePath, Site const& site); // Remote files
+	bool RemoveAll(bool force);
+	bool RemoveAll(fileState state, Site const& site = Site());
+
+	void FinishTransfer(bool successful, wxString const& fileName);
+	void FinishTransfer(bool successful, wxString const& fileName, CServerPath const& remotePath, Site const& site);
+
+	void CheckForModifications(bool emitEvent = false);
+
+	void SetQueue(CQueueView* pQueue) { m_pQueue = pQueue; }
+
+	/* Checks if file can be opened. One of these conditions has to be true:
+	 * - Filetype association of system has to exist
+	 * - Custom association for that filetype
+	 * - Default editor set
+	 *
+	 * The dangerous argument will be set to true on some filetypes,
+	 * e.g. executables.
+	 */
+	wxString CanOpen(fileType type, wxString const& fileName, bool &dangerous, bool& program_exists);
+	bool StartEditing(wxString const& file);
+	bool StartEditing(wxString const& file, CServerPath const& remotePath, Site const& site);
+
+	struct t_fileData
+	{
+		std::wstring name; // The name of the file
+		std::wstring file; // The actual local filename
+		fileState state;
+		fz::datetime modificationTime;
+		CServerPath remotePath;
+		Site site;
+	};
+
+	const std::list<t_fileData>& GetFiles(fileType type) const { wxASSERT(type != none); return m_fileDataList[(type == local) ? 0 : 1]; }
+
+	bool UploadFile(wxString const& file, bool unedit);
+	bool UploadFile(wxString const& file, CServerPath const& remotePath, Site const& site, bool unedit);
+
+	// Returns command to open the file. If association is set but
+	// program does not exist, program_exists is set to false.
+	wxString GetOpenCommand(wxString const& file, bool& program_exists);
+
+protected:
+	bool DoEdit(CEditHandler::fileType type, FileData const& file, CServerPath const& path, Site const& site, wxWindow* parent, size_t fileCount, int & already_editing_action);
+
+	CEditHandler();
+
+	static CEditHandler* m_pEditHandler;
+
+	std::wstring m_localDir;
+
+	bool StartEditing(fileType type, t_fileData &data);
+
+	wxString GetCustomOpenCommand(wxString const& file, bool& program_exists);
+
+	void SetTimerState();
+
+	bool UploadFile(fileType type, std::list<t_fileData>::iterator iter, bool unedit);
+
+	std::list<t_fileData> m_fileDataList[2];
+
+	std::list<t_fileData>::iterator GetFile(wxString const& fileName);
+	std::list<t_fileData>::const_iterator GetFile(wxString const& fileName) const;
+	std::list<t_fileData>::iterator GetFile(wxString const& fileName, CServerPath const& remotePath, Site const& site);
+	std::list<t_fileData>::const_iterator GetFile(wxString const& fileName, CServerPath const& remotePath, Site const& site) const;
+
+	CQueueView* m_pQueue;
+
+	wxTimer m_timer;
+	wxTimer m_busyTimer;
+
+	void RemoveTemporaryFiles(wxString const& temp);
+	void RemoveTemporaryFilesInSpecificDir(std::wstring const& temp);
+
+	std::wstring GetTemporaryFile(std::wstring name);
+	std::wstring TruncateFilename(std::wstring const& path, std::wstring const& name, size_t max);
+	bool FilenameExists(wxString const& file);
+
+	int DisplayChangeNotification(fileType type, std::list<t_fileData>::const_iterator iter, bool& remove);
+
+#ifdef __WXMSW__
+	HANDLE m_lockfile_handle;
+#else
+	int m_lockfile_descriptor;
+#endif
+
+	DECLARE_EVENT_TABLE()
+	void OnTimerEvent(wxTimerEvent& event);
+	void OnChangedFileEvent(wxCommandEvent& event);
+};
+
+class CWindowStateManager;
+class CEditHandlerStatusDialog final : protected wxDialogEx
+{
+public:
+	CEditHandlerStatusDialog(wxWindow* parent);
+	virtual ~CEditHandlerStatusDialog();
+
+	virtual int ShowModal();
+
+protected:
+	void SetCtrlState();
+
+	CEditHandler::t_fileData* GetDataFromItem(int item, CEditHandler::fileType &type);
+
+	wxWindow* m_pParent;
+
+	CWindowStateManager* m_pWindowStateManager;
+
+	DECLARE_EVENT_TABLE()
+	void OnSelectionChanged(wxListEvent& event);
+	void OnUnedit(wxCommandEvent& event);
+	void OnUpload(wxCommandEvent& event);
+	void OnEdit(wxCommandEvent& event);
+};
+
+class CNewAssociationDialog final : protected wxDialogEx
+{
+public:
+	CNewAssociationDialog(wxWindow* parent);
+
+	bool Run(const wxString& file);
+
+protected:
+	void SetCtrlState();
+	wxWindow* m_pParent;
+	wxString m_ext;
+
+	DECLARE_EVENT_TABLE()
+	void OnRadioButton(wxCommandEvent& event);
+	void OnOK(wxCommandEvent& event);
+	void OnBrowseEditor(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/encoding_converter.h b/src/interface/encoding_converter.h
--- a/src/interface/encoding_converter.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/encoding_converter.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,21 @@
+#ifndef FILEZILLA_INTERFACE_ENCODING_CONVERTER_HEADER
+#define FILEZILLA_INTERFACE_ENCODING_CONVERTER_HEADER
+
+#include "engine_context.h"
+
+#include <memory>
+
+class CustomEncodingConverter final : public CustomEncodingConverterBase
+{
+public:
+
+	static CustomEncodingConverter const& Get();
+
+	virtual std::wstring toLocal(std::wstring const& encoding, char const* buffer, size_t len) const override;
+	virtual std::string toServer(std::wstring const& encoding, wchar_t const* buffer, size_t len) const override;
+
+private:
+	CustomEncodingConverter() = default;
+};
+
+#endif
diff -Naupr a/src/interface/export.h b/src/interface/export.h
--- a/src/interface/export.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/export.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,19 @@
+#ifndef FILEZILLA_INTERFACE_EXPORT_HEADER
+#define FILEZILLA_INTERFACE_EXPORT_HEADER
+
+#include "dialogex.h"
+
+class CQueueView;
+class CExportDialog final : protected wxDialogEx
+{
+public:
+	CExportDialog(wxWindow* parent, CQueueView* pQueueView);
+
+	void Run();
+
+protected:
+	wxWindow* const m_parent;
+	const CQueueView* const m_pQueueView;
+};
+
+#endif
diff -Naupr a/src/interface/file_utils.h b/src/interface/file_utils.h
--- a/src/interface/file_utils.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/file_utils.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,57 @@
+#ifndef FILEZILLA_FILE_UTILS_HEADER
+#define FILEZILLA_FILE_UTILS_HEADER
+
+#include <libfilezilla/recursive_remove.hpp>
+
+bool UnquoteCommand(wxString& command, wxString& arguments, bool is_dde = false);
+bool ProgramExists(const wxString& editor);
+bool PathExpand(wxString& cmd);
+
+wxString GetSystemOpenCommand(wxString file, bool &program_exists);
+
+// Returns a file:// URL
+std::wstring GetAsURL(std::wstring const& dir);
+
+// Opens specified directory in local file manager, e.g. Explorer on Windows
+bool OpenInFileManager(std::wstring const& dir);
+
+bool RenameFile(wxWindow* pWnd, wxString dir, wxString from, wxString to);
+
+CLocalPath GetDownloadDir();
+
+std::wstring GetExtension(std::wstring const& file);
+
+class gui_recursive_remove final : public fz::recursive_remove
+{
+public:
+	gui_recursive_remove(wxWindow* parent)
+		: parent_(parent)
+	{}
+
+#ifdef FZ_WINDOWS
+	virtual void adjust_shfileop(SHFILEOPSTRUCT & op)
+	{
+		op.hwnd = parent_ ? (HWND)parent_->GetHandle() : 0;
+		if (parent_) {
+			// Move to trash if shift is not pressed, else delete
+			op.fFlags = wxGetKeyState(WXK_SHIFT) ? 0 : FOF_ALLOWUNDO;
+		}
+		else {
+			recursive_remove::adjust_shfileop(op);
+		}
+	}
+#endif
+
+	virtual bool confirm() const {
+		if (parent_) {
+			if (wxMessageBoxEx(_("Really delete all selected files and/or directories from your computer?"), _("Confirmation needed"), wxICON_QUESTION | wxYES_NO, parent_) != wxYES)
+				return false;
+		}
+		return true;
+	}
+
+private:
+	wxWindow* parent_;
+};
+
+#endif
diff -Naupr a/src/interface/fileexistsdlg.h b/src/interface/fileexistsdlg.h
--- a/src/interface/fileexistsdlg.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/fileexistsdlg.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,39 @@
+#ifndef FILEZILLA_INTERFACE_FILEEXISTSDLG_HEADER
+#define FILEZILLA_INTERFACE_FILEEXISTSDLG_HEADER
+
+#include "dialogex.h"
+
+class CFileExistsDlg final : public wxDialogEx
+{
+	DECLARE_EVENT_TABLE()
+
+public:
+	/// Constructors
+	CFileExistsDlg(CFileExistsNotification *pNotification);
+
+	/// Creation
+	bool Create(wxWindow* parent);
+
+	CFileExistsNotification::OverwriteAction GetAction() const;
+	bool Always(bool &directionOnly, bool &queueOnly) const;
+
+protected:
+	bool SetupControls();
+
+	void DisplayFile(bool left, std::wstring const& name, int64_t size, fz::datetime const& time, wxString const& iconFile);
+
+	void OnOK(wxCommandEvent& event);
+	void OnCancel(wxCommandEvent& event);
+	void OnCheck(wxCommandEvent& event);
+
+	void LoadIcon(int id, const wxString &file);
+	std::wstring GetPathEllipsis(std::wstring const& path, wxWindow *window);
+
+	CFileExistsNotification *m_pNotification;
+	CFileExistsNotification::OverwriteAction m_action;
+	bool m_always{};
+	bool m_directionOnly{};
+	bool m_queueOnly{};
+};
+
+#endif
diff -Naupr a/src/interface/filelist_statusbar.h b/src/interface/filelist_statusbar.h
--- a/src/interface/filelist_statusbar.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/filelist_statusbar.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,60 @@
+#ifndef FILEZILLA_INTERFACE_FILELIST_STATUSBAR_HEADER
+#define FILEZILLA_INTERFACE_FILELIST_STATUSBAR_HEADER
+
+#include <option_change_event_handler.h>
+
+#include <wx/statusbr.h>
+#include <wx/timer.h>
+
+class CFilelistStatusBar final : public wxStatusBar, protected COptionChangeEventHandler
+{
+public:
+	CFilelistStatusBar(wxWindow* pParent);
+
+	void SetDirectoryContents(int count_files, int count_dirs, int64_t total_size, int unknown_size, int hidden);
+	void Clear();
+	void SetHidden(int hidden);
+	void TriggerUpdateText();
+	void UpdateText();
+
+	void AddFile(int64_t size);
+	void RemoveFile(int64_t size);
+	void AddDirectory();
+	void RemoveDirectory();
+
+	void SelectAll();
+	void UnselectAll();
+	void SelectFile(int64_t size);
+	void UnselectFile(int64_t size);
+	void SelectDirectory();
+	void UnselectDirectory();
+
+	void SetEmptyString(const wxString& empty);
+
+	void SetConnected(bool connected);
+protected:
+
+	virtual void OnOptionsChanged(changed_options_t const& options);
+
+	bool m_connected{};
+	int m_count_files{};
+	int m_count_dirs{};
+	int64_t m_total_size{};
+	int m_unknown_size{}; // Set to true if there are files with unknown size
+	int m_hidden{};
+
+	int m_count_selected_files{};
+	int m_count_selected_dirs{};
+	int64_t m_total_selected_size{};
+	int m_unknown_selected_size{}; // Set to true if there are files with unknown size
+
+	wxTimer m_updateTimer;
+
+	wxString m_empty_string;
+	wxString m_offline_string;
+
+	DECLARE_EVENT_TABLE()
+	void OnTimer(wxTimerEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/filelistctrl.h b/src/interface/filelistctrl.h
--- a/src/interface/filelistctrl.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/filelistctrl.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,641 @@
+#ifndef FILEZILLA_INTERFACE_FILELISTCTRL_HEADER
+#define FILEZILLA_INTERFACE_FILELISTCTRL_HEADER
+
+#include "listctrlex.h"
+#include "systemimagelist.h"
+#include "listingcomparison.h"
+
+#include <cstring>
+#include <memory>
+
+class CQueueView;
+class CFileListCtrl_SortComparisonObject;
+class CFilelistStatusBar;
+#if defined(__WXGTK__) && !defined(__WXGTK3__)
+class CGtkEventCallbackProxyBase;
+#endif
+
+class CGenericFileData
+{
+public:
+	std::wstring fileType;
+	int icon{-2};
+
+	// t_fileEntryFlags is defined in listingcomparison.h as it will be used for
+	// both local and remote listings
+	CComparableListing::t_fileEntryFlags comparison_flags{CComparableListing::normal};
+};
+
+class CFileListCtrlSortBase
+{
+public:
+	CFileListCtrlSortBase() = default;
+	CFileListCtrlSortBase(CFileListCtrlSortBase const&) = delete;
+	CFileListCtrlSortBase& operator=(CFileListCtrlSortBase const&) = delete;
+
+	enum DirSortMode
+	{
+		dirsort_ontop,
+		dirsort_onbottom,
+		dirsort_inline
+	};
+	enum NameSortMode
+	{
+		namesort_caseinsensitive,
+		namesort_casesensitive,
+		namesort_natural
+	};
+
+	virtual bool operator()(int a, int b) const = 0;
+	virtual ~CFileListCtrlSortBase() {} // Without this empty destructor GCC complains
+
+	#define CMP(f, data1, data2) \
+		{\
+			int res = this->f(data1, data2);\
+			if (res < 0)\
+				return true;\
+			else if (res > 0)\
+				return false;\
+		}
+
+	#define CMP_LESS(f, data1, data2) \
+		{\
+			int res = this->f(data1, data2);\
+			if (res < 0)\
+				return true;\
+			else\
+				return false;\
+		}
+
+	static int CmpCase(std::wstring_view const& str1, std::wstring_view const& str2)
+	{
+		return str1.compare(str2);
+	}
+
+	static int CmpNoCase(std::wstring_view const& str1, std::wstring_view const& str2)
+	{
+		int cmp = fz::stricmp(str1, str2);
+		if (cmp) {
+			return cmp;
+		}
+		return str1.compare(str2);
+	}
+
+	static int CmpNatural(std::wstring_view const& str1, std::wstring_view const& str2)
+	{
+		wchar_t const* p1 = str1.data();
+		wchar_t const* p2 = str2.data();
+
+		wchar_t const* const end1 = p1 + str1.size();
+		wchar_t const* const end2 = p2 + str2.size();
+
+		int res = 0;
+		int zeroCount = 0;
+		bool isNumber = false;
+		for (; p1 != end1 && p2 != end2; ++p1, ++p2) {
+			int diff = static_cast<int>(wxTolower(*p1)) - static_cast<int>(wxTolower(*p2));
+			if (isNumber) {
+				if (res == 0) {
+					res = diff;
+				}
+				int nbDigits = (wxIsdigit(*p1) ? 1 : 0) + (wxIsdigit(*p2) ? 1 : 0);
+				if (nbDigits == 0 && res == 0) {
+					if (zeroCount) {
+						break;
+					}
+					isNumber = false;
+				}
+				else if (nbDigits != 2) {
+					break;
+				}
+			}
+			else if (wxIsdigit(*p1) && wxIsdigit(*p2)) {
+				zeroCount = 0;
+				for (; *p1 == '0' && (p1 + 1) != end1 && wxIsdigit(*(p1 + 1)); ++p1) {
+					zeroCount++;
+				}
+				for (; *p2 == '0' && (p2 + 1) != end2 && wxIsdigit(*(p2 + 1)); ++p2) {
+					zeroCount--;
+				}
+				res = *p1 - *p2;
+				isNumber = true;
+			}
+			else if (diff) {
+				return diff;
+			}
+		}
+
+		if (res == 0 && isNumber) {
+			res = zeroCount;
+		}
+
+		if (p1 == end1 && p2 == end2) {
+			return res;
+		}
+		if (!isNumber || res == 0) {
+			return (p1 == end1) ? -1 : 1;
+		}
+		if (p1 != end1 && wxIsdigit(*p1)) {
+			return 1;       //more digits
+		}
+		if (p2 != end2 && wxIsdigit(*p2)) {
+			return -1;      //fewer digits
+		}
+		return res;         //same length, compare first different digit in the sequence*/
+	}
+
+	typedef int (* CompareFunction)(std::wstring_view const&, std::wstring_view const&);
+	static CompareFunction GetCmpFunction(NameSortMode mode)
+	{
+		switch (mode)
+		{
+		default:
+		case CFileListCtrlSortBase::namesort_caseinsensitive:
+			return &CFileListCtrlSortBase::CmpNoCase;
+		case CFileListCtrlSortBase::namesort_casesensitive:
+			return &CFileListCtrlSortBase::CmpCase;
+		case CFileListCtrlSortBase::namesort_natural:
+			return &CFileListCtrlSortBase::CmpNatural;
+		}
+	}
+};
+
+// Helper classes for fast sorting using std::sort
+// -----------------------------------------------
+
+template<typename value_type>
+inline int DoCmpName(value_type const& data1, value_type const& data2, CFileListCtrlSortBase::NameSortMode const nameSortMode)
+{
+	switch (nameSortMode)
+	{
+	case CFileListCtrlSortBase::namesort_casesensitive:
+		return CFileListCtrlSortBase::CmpCase(data1.name, data2.name);
+
+	default:
+	case CFileListCtrlSortBase::namesort_caseinsensitive:
+		return CFileListCtrlSortBase::CmpNoCase(data1.name, data2.name);
+
+	case CFileListCtrlSortBase::namesort_natural:
+		return CFileListCtrlSortBase::CmpNatural(data1.name, data2.name);
+	}
+}
+
+template<typename Listing>
+class CFileListCtrlSort : public CFileListCtrlSortBase
+{
+public:
+	typedef Listing List;
+	typedef typename Listing::value_type value_type;
+
+	CFileListCtrlSort(Listing const& listing, DirSortMode dirSortMode, NameSortMode nameSortMode)
+		: m_listing(listing), m_dirSortMode(dirSortMode), m_nameSortMode(nameSortMode)
+	{
+	}
+
+	inline int CmpDir(value_type const& data1, value_type const& data2) const
+	{
+		switch (m_dirSortMode)
+		{
+		default:
+		case dirsort_ontop:
+			if (data1.is_dir()) {
+				if (!data2.is_dir()) {
+					return -1;
+				}
+				else {
+					return 0;
+				}
+			}
+			else {
+				if (data2.is_dir()) {
+					return 1;
+				}
+				else {
+					return 0;
+				}
+			}
+		case dirsort_onbottom:
+			if (data1.is_dir()) {
+				if (!data2.is_dir()) {
+					return 1;
+				}
+				else {
+					return 0;
+				}
+			}
+			else {
+				if (data2.is_dir()) {
+					return -1;
+				}
+				else {
+					return 0;
+				}
+			}
+		case dirsort_inline:
+			return 0;
+		}
+	}
+
+	template<typename value_type>
+	inline int CmpName(value_type const& data1, value_type const& data2) const
+	{
+		return DoCmpName(data1, data2, m_nameSortMode);
+	}
+
+	inline int CmpSize(const value_type &data1, const value_type &data2) const
+	{
+		int64_t const diff = data1.size - data2.size;
+		if (diff < 0) {
+			return -1;
+		}
+		else if (diff > 0) {
+			return 1;
+		}
+		else {
+			return 0;
+		}
+	}
+
+	inline int CmpStringNoCase(const wxString &data1, const wxString &data2) const
+	{
+		return data1.CmpNoCase(data2);
+	}
+
+	inline int CmpTime(const value_type &data1, const value_type &data2) const
+	{
+		if (data1.time < data2.time) {
+			return -1;
+		}
+		else if (data1.time > data2.time) {
+			return 1;
+		}
+		else {
+			return 0;
+		}
+	}
+
+protected:
+	Listing const& m_listing;
+
+	DirSortMode const m_dirSortMode;
+	NameSortMode const m_nameSortMode;
+};
+
+template<class CFileData> class CFileListCtrl;
+
+template<class T, typename DataEntry> class CReverseSort final : public T
+{
+public:
+	CReverseSort(typename T::List const& listing, std::vector<DataEntry>& fileData, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const pListView)
+		: T(listing, fileData, dirSortMode, nameSortMode, pListView)
+	{
+	}
+
+	inline bool operator()(int a, int b) const
+	{
+		return T::operator()(b, a);
+	}
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortName : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortName(Listing const& listing, std::vector<DataEntry>&, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		CMP(CmpDir, data1, data2);
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortSize : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortSize(Listing const& listing, std::vector<DataEntry>&, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		CMP(CmpDir, data1, data2);
+
+		CMP(CmpSize, data1, data2);
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortType : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortType(Listing const& listing, std::vector<DataEntry>& fileData, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const pListView)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode), m_pListView(pListView), m_fileData(fileData)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		CMP(CmpDir, data1, data2);
+
+		DataEntry &type1 = m_fileData[a];
+		DataEntry &type2 = m_fileData[b];
+		if (type1.fileType.empty()) {
+			type1.fileType = m_pListView->GetType(data1.name, data1.is_dir());
+		}
+		if (type2.fileType.empty()) {
+			type2.fileType = m_pListView->GetType(data2.name, data2.is_dir());
+		}
+
+		CMP(CmpStringNoCase, type1.fileType, type2.fileType);
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+
+protected:
+	CFileListCtrl<DataEntry>* const m_pListView;
+	std::vector<DataEntry>& m_fileData;
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortTime : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortTime(Listing const& listing, std::vector<DataEntry>&, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		CMP(CmpDir, data1, data2);
+
+		CMP(CmpTime, data1, data2);
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortPermissions : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortPermissions(Listing const& listing, std::vector<DataEntry>&, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		CMP(CmpDir, data1, data2);
+
+		CMP(CmpStringNoCase, *data1.permissions, *data2.permissions);
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortOwnerGroup : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortOwnerGroup(Listing const& listing, std::vector<DataEntry>&, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		CMP(CmpDir, data1, data2);
+
+		CMP(CmpStringNoCase, *data1.ownerGroup, *data2.ownerGroup);
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortPath : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortPath(Listing const& listing, std::vector<DataEntry>& fileData, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode)
+		, m_fileData(fileData)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		if (data1.path < data2.path) {
+			return true;
+		}
+		if (data1.path != data2.path) {
+			return false;
+		}
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+	std::vector<DataEntry>& m_fileData;
+};
+
+template<typename Listing, typename DataEntry>
+class CFileListCtrlSortNamePath : public CFileListCtrlSort<Listing>
+{
+public:
+	CFileListCtrlSortNamePath(Listing const& listing, std::vector<DataEntry>& fileData, CFileListCtrlSortBase::DirSortMode dirSortMode, CFileListCtrlSortBase::NameSortMode nameSortMode, CFileListCtrl<DataEntry>* const)
+		: CFileListCtrlSort<Listing>(listing, dirSortMode, nameSortMode)
+		, m_fileData(fileData)
+	{
+	}
+
+	bool operator()(int a, int b) const
+	{
+		typename Listing::value_type const& data1 = this->m_listing[a];
+		typename Listing::value_type const& data2 = this->m_listing[b];
+
+		CMP(CmpDir, data1, data2);
+		CMP(CmpName, data1, data2);
+
+		if (data1.path < data2.path) {
+			return true;
+		}
+		if (data1.path != data2.path) {
+			return false;
+		}
+
+		CMP_LESS(CmpName, data1, data2);
+	}
+	std::vector<DataEntry>& m_fileData;
+};
+
+namespace genericTypes {
+	enum type {
+		file,
+		directory
+	};
+}
+
+template<class CFileData> class CFileListCtrl : public wxListCtrlEx, public CComparableListing
+{
+	template<typename Listing, typename DataEntry> friend class CFileListCtrlSortType;
+public:
+	CFileListCtrl(wxWindow* pParent, CQueueView *pQueue, bool border = false);
+	virtual ~CFileListCtrl() = default;
+
+	void SetFilelistStatusBar(CFilelistStatusBar* pFilelistStatusBar) { m_pFilelistStatusBar = pFilelistStatusBar; }
+	CFilelistStatusBar* GetFilelistStatusBar() { return m_pFilelistStatusBar; }
+
+	void ClearSelection();
+
+	virtual void OnNavigationEvent(bool) {}
+
+	std::vector<unsigned int> const& indexMapping() const { return m_indexMapping; }
+
+protected:
+	CQueueView *m_pQueue{};
+
+	std::vector<CFileData> m_fileData;
+	std::vector<unsigned int> m_indexMapping;
+	std::vector<unsigned int> m_originalIndexMapping; // m_originalIndexMapping will only be set on comparisons
+
+	virtual bool ItemIsDir(int index) const = 0;
+	virtual int64_t ItemGetSize(int index) const = 0;
+
+	std::map<wxString, std::wstring> m_fileTypeMap;
+
+	// The .. item
+	bool m_hasParent{true};
+
+	int m_sortColumn{-1};
+	int m_sortDirection{};
+
+	void InitSort(int optionID); // Has to be called after initializing columns
+	void SortList(int column = -1, int direction = -1, bool updateSelections = true);
+	CFileListCtrlSortBase::DirSortMode GetDirSortMode();
+	CFileListCtrlSortBase::NameSortMode GetNameSortMode();
+	virtual std::unique_ptr<CFileListCtrlSortBase> GetSortComparisonObject() = 0;
+
+	// An empty path denotes a virtual file
+	std::wstring GetType(std::wstring name, bool dir, std::wstring const& path = std::wstring());
+
+	// Comparison related
+	virtual void ScrollTopItem(int item);
+	virtual void OnPostScroll();
+	virtual void OnExitComparisonMode();
+	virtual void CompareAddFile(t_fileEntryFlags flags);
+
+	int m_comparisonIndex{-1};
+
+	// Remembers which non-fill items are selected if enabling/disabling comparison.
+	// Exploit fact that sort order doesn't change -> O(n)
+	void ComparisonRememberSelections();
+	void ComparisonRestoreSelections();
+	std::deque<int> m_comparisonSelections;
+
+	CFilelistStatusBar* m_pFilelistStatusBar{};
+
+	// Indexes of the items added, sorted ascending.
+	void UpdateSelections_ItemsAdded(std::vector<int> const& added_indexes);
+
+#ifndef __WXMSW__
+	// Generic wxListCtrl does not support wxLIST_STATE_DROPHILITED, emulate it
+	wxListItemAttr m_dropHighlightAttribute;
+#endif
+
+	void SetSelection(int item, bool select);
+#ifndef __WXMSW__
+	// Used by selection tracking
+	void SetItemCount(int count);
+#endif
+
+#ifdef __WXMSW__
+	virtual int GetOverlayIndex(int) { return 0; }
+#endif
+
+private:
+	void UpdateSelections(int min, int max);
+
+	void SortList_UpdateSelections(bool* selections, int focused_item, unsigned int focused_index);
+
+	// If this is set to true, don't process selection changed events
+	bool m_insideSetSelection{};
+
+#ifdef __WXMSW__
+	virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
+	virtual bool MSWOnNotify(int idCtrl, WXLPARAM lParam, WXLPARAM *result);
+#else
+	int m_focusItem{-1};
+	std::vector<bool> m_selections;
+	int m_pending_focus_processing{};
+#endif
+
+#if defined(__WXGTK__) && !defined(__WXGTK3__)
+	std::unique_ptr<CGtkEventCallbackProxyBase> m_gtkEventCallbackProxy;
+#endif
+
+	std::wstring m_genericTypes[2];
+
+	DECLARE_EVENT_TABLE()
+	void OnColumnClicked(wxListEvent &event);
+	void OnColumnRightClicked(wxListEvent& event);
+	void OnItemSelected(wxListEvent& event);
+	void OnItemDeselected(wxListEvent& event);
+#ifndef __WXMSW__
+	void OnFocusChanged(wxListEvent& event);
+	void OnProcessFocusChange(wxCommandEvent& event);
+	void OnLeftDown(wxMouseEvent& event);
+	void OnProcessMouseEvent(wxCommandEvent& event);
+#endif
+	void OnKeyDown(wxKeyEvent& event);
+};
+
+class SortPredicate
+{
+public:
+	SortPredicate() = delete;
+	SortPredicate(std::unique_ptr<CFileListCtrlSortBase> const& ref)
+		: p_(ref.get())
+	{}
+
+	inline bool operator()(int lhs, int rhs) {
+		return (*p_)(lhs, rhs);
+	}
+
+public:
+	CFileListCtrlSortBase const* p_;
+};
+
+#ifdef FILELISTCTRL_INCLUDE_TEMPLATE_DEFINITION
+#include "filelistctrl.cpp"
+#endif
+
+#endif
diff -Naupr a/src/interface/filezilla.h b/src/interface/filezilla.h
--- a/src/interface/filezilla.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/filezilla.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,80 @@
+#ifndef FILEZILLA_INTERFACE_FILEZILLA_HEADER
+#define FILEZILLA_INTERFACE_FILEZILLA_HEADER
+
+#include <libfilezilla_engine.h>
+
+#include "msgbox.h"
+
+#ifndef PACKAGE_NAME
+#define PACKAGE_NAME "FileZilla"
+#endif
+
+#ifndef PACKAGE_VERSION
+	#define PACKAGE_VERSION "custom build"
+
+	// Disable updatechecks if we have no version information
+	#ifdef FZ_MANUALUPDATECHECK
+		#undef FZ_MANUALUPDATECHECK
+	#endif
+	#define FZ_MANUALUPDATECHECK 0
+#endif
+
+#ifndef FZ_MANUALUPDATECHECK
+	#define FZ_MANUALUPDATECHECK 1
+#endif
+
+#ifndef FZ_AUTOUPDATECHECK
+	#if FZ_MANUALUPDATECHECK
+		#define FZ_AUTOUPDATECHECK 1
+	#else
+		#define FZ_AUTOUPDATECHECK 0
+	#endif
+#else
+	#if FZ_AUTOUPDATECHECK && !FZ_MANUALUPDATECHECK
+		#undef FZ_AUTOUPDATECHECK
+		#define FZ_AUTOUPDATECHECK 0
+	#endif
+#endif
+
+#include <wx/app.h>
+#include <wx/button.h>
+#include <wx/checkbox.h>
+#include <wx/checklst.h>
+#include <wx/choice.h>
+#include <wx/dataobj.h>
+#include <wx/dc.h>
+#include <wx/dcmemory.h>
+#include <wx/dialog.h>
+#include <wx/dir.h>
+#include <wx/dirdlg.h>
+#include <wx/file.h>
+#include <wx/filedlg.h>
+#include <wx/filefn.h>
+#include <wx/frame.h>
+#include <wx/list.h>
+#include <wx/listctrl.h>
+#include <wx/image.h>
+#include <wx/imaglist.h>
+#include <wx/log.h>
+#include <wx/menu.h>
+#include <wx/mimetype.h>
+#include <wx/msgdlg.h>
+#include <wx/notebook.h>
+#include <wx/radiobut.h>
+#include <wx/settings.h>
+#include <wx/sizer.h>
+#include <wx/splitter.h>
+#include <wx/spinctrl.h>
+#include <wx/statbmp.h>
+#include <wx/stattext.h>
+#include <wx/statusbr.h>
+#include <wx/sysopt.h>
+#include <wx/textdlg.h>
+#include <wx/toolbar.h>
+#include <wx/treectrl.h>
+#include <wx/xrc/xmlres.h>
+#include <wx/xml/xml.h>
+
+#include <libfilezilla/glue/wx.hpp>
+
+#endif
diff -Naupr a/src/interface/filezillaapp.h b/src/interface/filezillaapp.h
--- a/src/interface/filezillaapp.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/filezillaapp.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,81 @@
+#ifndef FILEZILLA_INTERFACE_FILEZILLAAPP_HEADER
+#define FILEZILLA_INTERFACE_FILEZILLAAPP_HEADER
+
+#include "local_path.h"
+
+#include <vector>
+
+class CWrapEngine;
+class CCommandLine;
+class CThemeProvider;
+
+class CFileZillaApp : public wxApp
+{
+public:
+	CFileZillaApp();
+	virtual ~CFileZillaApp();
+
+	virtual bool OnInit();
+	virtual int OnExit();
+
+	// Always (back)slash-terminated
+	CLocalPath GetResourceDir() const { return m_resourceDir; }
+	CLocalPath GetDefaultsDir() const { return m_defaultsDir; }
+	CLocalPath GetLocalesDir() const { return m_localesDir; }
+
+	std::wstring GetSettingsFile(std::wstring const& name) const;
+
+	void CheckExistsFzsftp();
+#if ENABLE_STORJ
+	void CheckExistsFzstorj();
+#endif
+
+	void InitLocale();
+	bool SetLocale(int language);
+	int GetCurrentLanguage() const;
+	wxString GetCurrentLanguageCode() const;
+
+	void DisplayEncodingWarning();
+
+	CWrapEngine* GetWrapEngine();
+
+	const CCommandLine* GetCommandLine() const { return m_pCommandLine.get(); }
+
+	void ShowStartupProfile();
+	void AddStartupProfileRecord(std::string const& msg);
+
+protected:
+	void CheckExistsTool(std::wstring const& tool, std::wstring const& buildRelPath, std::string const& env, int setting, std::wstring const& description);
+
+	bool InitDefaultsDir();
+	bool LoadResourceFiles();
+	bool LoadLocales();
+	int ProcessCommandLine();
+
+	std::unique_ptr<wxLocale> m_pLocale;
+
+	CLocalPath m_resourceDir;
+	CLocalPath m_defaultsDir;
+	CLocalPath m_localesDir;
+
+#if wxUSE_DEBUGREPORT && wxUSE_ON_FATAL_EXCEPTION
+	virtual void OnFatalException();
+#endif
+
+	CLocalPath GetDataDir(std::vector<std::wstring> const& fileToFind, std::wstring const& prefixSub, bool searchSelfDir = true) const;
+
+	bool FileExists(std::wstring const& file) const;
+
+	std::unique_ptr<CWrapEngine> m_pWrapEngine;
+
+	std::unique_ptr<CCommandLine> m_pCommandLine;
+
+	fz::monotonic_clock m_profile_start;
+	std::vector<std::pair<fz::monotonic_clock, std::string>> m_startupProfile;
+
+	std::unique_ptr<CThemeProvider> themeProvider_;
+};
+
+DECLARE_APP(CFileZillaApp)
+
+#endif
diff -Naupr a/src/interface/filter.cpp b/src/interface/filter.cpp
--- a/src/interface/filter.cpp	2020-01-23 12:18:25.000000000 +0100
+++ b/src/interface/filter.cpp	2020-02-19 16:39:03.000000000 +0100
@@ -11,6 +11,9 @@
 
 #include <libfilezilla/local_filesys.hpp>
 
+#include <wx/statline.h>
+#include <wx/statbox.h>
+
 #include <array>
 
 bool CFilterManager::m_loaded = false;
@@ -120,24 +123,87 @@ bool CFilterDialog::Create(CMainFrame* p
 {
 	m_pMainFrame = parent;
 
-	if (!Load(parent, _T("ID_FILTER"))) {
-		return false;
+	wxDialogEx::Create(parent, -1, _("Directory listing filters"));
+
+	auto & lay = layout();
+
+	auto main = lay.createMain(this, 1);
+	main->AddGrowableCol(0);
+
+	{
+		auto row = lay.createFlex(0, 1);
+		main->Add(row);
+
+		row->Add(new wxStaticText(this, -1, _("&Filter sets:")), lay.valign);
+		auto choice = new wxChoice(this, XRCID("ID_SETS"));
+		choice->SetFocus();
+		row->Add(choice, lay.valign);
+		row->Add(new wxButton(this, XRCID("ID_SAVESET"), _("&Save as...")), lay.valign);
+		row->Add(new wxButton(this, XRCID("ID_RENAMESET"), _("&Rename...")), lay.valign);
+		row->Add(new wxButton(this, XRCID("ID_DELETESET"), _("&Delete...")), lay.valign);
+
+		wxString name = _("Custom filter set");
+		choice->Append(_T("<") + name + _T(">"));
+		for (size_t i = 1; i < m_filterSets.size(); ++i) {
+			choice->Append(m_filterSets[i].name);
+		}
+		choice->SetSelection(m_currentFilterSet);
 	}
 
-	XRCCTRL(*this, "ID_LOCALFILTERS", wxCheckListBox)->Connect(wxID_ANY, wxEVT_LEFT_DOWN, wxMouseEventHandler(CFilterDialog::OnMouseEvent), 0, this);
-	XRCCTRL(*this, "ID_LOCALFILTERS", wxCheckListBox)->Connect(wxID_ANY, wxEVT_KEY_DOWN, wxKeyEventHandler(CFilterDialog::OnKeyEvent), 0, this);
-	XRCCTRL(*this, "ID_REMOTEFILTERS", wxCheckListBox)->Connect(wxID_ANY, wxEVT_LEFT_DOWN, wxMouseEventHandler(CFilterDialog::OnMouseEvent), 0, this);
-	XRCCTRL(*this, "ID_REMOTEFILTERS", wxCheckListBox)->Connect(wxID_ANY, wxEVT_KEY_DOWN, wxKeyEventHandler(CFilterDialog::OnKeyEvent), 0, this);
+	auto sides = lay.createGrid(2);
+	main->Add(sides, lay.grow);
 
-	DisplayFilters();
+	{
+		auto [box, inner] = lay.createStatBox(sides, _("Local filters:"), 1);
+		inner->AddGrowableCol(0);
+		auto filters = new wxCheckListBox(box, XRCID("ID_LOCALFILTERS"), wxDefaultPosition, wxSize(-1, lay.dlgUnits(100)));
+		inner->Add(filters, 1, wxGROW);
+		auto row = lay.createFlex(0, 1);
+		inner->Add(row, 0, wxALIGN_CENTER_HORIZONTAL);
+		row->Add(new wxButton(box, XRCID("ID_LOCAL_ENABLEALL"), _("E&nable all")), lay.valign);
+		row->Add(new wxButton(box, XRCID("ID_LOCAL_DISABLEALL"), _("D&isable all")), lay.valign);
+
+		filters->Connect(wxID_ANY, wxEVT_LEFT_DOWN, wxMouseEventHandler(CFilterDialog::OnMouseEvent), 0, this);
+		filters->Connect(wxID_ANY, wxEVT_KEY_DOWN, wxKeyEventHandler(CFilterDialog::OnKeyEvent), 0, this);
 
-	wxChoice* pChoice = XRCCTRL(*this, "ID_SETS", wxChoice);
-	wxString name = _("Custom filter set");
-	pChoice->Append(_T("<") + name + _T(">"));
-	for (size_t i = 1; i < m_filterSets.size(); ++i) {
-		pChoice->Append(m_filterSets[i].name);
 	}
-	pChoice->SetSelection(m_currentFilterSet);
+	{
+		auto [box, inner] = lay.createStatBox(sides, _("Remote filters:"), 1);
+		inner->AddGrowableCol(0);
+		auto filters = new wxCheckListBox(box, XRCID("ID_REMOTEFILTERS"), wxDefaultPosition, wxSize(-1, lay.dlgUnits(100)));
+		inner->Add(filters, 1, wxGROW);
+		auto row = lay.createFlex(0, 1);
+		inner->Add(row, 0, wxALIGN_CENTER_HORIZONTAL);
+		row->Add(new wxButton(box, XRCID("ID_REMOTE_ENABLEALL"), _("En&able all")), lay.valign);
+		row->Add(new wxButton(box, XRCID("ID_REMOTE_DISABLEALL"), _("Disa&ble all")), lay.valign);
+
+		filters->Connect(wxID_ANY, wxEVT_LEFT_DOWN, wxMouseEventHandler(CFilterDialog::OnMouseEvent), 0, this);
+		filters->Connect(wxID_ANY, wxEVT_KEY_DOWN, wxKeyEventHandler(CFilterDialog::OnKeyEvent), 0, this);
+	}
+
+
+	main->Add(new wxStaticText(this, -1, _("Hold the shift key to toggle the filter state on both sides simultaneously.")));
+
+	main->Add(new wxStaticLine(this), lay.grow);
+
+	{
+		auto row = lay.createFlex(0, 1);
+		row->AddGrowableCol(0);
+		main->Add(row, lay.grow);
+		row->Add(new wxButton(this, XRCID("ID_EDIT"), _("&Edit filter rules...")), lay.valign);
+		row->AddStretchSpacer();
+
+		auto buttons = lay.createGrid(0, 1);
+		row->Add(buttons, lay.valign);
+		auto ok = new wxButton(this, wxID_OK, _("OK"));
+		ok->SetDefault();
+		buttons->Add(ok, lay.valigng);
+		buttons->Add(new wxButton(this, wxID_CANCEL, _("Cancel")), lay.valigng);
+		buttons->Add(new wxButton(this, wxID_APPLY, _("Apply")), lay.valigng);
+	}
+	
+	DisplayFilters();
+
 	SetCtrlState();
 
 	GetSizer()->Fit(this);
diff -Naupr a/src/interface/filter.h b/src/interface/filter.h
--- a/src/interface/filter.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/filter.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,163 @@
+#ifndef FILEZILLA_INTERFACE_FILTER_HEADER
+#define FILEZILLA_INTERFACE_FILTER_HEADER
+
+#include "dialogex.h"
+
+#include <memory>
+#include <regex>
+
+enum t_filterType
+{
+	filter_name = 0x01,
+	filter_size = 0x02,
+	filter_attributes = 0x04,
+	filter_permissions = 0x08,
+	filter_path = 0x10,
+	filter_date = 0x20,
+#ifdef __WXMSW__
+	filter_meta = filter_attributes,
+	filter_foreign = filter_permissions,
+#else
+	filter_meta = filter_permissions,
+	filter_foreign = filter_attributes
+#endif
+};
+
+class CFilterCondition
+{
+public:
+	bool set(t_filterType t, std::wstring const& v, int c, bool matchCase);
+
+	std::wstring strValue;
+	std::wstring lowerValue; // Name and path matches
+	fz::datetime date; // If type is date
+	int64_t value{}; // If type is size
+	std::shared_ptr<std::wregex> pRegEx;
+
+	t_filterType type{filter_name};
+	int condition{};
+};
+
+class CFilter
+{
+public:
+	enum t_matchType
+	{
+		all,
+		any,
+		none,
+		not_all
+	};
+
+	bool empty() const { return filters.empty(); }
+
+	explicit operator bool() const { return !filters.empty(); }
+
+	std::vector<CFilterCondition> filters;
+
+	std::wstring name;
+
+	t_matchType matchType{ all };
+
+	bool filterFiles{ true };
+	bool filterDirs{ true };
+
+	// Filenames on Windows ignore case
+#ifdef __WXMSW__
+	bool matchCase{};
+#else
+	bool matchCase{ true };
+#endif
+
+	bool HasConditionOfType(t_filterType type) const;
+	bool IsLocalFilter() const;
+};
+
+class CFilterSet
+{
+public:
+	std::wstring name;
+	std::vector<bool> local;
+	std::vector<bool> remote;
+};
+
+typedef std::pair<std::vector<CFilter>, std::vector<CFilter>> ActiveFilters;
+
+namespace pugi { class xml_node; }
+class CFilterManager
+{
+public:
+	CFilterManager();
+	virtual ~CFilterManager() = default;
+
+	// Note: Under non-windows, attributes are permissions
+	virtual bool FilenameFiltered(std::wstring const& name, std::wstring const& path, bool dir, int64_t size, bool local, int attributes, fz::datetime const& date) const;
+	bool FilenameFiltered(std::vector<CFilter> const& filters, std::wstring const& name, std::wstring const& path, bool dir, int64_t size, int attributes, fz::datetime const& date) const;
+	static bool FilenameFilteredByFilter(CFilter const& filter, std::wstring const& name, std::wstring const& path, bool dir, int64_t size, int attributes, fz::datetime const& date);
+	static bool HasActiveFilters(bool ignore_disabled = false);
+
+	bool HasSameLocalAndRemoteFilters() const;
+
+	static void ToggleFilters();
+
+	ActiveFilters GetActiveFilters();
+
+	bool HasActiveLocalFilters() const;
+	bool HasActiveRemoteFilters() const;
+
+	static void Import(pugi::xml_node& element);
+	static bool LoadFilter(pugi::xml_node& element, CFilter& filter);
+	static void SaveFilter(pugi::xml_node& element, const CFilter& filter);
+
+protected:
+	static void LoadFilters();
+	static void LoadFilters(pugi::xml_node& element);
+	static void SaveFilters();
+
+	static bool m_loaded;
+
+	static std::vector<CFilter> m_globalFilters;
+
+	static std::vector<CFilterSet> m_globalFilterSets;
+	static unsigned int m_globalCurrentFilterSet;
+
+	static bool m_filters_disabled;
+};
+
+class CMainFrame;
+class CFilterDialog final : public wxDialogEx, public CFilterManager
+{
+public:
+	CFilterDialog();
+
+	bool Create(CMainFrame* parent);
+
+protected:
+	void DisplayFilters();
+
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnOkOrApply(wxCommandEvent& event);
+	void OnCancel(wxCommandEvent& event);
+	void OnEdit(wxCommandEvent& event);
+	void OnFilterSelect(wxCommandEvent& event);
+	void OnMouseEvent(wxMouseEvent& event);
+	void OnKeyEvent(wxKeyEvent& event);
+	void OnSaveAs(wxCommandEvent& event);
+	void OnRename(wxCommandEvent& event);
+	void OnDeleteSet(wxCommandEvent& event);
+	void OnSetSelect(wxCommandEvent& event);
+
+	void OnChangeAll(wxCommandEvent& event);
+
+	bool m_shiftClick{};
+
+	CMainFrame* m_pMainFrame{};
+
+	std::vector<CFilter> m_filters;
+	std::vector<CFilterSet> m_filterSets;
+	unsigned int m_currentFilterSet;
+};
+
+#endif
diff -Naupr a/src/interface/filter_conditions_dialog.cpp b/src/interface/filter_conditions_dialog.cpp
--- a/src/interface/filter_conditions_dialog.cpp	2020-01-23 12:18:25.000000000 +0100
+++ b/src/interface/filter_conditions_dialog.cpp	2020-02-20 16:00:03.000000000 +0100
@@ -35,7 +35,6 @@ CFilterControls::CFilterControls()
 }
 
 BEGIN_EVENT_TABLE(CFilterConditionsDialog, wxDialogEx)
-EVT_BUTTON(wxID_ANY, CFilterConditionsDialog::OnButton)
 EVT_CHOICE(wxID_ANY, CFilterConditionsDialog::OnFilterTypeChange)
 EVT_LISTBOX(wxID_ANY, CFilterConditionsDialog::OnConditionSelectionChange)
 END_EVENT_TABLE()
@@ -291,6 +290,7 @@ void CFilterConditionsDialog::MakeContro
 
 	if (!controls.pRemove) {
 		controls.pRemove = std::make_unique<wxButton>(m_pListCtrl, wxID_ANY, _T("-"), wxDefaultPosition, m_button_size, wxBU_EXACTFIT);
+		controls.pRemove->Bind(wxEVT_BUTTON, [this](wxEvent const& ev) { OnButton(ev.GetId()); });
 		if (m_button_size.x <= 0) {
 			m_button_size.x = wxMax(m_choiceBoxHeight, controls.pRemove->GetSize().x);
 			m_button_size.y = m_choiceBoxHeight;
@@ -350,6 +350,7 @@ void CFilterConditionsDialog::DestroyCon
 
 void CFilterConditionsDialog::EditFilter(CFilter const& filter)
 {
+	Freeze();
 	DestroyControls();
 
 	// Create new controls
@@ -369,6 +370,7 @@ void CFilterConditionsDialog::EditFilter
 
 	CFilterControls & controls = m_filterControls.back();
 	controls.pRemove = std::make_unique<wxButton>(m_pListCtrl, wxID_ANY, _T("+"), wxDefaultPosition, m_button_size);
+	controls.pRemove->Bind(wxEVT_BUTTON, [this](wxEvent const& ev) { OnButton(ev.GetId()); });
 	controls.sizer->AddStretchSpacer();
 	controls.sizer->Add(controls.pRemove.get(), 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE|wxRIGHT, 5);
 
@@ -377,6 +379,7 @@ void CFilterConditionsDialog::EditFilter
 	XRCCTRL(*this, "ID_MATCHTYPE", wxChoice)->SetSelection(filter.matchType);
 
 	SetFilterCtrlState(false);
+	Thaw();
 }
 
 CFilter CFilterConditionsDialog::GetFilter(bool matchCase)
@@ -538,18 +541,19 @@ void CFilterConditionsDialog::OnConditio
 	}
 }
 
-void CFilterConditionsDialog::OnButton(wxCommandEvent& event)
+void CFilterConditionsDialog::OnButton(int id)
 {
 	for (size_t i = 0; i < m_filterControls.size(); ++i) {
-		if (m_filterControls[i].pRemove->GetId() == event.GetId()) {
+		if (m_filterControls[i].pRemove->GetId() == id) {
+			Freeze();
 			if (i + 1 == m_filterControls.size()) {
 				OnMore();
 			}
 			else {
 				OnRemove(i);
 			}
+			Thaw();
 			return;
 		}
 	}
-	event.Skip();
 }
diff -Naupr a/src/interface/filter_conditions_dialog.h b/src/interface/filter_conditions_dialog.h
--- a/src/interface/filter_conditions_dialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/filter_conditions_dialog.h	2020-02-20 16:00:03.000000000 +0100
@@ -0,0 +1,75 @@
+#ifndef FILEZILLA_INTERFACE_CONDITIONS_DIALOG_HEADER
+#define FILEZILLA_INTERFACE_CONDITIONS_DIALOG_HEADER
+
+#include "dialogex.h"
+#include "filter.h"
+#include <set>
+
+class CFilterControls final
+{
+public:
+	CFilterControls();
+
+	std::unique_ptr<wxBoxSizer> sizer;
+	std::unique_ptr<wxChoice> pType;
+	std::unique_ptr<wxChoice> pCondition;
+	std::unique_ptr<wxTextCtrl> pValue;
+	std::unique_ptr<wxChoice> pSet;
+	std::unique_ptr<wxStaticText> pLabel;
+	std::unique_ptr<wxButton> pRemove;
+};
+
+class wxCustomHeightListCtrl;
+class CFilterConditionsDialog : public wxDialogEx
+{
+public:
+	CFilterConditionsDialog();
+
+	// has_foreign_type for attributes on MSW, permissions on *nix
+	// has_foreign_type for attributes on *nix, permissions on MSW
+	bool CreateListControl(int conditions);
+
+	void EditFilter(CFilter const& filter);
+	CFilter GetFilter(bool matchCase);
+	void ClearFilter();
+	bool ValidateFilter(wxString& error, bool allow_empty = false);
+
+private:
+	void CalcMinListWidth();
+
+	t_filterType GetTypeFromTypeSelection(int selection);
+	void SetSelectionFromType(wxChoice* pChoice, t_filterType);
+
+	void MakeControls(CFilterCondition const& condition, size_t i);
+	void UpdateControls(CFilterCondition const& condition, size_t i);
+
+	void DestroyControls();
+
+	void SetFilterCtrlState(bool disable);
+
+	bool m_has_foreign_type;
+
+	wxCustomHeightListCtrl* m_pListCtrl;
+	wxSize m_lastListSize;
+	int m_choiceBoxHeight;
+
+	std::vector<CFilterControls> m_filterControls;
+
+	CFilter m_currentFilter;
+
+	wxArrayString filterTypes;
+	std::vector<t_filterType> filter_type_map;
+
+	wxSize m_button_size;
+	wxSize m_size_label_size;
+
+	void OnButton(int id);
+	void OnMore();
+	void OnRemove(size_t item);
+
+	DECLARE_EVENT_TABLE()
+	void OnFilterTypeChange(wxCommandEvent& event);
+	void OnConditionSelectionChange(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/filteredit.cpp b/src/interface/filteredit.cpp
--- a/src/interface/filteredit.cpp	2020-01-23 12:18:25.000000000 +0100
+++ b/src/interface/filteredit.cpp	2020-02-20 16:00:03.000000000 +0100
@@ -3,6 +3,7 @@
 #include "customheightlistctrl.h"
 #include "window_state_manager.h"
 #include "Options.h"
+#include "textctrlex.h"
 
 #include <libfilezilla/translate.hpp>
 
@@ -17,9 +18,6 @@ EVT_LISTBOX(XRCID("ID_FILTERS"), CFilter
 END_EVENT_TABLE()
 
 CFilterEditDialog::CFilterEditDialog()
-	: m_pFilterListCtrl(0)
-	, m_currentSelection(-1)
-	, m_pWindowStateManager(0)
 {
 }
 
@@ -72,9 +70,83 @@ bool CFilterEditDialog::Create(wxWindow*
 		break;
 	}
 
-	if (!Load(parent, _T("ID_EDITFILTER"))) {
-		return false;
-	}
+	wxDialogEx::Create(parent, -1, _("Edit filters"), wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
+
+	auto& lay = layout();
+
+	auto main = lay.createMain(this, 1);
+	main->AddGrowableCol(0);
+	main->AddGrowableRow(0);
+
+	auto sides = lay.createFlex(2);
+	main->Add(sides, lay.grow);
+	sides->AddGrowableRow(0);
+	sides->AddGrowableCol(1);
+
+	{
+		auto left = lay.createFlex(1);
+		sides->Add(left, lay.grow);
+		left->AddGrowableRow(1);
+
+		left->Add(new wxStaticText(this, -1, _("&Filters:")));
+		filterList_ = new wxListBox(this, XRCID("ID_FILTERS"));
+		filterList_->SetFocus();
+		left->Add(filterList_, lay.grow);
+
+		auto grid = lay.createGrid(2, 2);
+		left->Add(grid, 0, wxALIGN_CENTER_HORIZONTAL);
+
+		grid->Add(new wxButton(this, XRCID("ID_NEW"), _("&New")));
+		grid->Add(new wxButton(this, XRCID("ID_DELETE"), _("&Delete")));
+		grid->Add(new wxButton(this, XRCID("ID_RENAME"), _("&Rename")));
+		grid->Add(new wxButton(this, XRCID("ID_COPY"), _("&Duplicate")));
+	}
+	{
+		auto right = lay.createFlex(1);
+		sides->Add(right, lay.grow);
+		right->AddGrowableCol(0);
+		right->AddGrowableRow(2);
+
+		auto row = lay.createFlex(2);
+		right->Add(row, lay.grow);
+		row->AddGrowableCol(1);
+		row->Add(new wxStaticText(this, -1, _("F&ilter name:")), lay.valign);
+		row->Add(new wxTextCtrlEx(this, XRCID("ID_NAME"), wxString()), lay.valigng);
+
+		row = lay.createFlex(2);
+		right->Add(row, lay.grow);
+		row->AddGrowableCol(1);
+		row->Add(new wxStaticText(this, -1, _("&Filter conditions:")), lay.valign);
+		auto choice = new wxChoice(this, XRCID("ID_MATCHTYPE"));
+		row->Add(choice, lay.valigng);
+
+		choice->AppendString(_("Filter out items matching all of the following"));
+		choice->AppendString(_("Filter out items matching any of the following"));
+		choice->AppendString(_("Filter out items matching none of the following"));
+		choice->AppendString(_("Filter out items matching not all of the following"));
+
+		auto conditions = new wxCustomHeightListCtrl(this, XRCID("ID_CONDITIONS"), wxDefaultPosition, wxDefaultSize, wxVSCROLL | wxSUNKEN_BORDER | wxTAB_TRAVERSAL);
+		conditions->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_WINDOW));
+		right->Add(conditions, lay.grow)->SetMinSize(wxSize(lay.dlgUnits(200), lay.dlgUnits(100)));
+
+		right->Add(new wxCheckBox(this, XRCID("ID_CASE"), _("Conditions are c&ase sensitive")));
+		row = lay.createFlex(0, 1);
+		right->Add(row);
+		row->Add(new wxStaticText(this, -1, _("Filter applies to:")));
+		row->Add(new wxCheckBox(this, XRCID("ID_FILES"), _("Fil&es")));
+		row->Add(new wxCheckBox(this, XRCID("ID_DIRS"), _("Dire&ctories")));
+	}
+	auto buttons = lay.createButtonSizer(this, main, false);
+	auto ok = new wxButton(this, wxID_OK, _("OK"));
+	ok->SetDefault();
+	buttons->AddButton(ok);
+	auto cancel = new wxButton(this, wxID_CANCEL, _("Cancel"));
+	buttons->AddButton(cancel);
+	buttons->Realize();
+
+	Layout();
+	GetSizer()->Fit(this);
+	SetMinSize(GetSize());
 
 	int conditions = filter_name | filter_size | filter_path | filter_meta | filter_date;
 	if (has_foreign_type) {
@@ -84,16 +156,10 @@ bool CFilterEditDialog::Create(wxWindow*
 		return false;
 	}
 
-	m_pFilterListCtrl = XRCCTRL(*this, "ID_FILTERS", wxListBox);
-	if (!m_pFilterListCtrl) {
-		return false;
-	}
-	m_currentSelection = -1;
-
 	m_filters = filters;
 	m_filterSets = filterSets;
-	for (std::vector<CFilter>::const_iterator iter = filters.begin(); iter != filters.end(); ++iter) {
-		m_pFilterListCtrl->Append(iter->name);
+	for (auto const& filter: filters) {
+		filterList_->Append(filter.name);
 	}
 
 	m_pWindowStateManager = new CWindowStateManager(this);
@@ -116,11 +182,11 @@ void CFilterEditDialog::SaveFilter(CFilt
 	filter.filterDirs = XRCCTRL(*this, "ID_DIRS", wxCheckBox)->GetValue();
 
 	filter.name = XRCCTRL(*this, "ID_NAME", wxTextCtrl)->GetValue().ToStdWstring();
-	if (filter.name != m_pFilterListCtrl->GetString(m_currentSelection)) {
+	if (filter.name != filterList_->GetString(m_currentSelection)) {
 		int oldSelection = m_currentSelection;
-		m_pFilterListCtrl->Delete(oldSelection);
-		m_pFilterListCtrl->Insert(filter.name, oldSelection);
-		m_pFilterListCtrl->SetSelection(oldSelection);
+		filterList_->Delete(oldSelection);
+		filterList_->Insert(filter.name, oldSelection);
+		filterList_->SetSelection(oldSelection);
 	}
 }
 
@@ -136,7 +202,7 @@ void CFilterEditDialog::OnNew(wxCommandE
 	int index = 1;
 	std::wstring name = fztranslate("New filter");
 	std::wstring newName = name;
-	while (m_pFilterListCtrl->FindString(newName) != wxNOT_FOUND) {
+	while (filterList_->FindString(newName) != wxNOT_FOUND) {
 		newName = fz::sprintf(L"%s (%d)", name, ++index);
 	}
 
@@ -151,7 +217,7 @@ void CFilterEditDialog::OnNew(wxCommandE
 		return;
 	}
 
-	if (m_pFilterListCtrl->FindString(newName) != wxNOT_FOUND) {
+	if (filterList_->FindString(newName) != wxNOT_FOUND) {
 		wxMessageBoxEx(_("The entered filter name already exists, please choose a different name."), _("Filter name already exists"), wxICON_ERROR, this);
 		return;
 	}
@@ -167,21 +233,21 @@ void CFilterEditDialog::OnNew(wxCommandE
 		set.remote.push_back(false);
 	}
 
-	int item = m_pFilterListCtrl->Append(newName);
-	m_pFilterListCtrl->Select(item);
+	int item = filterList_->Append(newName);
+	filterList_->Select(item);
 	wxCommandEvent evt;
 	OnFilterSelect(evt);
 }
 
 void CFilterEditDialog::OnDelete(wxCommandEvent&)
 {
-	int item = m_pFilterListCtrl->GetSelection();
+	int item = filterList_->GetSelection();
 	if (item == -1) {
 		return;
 	}
 
 	m_currentSelection = -1;
-	m_pFilterListCtrl->Delete(item);
+	filterList_->Delete(item);
 	m_filters.erase(m_filters.begin() + item);
 
 	// Remote filter from all filter sets
@@ -190,12 +256,18 @@ void CFilterEditDialog::OnDelete(wxComma
 		set.remote.erase(set.remote.begin() + item);
 	}
 
+	XRCCTRL(*this, "ID_NAME", wxTextCtrl)->ChangeValue(wxString());
 	ClearFilter();
 	SetCtrlState(false);
 }
 
 void CFilterEditDialog::OnRename(wxCommandEvent&)
 {
+	if (m_currentSelection == -1) {
+		wxBell();
+		return;
+	}
+
 	const wxString& oldName = XRCCTRL(*this, "ID_NAME", wxTextCtrl)->GetValue();
 	wxTextEntryDialog *pDlg = new wxTextEntryDialog(this, _("Please enter a new name for the filter."), _("Enter filter name"), oldName);
 	pDlg->SetMaxLength(255);
@@ -216,14 +288,14 @@ void CFilterEditDialog::OnRename(wxComma
 		return;
 	}
 
-	if (m_pFilterListCtrl->FindString(newName) != wxNOT_FOUND) {
+	if (filterList_->FindString(newName) != wxNOT_FOUND) {
 		wxMessageBoxEx(_("The entered filter name already exists, please choose a different name."), _("Filter name already exists"), wxICON_ERROR, this);
 		return;
 	}
 
-	m_pFilterListCtrl->Delete(m_currentSelection);
-	m_pFilterListCtrl->Insert(newName, m_currentSelection);
-	m_pFilterListCtrl->Select(m_currentSelection);
+	filterList_->Delete(m_currentSelection);
+	filterList_->Insert(newName, m_currentSelection);
+	filterList_->Select(m_currentSelection);
 }
 
 void CFilterEditDialog::OnCopy(wxCommandEvent&)
@@ -242,7 +314,7 @@ void CFilterEditDialog::OnCopy(wxCommand
 	int index = 1;
 	std::wstring const& name = filter.name;
 	std::wstring newName = name;
-	while (m_pFilterListCtrl->FindString(newName) != wxNOT_FOUND) {
+	while (filterList_->FindString(newName) != wxNOT_FOUND) {
 		newName = fz::sprintf(L"%s (%d)", name, ++index);
 	}
 
@@ -257,7 +329,7 @@ void CFilterEditDialog::OnCopy(wxCommand
 		return;
 	}
 
-	if (m_pFilterListCtrl->FindString(newName) != wxNOT_FOUND) {
+	if (filterList_->FindString(newName) != wxNOT_FOUND) {
 		wxMessageBoxEx(_("The entered filter name already exists, please choose a different name."), _("Filter name already exists"), wxICON_ERROR, this);
 		return;
 	}
@@ -272,15 +344,15 @@ void CFilterEditDialog::OnCopy(wxCommand
 		set.remote.push_back(false);
 	}
 
-	int item = m_pFilterListCtrl->Append(newName);
-	m_pFilterListCtrl->Select(item);
+	int item = filterList_->Append(newName);
+	filterList_->Select(item);
 	wxCommandEvent evt;
 	OnFilterSelect(evt);
 }
 
 void CFilterEditDialog::OnFilterSelect(wxCommandEvent&)
 {
-	int item = m_pFilterListCtrl->GetSelection();
+	int item = filterList_->GetSelection();
 	if (item == -1) {
 		m_currentSelection = -1;
 		SetCtrlState(false);
@@ -305,7 +377,7 @@ void CFilterEditDialog::OnFilterSelect(w
 	}
 
 	m_currentSelection = item;
-	m_pFilterListCtrl->SetSelection(item); // In case SaveFilter has renamed an item
+	filterList_->SetSelection(item); // In case SaveFilter has renamed an item
 	CFilter filter = m_filters[item];
 	EditFilter(filter);
 
@@ -342,22 +414,22 @@ bool CFilterEditDialog::Validate()
 
 	wxString error;
 	if (!ValidateFilter(error)) {
-		m_pFilterListCtrl->SetSelection(m_currentSelection);
+		filterList_->SetSelection(m_currentSelection);
 		wxMessageBoxEx(error, _("Filter validation failed"), wxICON_ERROR, this);
 		return false;
 	}
 
 	wxString name = XRCCTRL(*this, "ID_NAME", wxTextCtrl)->GetValue();
 	if (name.empty()) {
-		m_pFilterListCtrl->SetSelection(m_currentSelection);
+		filterList_->SetSelection(m_currentSelection);
 		XRCCTRL(*this, "ID_NAME", wxTextCtrl)->SetFocus();
 		wxMessageBoxEx(_("Need to enter filter name"), _("Filter validation failed"), wxICON_ERROR, this);
 		return false;
 	}
 
-	int pos = m_pFilterListCtrl->FindString(name);
+	int pos = filterList_->FindString(name);
 	if (pos != wxNOT_FOUND && pos != m_currentSelection) {
-		m_pFilterListCtrl->SetSelection(m_currentSelection);
+		filterList_->SetSelection(m_currentSelection);
 		XRCCTRL(*this, "ID_NAME", wxTextCtrl)->SetFocus();
 		wxMessageBoxEx(_("Filter name already exists"), _("Filter validation failed"), wxICON_ERROR, this);
 		return false;
diff -Naupr a/src/interface/filteredit.h b/src/interface/filteredit.h
--- a/src/interface/filteredit.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/filteredit.h	2020-02-20 16:00:03.000000000 +0100
@@ -0,0 +1,47 @@
+#ifndef FILEZILLA_INTERFACE_FILTEREDIT_HEADER
+#define FILEZILLA_INTERFACE_FILTEREDIT_HEADER
+
+#include "filter.h"
+#include "filter_conditions_dialog.h"
+
+class wxCustomHeightListCtrl;
+class CWindowStateManager;
+class CFilterEditDialog final : public CFilterConditionsDialog
+{
+public:
+	CFilterEditDialog();
+	virtual ~CFilterEditDialog();
+
+	bool Create(wxWindow* parent, const std::vector<CFilter>& filters, const std::vector<CFilterSet>& filterSets);
+
+	const std::vector<CFilter>& GetFilters() const;
+	const std::vector<CFilterSet>& GetFilterSets() const;
+
+	bool Validate();
+
+protected:
+
+	DECLARE_EVENT_TABLE()
+	void OnOK(wxCommandEvent& event);
+	void OnCancel(wxCommandEvent& event);
+	void OnNew(wxCommandEvent& event);
+	void OnDelete(wxCommandEvent& event);
+	void OnRename(wxCommandEvent& event);
+	void OnCopy(wxCommandEvent& event);
+	void OnFilterSelect(wxCommandEvent& event);
+
+	void ShowFilter(const CFilter& filter);
+	void SaveFilter(CFilter& filter);
+
+	void SetCtrlState(bool enabled);
+
+	wxListBox* filterList_{};
+	int m_currentSelection{-1};
+
+	std::vector<CFilter> m_filters;
+	std::vector<CFilterSet> m_filterSets;
+
+	CWindowStateManager* m_pWindowStateManager{};
+};
+
+#endif
diff -Naupr a/src/interface/fzputtygen_interface.h b/src/interface/fzputtygen_interface.h
--- a/src/interface/fzputtygen_interface.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/fzputtygen_interface.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,38 @@
+#ifndef FILEZILLA_FZPUTTYGEN_INTERFACE_HEADER
+#define FILEZILLA_FZPUTTYGEN_INTERFACE_HEADER
+
+namespace fz {
+class process;
+}
+
+class CFZPuttyGenInterface final
+{
+public:
+	CFZPuttyGenInterface(wxWindow* parent);
+	virtual ~CFZPuttyGenInterface();
+	bool LoadKeyFile(std::wstring& keyFile, bool silent, std::wstring& comment, std::wstring& data);
+
+	bool ProcessFailed() const;
+protected:
+	// return -1 on error
+	int NeedsConversion(std::wstring const& keyFile, bool silent);
+
+	// return -1 on error
+	int IsKeyFileEncrypted();
+
+	std::unique_ptr<fz::process> m_process;
+	bool m_initialized{};
+	wxWindow* m_parent;
+
+	enum ReplyCode {
+		success,
+		error,
+		failure
+	};
+
+	bool LoadProcess(bool silent);
+	bool Send(std::wstring const& cmd);
+	ReplyCode GetReply(std::wstring& reply);
+};
+
+#endif /* FILEZILLA_FZPUTTYGEN_INTERFACE_HEADER */
diff -Naupr a/src/interface/graphics.h b/src/interface/graphics.h
--- a/src/interface/graphics.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/graphics.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,73 @@
+#ifndef FILEZILLA_GRAPHICS_HEADER
+#define FILEZILLA_GRAPHICS_HEADER
+
+#include <wx/rawbmp.h>
+#include <wx/window.h>
+
+static inline unsigned char AlphaComposite_Over_GetAlpha(unsigned char bg_alpha, unsigned char fg_alpha)
+{
+	return bg_alpha + fg_alpha - bg_alpha * fg_alpha / 255;
+}
+
+// Do not call with zero new_alpha
+static inline unsigned char AlphaComposite_Over(unsigned char bg, unsigned char bg_alpha, unsigned char fg, unsigned char fg_alpha, unsigned char new_alpha)
+{
+	return (bg * (255 - fg_alpha) * bg_alpha / 255 + fg * fg_alpha) / new_alpha;
+}
+
+// Alpha compositing of a single pixel, b gets composited over a
+// (well-known over operator), result stored in a.
+// All RGB and A values have range from 0 to 255, RGB values aren't
+// premultiplied by A.
+// Safe for multiple compositions.
+static inline void AlphaComposite_Over_Inplace(
+	unsigned char & bg_red, unsigned char & bg_green, unsigned char & bg_blue, unsigned char & bg_alpha,
+	unsigned char & fg_red, unsigned char & fg_green, unsigned char & fg_blue, unsigned char & fg_alpha)
+{
+	if (!fg_alpha) {
+		// Nothing to do. Also prevents zero new_alpha
+		return;
+	}
+
+	unsigned char const new_alpha = AlphaComposite_Over_GetAlpha(bg_alpha, fg_alpha);
+	bg_red   = AlphaComposite_Over(bg_red,   bg_alpha, fg_red,   fg_alpha, new_alpha);
+	bg_green = AlphaComposite_Over(bg_green, bg_alpha, fg_green, fg_alpha, new_alpha);
+	bg_blue  = AlphaComposite_Over(bg_blue,  bg_alpha, fg_blue,  fg_alpha, new_alpha);
+	bg_alpha = new_alpha;
+}
+
+static inline void AlphaComposite_Over_Inplace(wxAlphaPixelData::Iterator &bg, wxAlphaPixelData::Iterator &fg)
+{
+	AlphaComposite_Over_Inplace(bg.Red(), bg.Green(), bg.Blue(), bg.Alpha(), fg.Red(), fg.Green(), fg.Blue(), fg.Alpha());
+}
+
+static inline wxColour AlphaComposite_Over(wxColour const& bg, wxColour const& fg) {
+	if (!fg.IsOk() || !fg.Alpha()) {
+		// Nothing to do. Also prevents zero new_alpha
+		return bg;
+	}
+
+	unsigned char const new_alpha = AlphaComposite_Over_GetAlpha(bg.Alpha(), fg.Alpha());
+	return wxColour(
+		AlphaComposite_Over(bg.Red(),   bg.Alpha(), fg.Red(),   fg.Alpha(), new_alpha),
+		AlphaComposite_Over(bg.Green(), bg.Alpha(), fg.Green(), fg.Alpha(), new_alpha),
+		AlphaComposite_Over(bg.Blue(),  bg.Alpha(), fg.Blue(),  fg.Alpha(), new_alpha),
+		new_alpha
+	);
+}
+
+void Overlay(wxBitmap& bg, wxBitmap const& fg);
+
+class CWindowTinter final
+{
+public:
+	CWindowTinter(wxWindow& wnd);
+
+	void SetBackgroundTint(wxColour const& tint);
+
+private:
+	wxColour m_originalColor;
+	wxWindow& m_wnd;
+};
+
+#endif
diff -Naupr a/src/interface/import.h b/src/interface/import.h
--- a/src/interface/import.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/import.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,22 @@
+#ifndef FILEZILLA_INTERFACE_IMPORT_HEADER
+#define FILEZILLA_INTERFACE_IMPORT_HEADER
+
+#include "dialogex.h"
+
+#include "xmlfunctions.h"
+
+class CQueueView;
+class CImportDialog final : public wxDialogEx
+{
+public:
+	CImportDialog(wxWindow* parent, CQueueView* pQueueView);
+
+	void Run();
+
+protected:
+
+	wxWindow* const m_parent;
+	CQueueView* m_pQueueView;
+};
+
+#endif
diff -Naupr a/src/interface/infotext.h b/src/interface/infotext.h
--- a/src/interface/infotext.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/infotext.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,62 @@
+#ifndef FILEZILLA_INTERFACE_INFOTEXT_HEADER
+#define FILEZILLA_INTERFACE_INFOTEXT_HEADER
+
+#include "graphics.h"
+#include "listctrlex.h"
+
+class CInfoText final : public wxWindow
+{
+public:
+	CInfoText(wxListCtrlEx& parent)
+		: parent_(parent)
+		, m_tinter(*this)
+	{
+		Hide();
+		Create(&parent, wxID_ANY, wxPoint(0, 60), wxDefaultSize);
+
+		SetForegroundColour(parent.GetForegroundColour());
+		SetBackgroundColour(parent.GetBackgroundColour());
+		GetTextExtent(m_text, &m_textSize.x, &m_textSize.y);
+
+#ifdef __WXMSW__
+		if (GetLayoutDirection() != wxLayout_RightToLeft) {
+			SetDoubleBuffered(true);
+		}
+#endif
+	}
+
+	void SetText(wxString const& text)
+	{
+		if (text == m_text) {
+			return;
+		}
+
+		m_text = text;
+		GetTextExtent(m_text, &m_textSize.x, &m_textSize.y);
+	}
+
+	wxSize GetTextSize() const { return m_textSize; }
+
+	bool AcceptsFocus() const { return false; }
+
+	void SetBackgroundTint(wxColour const& colour) {
+		m_tinter.SetBackgroundTint(colour);
+	}
+
+	void Reposition();
+
+protected:
+	wxListCtrlEx& parent_;
+
+	wxString m_text;
+
+	void OnPaint(wxPaintEvent&);
+
+	wxSize m_textSize;
+
+	CWindowTinter m_tinter;
+
+	DECLARE_EVENT_TABLE()
+};
+
+#endif
diff -Naupr a/src/interface/inputdialog.cpp b/src/interface/inputdialog.cpp
--- a/src/interface/inputdialog.cpp	2020-02-15 05:30:03.000000000 +0100
+++ b/src/interface/inputdialog.cpp	2020-02-19 16:39:03.000000000 +0100
@@ -36,6 +36,8 @@ bool CInputDialog::Create(wxWindow* pare
 	ok->Bind(wxEVT_BUTTON, onButton);
 	cancel->Bind(wxEVT_BUTTON, onButton);
 
+	GetSizer()->Fit(this);
+
 	WrapRecursive(this, 2.0);
 
 	textCtrl_->SetFocus();
diff -Naupr a/src/interface/inputdialog.h b/src/interface/inputdialog.h
--- a/src/interface/inputdialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/inputdialog.h	2020-02-15 05:30:03.000000000 +0100
@@ -0,0 +1,25 @@
+#ifndef FILEZILLA_INTERFACE_INPUTDIALOG_HEADER
+#define FILEZILLA_INTERFACE_INPUTDIALOG_HEADER
+
+#include "dialogex.h"
+
+class CInputDialog final : public wxDialogEx
+{
+public:
+	CInputDialog() = default;
+
+	bool Create(wxWindow* parent, wxString const& title, wxString const& text, int max_len = -1, bool password = false);
+
+	void AllowEmpty(bool allowEmpty);
+
+	void SetValue(wxString const& value);
+	wxString GetValue() const;
+
+	bool SelectText(int start, int end);
+
+protected:
+	bool allowEmpty_{};
+	wxTextCtrl* textCtrl_{};
+};
+
+#endif
diff -Naupr a/src/interface/ipcmutex.h b/src/interface/ipcmutex.h
--- a/src/interface/ipcmutex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/ipcmutex.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,78 @@
+#ifndef FILEZILLA_INTERFACE_IPCMUTEX_HEADER
+#define FILEZILLA_INTERFACE_IPCMUTEX_HEADER
+
+/*
+ * Unfortunately wxWidgets does not provide interprocess mutexes, so I've to
+ * use platform specific code here.
+ * CInterProcessMutex represents an interprocess mutex. The mutex will be
+ * created and locked in the constructor and released in the destructor.
+ * Under Windows we use the normal Windows mutexes, under all other platforms
+ * we use lockfiles using fcntl advisory locks.
+ */
+
+enum t_ipcMutexType
+{
+	// Important: Never ever change a value.
+	// Otherwise this will cause interesting effects between different
+	// versions of FileZilla
+	MUTEX_OPTIONS = 1,
+	MUTEX_SITEMANAGER = 2,
+	MUTEX_SITEMANAGERGLOBAL = 3,
+	MUTEX_QUEUE = 4,
+	MUTEX_FILTERS = 5,
+	MUTEX_LAYOUT = 6,
+	MUTEX_MOSTRECENTSERVERS = 7,
+	MUTEX_TRUSTEDCERTS = 8,
+	MUTEX_GLOBALBOOKMARKS = 9,
+	MUTEX_SEARCHCONDITIONS = 10,
+	MUTEX_MAC_SANDBOX_USERDIRS = 11, // Only used if configured with --enable-mac-sandbox
+	MUTEX_RESERVED = 12
+};
+
+class CInterProcessMutex final
+{
+public:
+	CInterProcessMutex(t_ipcMutexType mutexType, bool initialLock = true);
+	~CInterProcessMutex();
+
+	bool Lock();
+	int TryLock(); // Tries to lock the mutex. Returns 1 on success, 0 if held by other process, -1 on failure
+	void Unlock();
+
+	bool IsLocked() const { return m_locked; }
+
+	t_ipcMutexType GetType() const { return m_type; }
+
+private:
+
+#ifdef __WXMSW__
+	// Under windows use normal mutexes
+	HANDLE hMutex;
+#else
+	// Use a lockfile under all other systems
+	static int m_fd;
+	static int m_instanceCount;
+#endif
+	t_ipcMutexType m_type;
+
+	bool m_locked;
+};
+
+class CReentrantInterProcessMutexLocker final
+{
+public:
+	CReentrantInterProcessMutexLocker(t_ipcMutexType mutexType);
+	~CReentrantInterProcessMutexLocker();
+
+protected:
+	struct t_data final
+	{
+		CInterProcessMutex* pMutex;
+		unsigned int lockCount;
+	};
+	static std::vector<t_data> m_mutexes;
+
+	t_ipcMutexType m_type;
+};
+
+#endif
diff -Naupr a/src/interface/led.cpp b/src/interface/led.cpp
--- a/src/interface/led.cpp	2020-01-23 12:18:26.000000000 +0100
+++ b/src/interface/led.cpp	2020-02-18 17:28:51.000000000 +0100
@@ -34,9 +34,8 @@ CLed::CLed(wxWindow *parent, unsigned in
 	if (bmp.IsOk()) {
 		m_leds[0] = bmp.GetSubBitmap(wxRect(0, index * size.y, size.x, size.y));
 		m_leds[1] = bmp.GetSubBitmap(wxRect(size.x, index * size.y, size.x, size.y));
+		m_loaded = true;
 	}
-
-	m_loaded = true;
 }
 
 void CLed::OnPaint(wxPaintEvent&)
diff -Naupr a/src/interface/led.h b/src/interface/led.h
--- a/src/interface/led.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/led.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,34 @@
+#ifndef FILEZILLA_INTERFACE_LED_HEADER
+#define FILEZILLA_INTERFACE_LED_HEADER
+
+#include <wx/event.h>
+#include <wx/timer.h>
+
+DECLARE_EVENT_TYPE(fzEVT_UPDATE_LED_TOOLTIP, -1)
+
+class CLed final : public wxWindow
+{
+public:
+	CLed(wxWindow *parent, unsigned int index);
+
+	void Ping();
+
+protected:
+	void Set();
+	void Unset();
+
+	int const m_index;
+	int m_ledState;
+
+	wxBitmap m_leds[2];
+	bool m_loaded{};
+
+	wxTimer m_timer;
+
+	DECLARE_EVENT_TABLE()
+	void OnPaint(wxPaintEvent& event);
+	void OnTimer(wxTimerEvent& event);
+	void OnEnterWindow(wxMouseEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/list_search_panel.h b/src/interface/list_search_panel.h
--- a/src/interface/list_search_panel.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/list_search_panel.h	2020-01-23 12:18:25.000000000 +0100
@@ -0,0 +1,45 @@
+#ifndef FILEZILLA_INTERFACE_LIST_SEARCH_PANEL_HEADER
+#define FILEZILLA_INTERFACE_LIST_SEARCH_PANEL_HEADER
+
+#include <filter.h>
+
+class wxBitmapButton;
+
+class CListSearchPanel final : public wxNavigationEnabled<wxWindow>
+{
+public:
+	CListSearchPanel(wxWindow* pParent, wxWindow* pListView, CState* pState, bool local);
+	CListSearchPanel(CListSearchPanel const&) = delete;
+
+	virtual bool Show(bool show);
+	void Close();
+	
+private:
+	wxDECLARE_EVENT_TABLE();
+	void OnPaint(wxPaintEvent& ev);
+	void OnText(wxCommandEvent& ev);
+	void OnOptions(wxCommandEvent& ev);
+	void OnClose(wxCommandEvent& ev);
+	void OnCaseInsensitive(wxCommandEvent& ev);
+	void OnUseRegex(wxCommandEvent& ev);
+	void OnInvertFilter(wxCommandEvent& ev);
+	void OnKeyDown(wxKeyEvent& event);
+
+	void ApplyFilter();
+	void ResetFilter();
+
+	wxTextCtrl* m_textCtrl{};
+	wxBitmapButton* m_optionsButton{};
+	wxMenu* m_optionsMenu{};
+
+	wxWindow* m_listView{};
+	CState* m_pState{};
+
+	bool m_local{};		// or remote
+	wxString m_text;
+	bool m_caseInsensitive{true};
+	bool m_useRegex{};
+	bool m_invertFilter{};
+};
+
+#endif
diff -Naupr a/src/interface/listctrlex.h b/src/interface/listctrlex.h
--- a/src/interface/listctrlex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/listctrlex.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,175 @@
+#ifndef FILEZILLA_INTERFACE_LISTCTRLEX_HEADER
+#define FILEZILLA_INTERFACE_LISTCTRLEX_HEADER
+
+#include "systemimagelist.h"
+#include <wx/dnd.h>
+
+#ifdef __WXMSW__
+typedef wxNavigationEnabled<wxListCtrl> wxListCtrlExBase;
+#else
+typedef wxListCtrl wxListCtrlExBase;
+#endif
+class wxListCtrlEx : public wxListCtrlExBase, public CSystemImageList
+{
+public:
+	typedef int Item;
+
+	wxListCtrlEx(wxWindow *parent,
+		wxWindowID id = wxID_ANY,
+		const wxPoint& pos = wxDefaultPosition,
+		const wxSize& size = wxDefaultSize,
+		long style = wxLC_ICON,
+		const wxValidator& validator = wxDefaultValidator,
+		const wxString& name = wxListCtrlNameStr);
+	~wxListCtrlEx();
+
+	// Ensure that the given item is the first in the list
+	void ScrollTopItem(int item);
+
+	void EnablePrefixSearch(bool enable) { m_prefixSearch_enabled = enable; }
+
+	// Reducing item count does not reset the focused item
+	// if using the generic list control. Work around it.
+	void SaveSetItemCount(long count);
+
+	void ShowColumnEditor();
+
+	void ShowColumn(unsigned int col, bool show);
+
+	// Moves column. Target position includes both hidden
+	// as well as shown columns
+	void MoveColumn(unsigned int col, unsigned int before);
+
+	// Do not call after calling LoadColumnSettings
+	void AddColumn(const wxString& name, int align, int initialWidth, bool fixed = false);
+
+	// LoadColumnSettings needs to be called exactly once after adding
+	// all columns
+	void LoadColumnSettings(int widthsOptionId, int visibilityOptionId, int sortOptionId);
+	void SaveColumnSettings(int widthsOptionId, int visibilityOptionId, int sortOptionId);
+
+	int GetColumnVisibleIndex(int col);
+
+	// Refresh list but not header
+	void RefreshListOnly(bool eraseBackground = true);
+
+	void CancelLabelEdit();
+	void SetLabelEditBlock(bool block);
+
+	wxWindow* GetMainWindow();
+	wxWindow const* GetMainWindow() const;
+
+	bool HasSelection() const;
+
+	// Returns the true rect of the area containing the actual list items
+	wxRect GetActualClientRect() const;
+
+	bool Valid(int i) const { return i >= 0 && i < GetItemCount(); }
+	int GetFirstItem() const { return GetItemCount() ? 0 : -1; }
+	int GetLastItem() const { return GetItemCount() - 1; }
+	int GetBottomItem() const {
+		if (GetItemCount()) {
+			return wxMin(GetLastItem(), GetTopItem() + GetCountPerPage() - 1);
+		}
+		return -1;
+	}
+
+	int GetNextItemSimple(int i) const {
+		if (!Valid(++i)) {
+			i = -1;
+		}
+		return i;
+	}
+
+	int GetPrevItemSimple(int i) const {
+		if (!Valid(--i)) {
+			i = -1;
+		}
+		return i;
+	}
+
+protected:
+	virtual void OnPostScroll();
+	virtual void OnPreEmitPostScrollEvent() final;
+	void EmitPostScrollEvent();
+
+	virtual wxString GetItemText(int, unsigned int) { return wxString(); }
+
+	virtual wxString OnGetItemText(long item, long column) const;
+	void ResetSearchPrefix();
+
+	// Argument is visible column index
+	int GetHeaderSortIconIndex(int col);
+	void SetHeaderSortIconIndex(int col, int icon);
+
+	// Has to be called after setting the image list for the items
+	void InitHeaderSortImageList();
+#ifdef __WXMSW__
+	wxImageListEx *m_pHeaderImageList{};
+#endif
+	struct _header_icon_index
+	{
+		int up{-1};
+		int down{-1};
+	} m_header_icon_index;
+
+private:
+	// Keyboard prefix search
+	void HandlePrefixSearch(wxChar character);
+	int FindItemWithPrefix(const wxString& searchPrefix, int start);
+
+	DECLARE_EVENT_TABLE()
+	void OnPostScrollEvent(wxCommandEvent& event);
+	void OnScrollEvent(wxScrollWinEvent& event);
+	void OnMouseWheel(wxMouseEvent& event);
+	void OnSelectionChanged(wxListEvent& event);
+	void OnKeyDown(wxKeyEvent& event);
+	void OnBeginLabelEdit(wxListEvent& event);
+	void OnEndLabelEdit(wxListEvent& event);
+	void OnColumnDragging(wxListEvent& event);
+
+	bool m_prefixSearch_enabled{};
+	fz::datetime m_prefixSearch_lastKeyPress;
+	wxString m_prefixSearch_prefix;
+
+	bool ReadColumnWidths(unsigned int optionId);
+	void SaveColumnWidths(unsigned int optionId);
+
+	void CreateVisibleColumnMapping();
+
+	virtual bool OnBeginRename(const wxListEvent& event);
+	virtual bool OnAcceptRename(const wxListEvent& event);
+
+	struct t_columnInfo
+	{
+		wxString name;
+		int align;
+		int width;
+		bool shown;
+		unsigned int order;
+		bool fixed;
+	};
+	std::vector<t_columnInfo> m_columnInfo;
+	unsigned int *m_pVisibleColumnMapping{};
+
+#ifdef __WXMSW__
+	virtual bool MSWOnNotify(int idCtrl, WXLPARAM lParam, WXLPARAM *result);
+	bool m_columnDragging{};
+#endif
+
+#ifndef __WXMSW__
+	bool m_editing;
+#endif
+	int m_blockedLabelEditing;
+};
+
+class CLabelEditBlocker
+{
+public:
+	CLabelEditBlocker(wxListCtrlEx& listCtrl);
+	virtual ~CLabelEditBlocker();
+private:
+	wxListCtrlEx& m_listCtrl;
+};
+
+#endif
diff -Naupr a/src/interface/listingcomparison.h b/src/interface/listingcomparison.h
--- a/src/interface/listingcomparison.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/listingcomparison.h	2020-01-24 15:21:03.000000000 +0100
@@ -0,0 +1,81 @@
+#ifndef FILEZILLA_INTERFACE_LISTINGCOMPARISON_HEADER
+#define FILEZILLA_INTERFACE_LISTINGCOMPARISON_HEADER
+
+class CComparisonManager;
+class CComparableListing
+{
+	friend class CComparisonManager;
+public:
+	CComparableListing(wxWindow* pParent);
+	virtual ~CComparableListing() = default;
+
+	enum t_fileEntryFlags
+	{
+		normal,
+		fill,
+		different,
+		newer,
+		lonely
+	};
+
+	virtual bool CanStartComparison() = 0;
+	virtual void StartComparison() = 0;
+	virtual bool get_next_file(std::wstring_view & name, std::wstring & path, bool &dir, int64_t &size, fz::datetime& date) = 0;
+	virtual void CompareAddFile(t_fileEntryFlags flags) = 0;
+	virtual void FinishComparison() = 0;
+	virtual void ScrollTopItem(int item) = 0;
+	virtual void OnExitComparisonMode() = 0;
+
+	void RefreshComparison();
+	void ExitComparisonMode();
+
+	bool IsComparing() const;
+
+	void SetOther(CComparableListing* pOther) { m_pOther = pOther; }
+	CComparableListing* GetOther() { return m_pOther; }
+
+protected:
+
+	wxListItemAttr m_comparisonBackgrounds[3];
+
+private:
+	wxWindow* m_pParent;
+
+	CComparableListing* m_pOther;
+	CComparisonManager* m_pComparisonManager;
+};
+
+class CState;
+class CComparisonManager
+{
+public:
+	CComparisonManager(CState& state);
+
+	bool CompareListings();
+	bool IsComparing() const { return m_isComparing; }
+
+	void ExitComparisonMode();
+
+	void SetListings(CComparableListing* pLeft, CComparableListing* pRight);
+
+	CComparableListing* LeftListing() const { return m_pLeft; }
+	CComparableListing* RightListing() const { return m_pRight; }
+
+	void SetComparisonMode(int mode) { m_comparisonMode = mode; }
+	void SetHideIdentical(bool hideIdentical) { m_hideIdentical = hideIdentical; }
+
+protected:
+	int CompareFiles(const int dirSortMode, std::wstring_view const& local_path, std::wstring_view const& local, std::wstring_view const& remote_path, std::wstring_view const& remote, bool localDir, bool remoteDir);
+
+	CState& m_state;
+
+	// Left/right, first/second, a/b, doesn't matter
+	CComparableListing* m_pLeft{};
+	CComparableListing* m_pRight{};
+
+	bool m_isComparing{};
+	int m_comparisonMode{};
+	bool m_hideIdentical{};
+};
+
+#endif
diff -Naupr a/src/interface/local_recursive_operation.h b/src/interface/local_recursive_operation.h
--- a/src/interface/local_recursive_operation.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/local_recursive_operation.h	2020-01-24 15:21:03.000000000 +0100
@@ -0,0 +1,86 @@
+#ifndef FILEZILLA_LOCAL_RECURSIVE_OPERATION_HEADER
+#define FILEZILLA_LOCAL_RECURSIVE_OPERATION_HEADER
+
+#include "recursive_operation.h"
+
+#include <libfilezilla/thread_pool.hpp>
+
+#include <set>
+
+class local_recursion_root final
+{
+public:
+	local_recursion_root() = default;
+
+	void add_dir_to_visit(CLocalPath const& localPath, CServerPath const& remotePath = CServerPath());
+
+	bool empty() const { return m_dirsToVisit.empty(); }
+
+private:
+	friend class CLocalRecursiveOperation;
+
+	class new_dir final
+	{
+	public:
+		CLocalPath localPath;
+		CServerPath remotePath;
+	};
+
+	std::set<CLocalPath> m_visitedDirs;
+	std::deque<new_dir> m_dirsToVisit;
+};
+
+class CLocalRecursiveOperation final : public CRecursiveOperation, public wxEvtHandler
+{
+public:
+	class listing final
+	{
+	public:
+		class entry
+		{
+		public:
+			std::wstring name;
+			int64_t size{};
+			fz::datetime time;
+			int attributes{};
+		};
+
+		std::vector<entry> files;
+		std::vector<entry> dirs;
+		CLocalPath localPath;
+		CServerPath remotePath;
+	};
+
+	CLocalRecursiveOperation(CState& state);
+	virtual ~CLocalRecursiveOperation();
+
+	void AddRecursionRoot(local_recursion_root && root);
+	void StartRecursiveOperation(OperationMode mode, ActiveFilters const& filters, bool immediate = true, bool ignore_links = true);
+
+	virtual void StopRecursiveOperation() override;
+
+protected:
+	bool DoStartRecursiveOperation(OperationMode mode, ActiveFilters const& filters, bool immediate, bool ignore_links);
+
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const&, const void* data2) override;
+
+	void entry();
+
+	void EnqueueEnumeratedListing(fz::scoped_lock& l, listing&& d);
+
+	std::deque<local_recursion_root> recursion_roots_;
+
+	fz::async_task thread_;
+	fz::mutex mutex_;
+
+	std::deque<listing> m_listedDirectories;
+	bool m_ignoreLinks{};
+
+	Site site_;
+
+	void OnListedDirectory();
+
+	DECLARE_EVENT_TABLE()
+};
+
+#endif
diff -Naupr a/src/interface/locale_initializer.h b/src/interface/locale_initializer.h
--- a/src/interface/locale_initializer.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/locale_initializer.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,83 @@
+#ifndef FILEZILLA_LOCALE_INITIALIZER_HEADER
+#define FILEZILLA_LOCALE_INITIALIZER_HEADER
+
+#include <libfilezilla/libfilezilla.hpp>
+
+wxString GetFallbackLocale(wxString const& locale);
+
+#ifdef __WXGTK__
+
+#include <string>
+
+class CInitializer
+{
+public:
+	static bool SetLocale(const std::string& arg);
+
+	static std::string GetLocaleOption();
+
+	static bool error;
+
+protected:
+	static std::string GetAdjustedSettingsDir(); // Returns settings from fzdefaults.xml if it exists, otherwise calls GetSettingsDir
+	static std::string GetUnadjustedSettingsDir(); // Returns standard settings dir as if there were no fzdefaults.xml
+	static std::string ReadSettingsFromDefaults(std::string file);
+	static std::string GetSettingFromFile(std::string file, const std::string& name);
+	static std::string GetDefaultsXmlFile();
+	static std::string CheckPathForDefaults(std::string path, int strip, std::string suffix);
+
+	static bool SetLocaleReal(const std::string& locale);
+	static std::string LocaleAddEncoding(const std::string& locale, const std::string& encoding);
+};
+
+#endif //__WXGTK__
+
+template<typename String>
+String ExpandPath(String dir)
+{
+	if (dir.empty()) {
+		return dir;
+	}
+
+	String result;
+	while (!dir.empty()) {
+		String token;
+#ifdef FZ_WINDOWS
+		size_t pos = dir.find_first_of(fzS(typename String::value_type, "\\/"));
+#else
+		size_t pos = dir.find('/');
+#endif
+		if (pos == String::npos) {
+			token.swap(dir);
+		}
+		else {
+			token = dir.substr(0, pos);
+			dir = dir.substr(pos + 1);
+		}
+
+		if (token[0] == '$') {
+			if (token[1] == '$') {
+				result += token.substr(1);
+			}
+			else if (token.size() > 1) {
+				char* env = getenv(fz::to_string(token.substr(1)).c_str());
+				if (env) {
+					result += fz::toString<String>(env);
+				}
+			}
+		}
+		else {
+			result += token;
+		}
+
+#ifdef FZ_WINDOWS
+		result += '\\';
+#else
+		result += '/';
+#endif
+	}
+
+	return result;
+}
+
+#endif
diff -Naupr a/src/interface/loginmanager.h b/src/interface/loginmanager.h
--- a/src/interface/loginmanager.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/loginmanager.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,52 @@
+#ifndef FILEZILLA_INTERFACE_LOGINMANAGER_HEADER
+#define FILEZILLA_INTERFACE_LOGINMANAGER_HEADER
+
+#include "serverdata.h"
+
+#include <list>
+
+// The purpose of this class is to manage some aspects of the login
+// behaviour. These are:
+// - Password dialog for servers with ASK or INTERACTIVE logontype
+// - Storage of passwords for ASK servers for duration of current session
+
+class CLoginManager
+{
+public:
+	static CLoginManager& Get() { return m_theLoginManager; }
+
+	bool GetPassword(Site & site, bool silent);
+	bool GetPassword(Site & site, bool silent, std::wstring const& challenge, bool canRemember);
+
+	void CachedPasswordFailed(CServer const& server, std::wstring const& challenge = std::wstring());
+
+	void RememberPassword(Site & site, std::wstring const& challenge = std::wstring());
+
+	bool AskDecryptor(fz::public_key const& pub, bool allowForgotten, bool allowCancel);
+	fz::private_key GetDecryptor(fz::public_key const& pub);
+	void Remember(fz::private_key const& key);
+
+protected:
+	bool DisplayDialogForEncrypted(Site & site);
+	bool DisplayDialog(Site & site, std::wstring const& challenge, bool canRemember);
+
+	static CLoginManager m_theLoginManager;
+
+	// Session password cache for Ask-type servers
+	struct t_passwordcache
+	{
+		std::wstring host;
+		unsigned int port{};
+		std::wstring user;
+		std::wstring password;
+		std::wstring challenge;
+	};
+
+	std::list<t_passwordcache>::iterator FindItem(CServer const& server, std::wstring const& challenge);
+
+	std::list<t_passwordcache> m_passwordCache;
+
+	std::map<fz::public_key, fz::private_key> decryptors_;
+};
+
+#endif
diff -Naupr a/src/interface/manual_transfer.h b/src/interface/manual_transfer.h
--- a/src/interface/manual_transfer.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/manual_transfer.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,45 @@
+#ifndef FILEZILLA_INTERFACE_MANUAL_TRANSFER_HEADER
+#define FILEZILLA_INTERFACE_MANUAL_TRANSFER_HEADER
+
+#include "dialogex.h"
+#include "serverdata.h"
+
+class CQueueView;
+class CState;
+class CManualTransfer final : public wxDialogEx
+{
+public:
+	CManualTransfer(CQueueView* pQueueView);
+
+	void Run(wxWindow* pParent, CState* pState);
+
+protected:
+	void DisplayServer();
+	bool UpdateServer();
+	bool VerifyServer();
+
+	void SetControlState();
+	void SetAutoAsciiState();
+	void SetServerState();
+
+	bool m_local_file_exists;
+
+	Site site_;
+	Site lastSite_;
+
+	CState* m_pState;
+	CQueueView* m_pQueueView;
+
+	DECLARE_EVENT_TABLE()
+	void OnLocalChanged(wxCommandEvent& event);
+	void OnLocalBrowse(wxCommandEvent& event);
+	void OnRemoteChanged(wxCommandEvent& event);
+	void OnDirection(wxCommandEvent& event);
+	void OnServerTypeChanged(wxCommandEvent& event);
+	void OnOK(wxCommandEvent& event);
+	void OnSelectSite(wxCommandEvent& event);
+	void OnSelectedSite(wxCommandEvent& event);
+	void OnLogontypeSelChanged(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/menu_bar.h b/src/interface/menu_bar.h
--- a/src/interface/menu_bar.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/menu_bar.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,42 @@
+#ifndef FILEZILLA_INTERFACE_MENU_BAR_HEADER
+#define FILEZILLA_INTERFACE_MENU_BAR_HEADER
+
+#include <option_change_event_handler.h>
+#include "state.h"
+
+class CMainFrame;
+class CMenuBar final : public wxMenuBar, public CGlobalStateEventHandler, public COptionChangeEventHandler
+{
+public:
+	CMenuBar();
+	virtual ~CMenuBar();
+
+	static CMenuBar* Load(CMainFrame* pMainFrame);
+
+	bool ShowItem(int id);
+	bool HideItem(int id);
+
+	void UpdateBookmarkMenu();
+
+	std::vector<int> m_bookmark_menu_ids;
+	std::map<int, wxString> m_bookmark_menu_id_map_global;
+	std::map<int, wxString> m_bookmark_menu_id_map_site;
+
+	void UpdateMenubarState();
+protected:
+	CMainFrame* m_pMainFrame;
+
+	void UpdateSpeedLimitMenuItem();
+
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+	virtual void OnOptionsChanged(changed_options_t const& options);
+
+	DECLARE_DYNAMIC_CLASS(CMenuBar)
+
+	DECLARE_EVENT_TABLE()
+	void OnMenuEvent(wxCommandEvent& event);
+
+	std::map<wxMenu*, std::map<int, wxMenuItem*> > m_hidden_items;
+};
+
+#endif
diff -Naupr a/src/interface/msgbox.h b/src/interface/msgbox.h
--- a/src/interface/msgbox.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/msgbox.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,12 @@
+#ifndef FILEZILLA_MSGBOX_HEADER
+#define FILEZILLA_MSGBOX_HEADER
+
+#include <wx/msgdlg.h>
+
+bool IsShowingMessageBox();
+
+int wxMessageBoxEx(const wxString& message, const wxString& caption = wxMessageBoxCaptionStr
+	, long style = wxOK | wxCENTRE, wxWindow *parent = nullptr
+	, int x = wxDefaultCoord, int y = wxDefaultCoord);
+
+#endif
diff -Naupr a/src/interface/netconfwizard.h b/src/interface/netconfwizard.h
--- a/src/interface/netconfwizard.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/netconfwizard.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,108 @@
+#ifndef FILEZILLA_INTERFACES_NETCONFWIZARD_HEADER
+#define FILEZILLA_INTERFACES_NETCONFWIZARD_HEADER
+
+#include <wx/wizard.h>
+#include "wrapengine.h"
+#include "externalipresolver.h"
+#include <wx/timer.h>
+
+#include <libfilezilla/buffer.hpp>
+#include <libfilezilla/socket.hpp>
+
+#define NETCONFBUFFERSIZE 200
+
+class COptions;
+
+class CNetConfWizard final : public wxWizard, protected CWrapEngine, protected fz::event_handler
+{
+public:
+	CNetConfWizard(wxWindow* parent, COptions* pOptions, CFileZillaEngineContext & context);
+	virtual ~CNetConfWizard();
+
+	bool Load();
+	bool Run();
+
+protected:
+
+	void PrintMessage(std::wstring const& msg, int type);
+
+	void ResetTest();
+
+	CFileZillaEngineContext & engine_context_;
+
+	wxWindow* const m_parent;
+	COptions* const m_pOptions;
+
+	std::vector<wxWizardPageSimple*> m_pages;
+
+	DECLARE_EVENT_TABLE()
+	void OnPageChanging(wxWizardEvent& event);
+	void OnPageChanged(wxWizardEvent& event);
+	void OnRestart(wxCommandEvent& event);
+	void OnFinish(wxWizardEvent& event);
+	void OnTimer(wxTimerEvent& event);
+	void OnExternalIPAddress2(wxCommandEvent&);
+
+	virtual void operator()(fz::event_base const& ev);
+	void OnExternalIPAddress();
+	void OnSocketEvent(fz::socket_event_source*, fz::socket_event_flag t, int error);
+
+	void DoOnSocketEvent(fz::socket_event_source*, fz::socket_event_flag t, int error);
+
+	void OnReceive();
+	void ParseResponse(const char* line);
+	void OnClose();
+	void OnConnect();
+	void OnSend();
+	void CloseSocket();
+	bool Send(std::wstring const& cmd);
+	void OnDataReceive();
+	void OnDataClose();
+
+	void OnAccept();
+
+	void SendNextCommand();
+
+	std::wstring GetExternalIPAddress();
+
+	int CreateListenSocket();
+	int CreateListenSocket(unsigned int port);
+
+	wxString m_nextLabelText;
+
+	// Test data
+	std::unique_ptr<fz::socket> socket_;
+	int m_state;
+
+	char m_recvBuffer[NETCONFBUFFERSIZE];
+	int m_recvBufferPos;
+	bool m_testDidRun;
+	bool m_connectSuccessful;
+
+	enum testResults
+	{
+		unknown,
+		successful,
+		mismatch,
+		tainted,
+		mismatchandtainted,
+		servererror,
+		externalfailed,
+		datatainted
+	} m_testResult;
+
+	CExternalIPResolver* m_pIPResolver{};
+	std::wstring m_externalIP;
+
+	std::unique_ptr<fz::listen_socket> listen_socket_;
+	std::unique_ptr<fz::socket> data_socket_;
+	int m_listenPort{};
+	bool gotListReply{};
+	int m_data{};
+
+	fz::buffer sendBuffer_;
+
+	wxTimer m_timer;
+};
+
+#endif
diff -Naupr a/src/interface/power_management.h b/src/interface/power_management.h
--- a/src/interface/power_management.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/power_management.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,43 @@
+#ifndef FILEZILLA_INTERFACE_POWER_MANAGEMENT_HEADER
+#define FILEZILLA_INTERFACE_POWER_MANAGEMENT_HEADER
+
+// This simple class prevents the system from entering idle sleep
+// while FileZilla is busy
+
+#include "state.h"
+
+class CMainFrame;
+#ifdef WITH_LIBDBUS
+class CPowerManagementInhibitor;
+#endif
+
+class CPowerManagement final : protected CGlobalStateEventHandler
+{
+public:
+	static void Create(CMainFrame* pMainFrame);
+	static void Destroy();
+
+	static bool IsSupported();
+protected:
+	CPowerManagement(CMainFrame* pMainFrame);
+	virtual ~CPowerManagement();
+
+	static CPowerManagement* m_pPowerManagement;
+
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const& data, void const* data2) override;
+
+	void DoSetBusy();
+	void DoSetIdle();
+
+	bool m_busy;
+
+	CMainFrame* m_pMainFrame;
+
+#ifdef WITH_LIBDBUS
+	CPowerManagementInhibitor *m_inhibitor;
+#elif defined(__WXMAC__)
+	void const* activity_{};
+#endif
+};
+
+#endif
diff -Naupr a/src/interface/queue.h b/src/interface/queue.h
--- a/src/interface/queue.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/queue.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,425 @@
+#ifndef FILEZILLA_INTERFACE_QUEUE_HEADER
+#define FILEZILLA_INTERFACE_QUEUE_HEADER
+
+#include "aui_notebook_ex.h"
+#include "listctrlex.h"
+#include "edithandler.h"
+#include <libfilezilla/optional.hpp>
+
+enum class QueuePriority : unsigned char {
+	lowest,
+	low,
+	normal,
+	high,
+	highest,
+
+	count
+};
+
+enum class QueueItemType {
+	Server,
+	File,
+	Folder,
+	Status
+};
+
+enum class TransferDirection
+{
+	both,
+	download,
+	upload
+};
+
+namespace pugi { class xml_node; }
+class CQueueItem
+{
+public:
+	virtual ~CQueueItem();
+
+	virtual void SetPriority(QueuePriority priority);
+
+	virtual void AddChild(CQueueItem* pItem);
+	virtual unsigned int GetChildrenCount(bool recursive) const;
+	virtual CQueueItem* GetChild(unsigned int item, bool recursive = true);
+	CQueueItem* GetParent() { return m_parent; }
+	const CQueueItem* GetParent() const { return m_parent; }
+	void SetParent(CQueueItem* parent) { m_parent = parent; }
+
+	virtual bool RemoveChild(CQueueItem* pItem, bool destroy = true, bool forward = true); // Removes a child item with is somewhere in the tree of children.
+	virtual bool TryRemoveAll() = 0; // Removes a inactive childrens, queues active children for removal. Returns true if item itself can be removed
+	CQueueItem* GetTopLevelItem();
+	const CQueueItem* GetTopLevelItem() const;
+	int GetItemIndex() const; // Return the visible item index relative to the topmost parent item.
+	virtual void SaveItem(pugi::xml_node&) const {}
+
+	virtual QueueItemType GetType() const = 0;
+
+	fz::datetime GetTime() const { return m_time; }
+	void UpdateTime() { m_time = fz::datetime::now(); }
+
+	int GetRemovedAtFront() const { return m_removed_at_front; }
+
+protected:
+	CQueueItem(CQueueItem* parent = 0);
+
+	CQueueItem* m_parent;
+
+	friend class CServerItem;
+
+	fz::datetime m_time;
+
+private:
+	std::vector<CQueueItem*> m_children;
+
+	// Number of items removed at front of list
+	// Increased instead of calling slow m_children.erase(0),
+	// resetted on insert.
+	int m_removed_at_front{};
+};
+
+class CFileItem;
+class CServerItem final : public CQueueItem
+{
+public:
+	CServerItem(Site const& site);
+	virtual ~CServerItem();
+	virtual QueueItemType GetType() const override { return QueueItemType::Server; }
+
+	Site const& GetSite() const { return site_; }
+	ProtectedCredentials& GetCredentials() {return site_.credentials; }
+	wxString GetName() const;
+
+	virtual void AddChild(CQueueItem* pItem) override;
+	virtual unsigned int GetChildrenCount(bool recursive) const override;
+	virtual CQueueItem* GetChild(unsigned int item, bool recursive = true) override;
+
+	CFileItem* GetIdleChild(bool immadiateOnly, TransferDirection direction);
+
+	virtual bool RemoveChild(CQueueItem* pItem, bool destroy = true, bool forward = true) override; // Removes a child item with is somewhere in the tree of children
+	virtual bool TryRemoveAll() override;
+
+	int64_t GetTotalSize(int& filesWithUnknownSize, int& queuedFiles) const;
+
+	void QueueImmediateFiles();
+	void QueueImmediateFile(CFileItem* pItem);
+
+	virtual void SaveItem(pugi::xml_node& element) const override;
+
+	void SetDefaultFileExistsAction(CFileExistsNotification::OverwriteAction action, const TransferDirection direction);
+
+	void DetachChildren();
+
+	virtual void SetPriority(QueuePriority priority) override;
+
+	void SetChildPriority(CFileItem* pItem, QueuePriority oldPriority, QueuePriority newPriority);
+
+	int m_activeCount;
+
+	const std::vector<CQueueItem*>& GetChildren() const { return m_children; }
+
+	void Sort(int col, bool reverse);
+
+protected:
+	void AddFileItemToList(CFileItem* pItem);
+	void RemoveFileItemFromList(CFileItem* pItem, bool forward);
+
+	Site site_;
+
+	// array of item lists, sorted by priority. Used by scheduler to find
+	// next file to transfer
+	// First index specifies whether the item is queued (0) or immediate (1)
+	std::deque<CFileItem*> m_fileList[2][static_cast<int>(QueuePriority::count)];
+
+	friend class CQueueItem;
+
+	int m_visibleOffspring{}; // Visible offspring over all sublevels
+	int m_maxCachedIndex{-1};
+
+	struct t_cacheItem
+	{
+		int index;
+		int child;
+	};
+	std::vector<t_cacheItem> m_lookupCache;
+};
+
+struct t_EngineData;
+
+class CFileItem : public CQueueItem
+{
+public:
+	CFileItem(CServerItem* parent, bool queued, bool download,
+		std::wstring const& sourceFile, std::wstring const& targetFile,
+		CLocalPath const& localPath, CServerPath const& remotePath, int64_t size);
+
+	virtual ~CFileItem();
+
+	virtual void SetPriority(QueuePriority priority) override;
+	void SetPriorityRaw(QueuePriority priority);
+	QueuePriority GetPriority() const;
+
+	std::wstring const& GetLocalFile() const { return !Download() ? GetSourceFile() : (m_targetFile ? *m_targetFile : m_sourceFile); }
+	std::wstring const& GetRemoteFile() const { return Download() ? GetSourceFile() : (m_targetFile ? *m_targetFile : m_sourceFile); }
+	std::wstring const& GetSourceFile() const { return m_sourceFile; }
+	fz::sparse_optional<std::wstring> const& GetTargetFile() const { return m_targetFile; }
+	CLocalPath const& GetLocalPath() const { return m_localPath; }
+	CServerPath const& GetRemotePath() const { return m_remotePath; }
+	int64_t GetSize() const { return m_size; }
+	void SetSize(int64_t size) { m_size = size; }
+	inline bool Download() const { return flags & flag_download; }
+
+	inline bool queued() const { return (flags & flag_queued) != 0; }
+	inline void set_queued(bool q)
+	{
+		if (q) {
+			flags |= flag_queued;
+		}
+		else {
+			flags &= ~flag_queued;
+		}
+	}
+
+	inline bool pending_remove() const { return (flags & flag_remove) != 0; }
+	inline void set_pending_remove(bool remove)
+	{
+		if (remove) {
+			flags |= flag_remove;
+		}
+		else {
+			flags &= ~flag_remove;
+		}
+	}
+
+	virtual QueueItemType GetType() const override { return QueueItemType::File; }
+
+	bool IsActive() const { return (flags & flag_active) != 0; }
+	virtual void SetActive(bool active);
+
+	virtual void SaveItem(pugi::xml_node& element) const override;
+
+	// Removes inactive children, queues active children for removal.
+	// Returns true if item can be removed itself
+	virtual bool TryRemoveAll() override final;
+
+	void SetTargetFile(std::wstring const& file);
+
+	enum class Status : unsigned char {
+		none,
+		incorrect_password,
+		timeout,
+		disconnecting,
+		disconnected,
+		connecting,
+		connection_failed,
+		interrupted,
+		wait_browsing,
+		wait_password,
+		local_file_unwriteable,
+		could_not_start,
+		transferring,
+		creating_dir
+	};
+
+	wxString const& GetStatusMessage() const;
+	void SetStatusMessage(Status status);
+
+	unsigned char m_errorCount{};
+	CEditHandler::fileType m_edit{CEditHandler::none};
+	CFileExistsNotification::OverwriteAction m_defaultFileExistsAction{CFileExistsNotification::unknown};
+	CFileExistsNotification::OverwriteAction m_onetime_action{CFileExistsNotification::unknown};
+	QueuePriority m_priority{QueuePriority::normal};
+
+protected:
+	enum : unsigned char
+	{
+		flag_download = 0x01,
+		flag_active = 0x02,
+		flag_made_progress = 0x04,
+		flag_queued = 0x08,
+		flag_remove = 0x10,
+		flag_ascii = 0x20
+	};
+	unsigned char flags{};
+	Status m_status{};
+
+public:
+	t_EngineData* m_pEngineData{};
+
+
+	inline bool made_progress() const { return (flags & flag_made_progress) != 0; }
+	inline void set_made_progress(bool made_progress)
+	{
+		if (made_progress) {
+			flags |= flag_made_progress;
+		}
+		else {
+			flags &= ~flag_made_progress;
+		}
+	}
+
+	bool Ascii() const { return (flags & flag_ascii) != 0; }
+
+	void SetAscii(bool ascii)
+	{
+		if (ascii) {
+			flags |= flag_ascii;
+		}
+		else {
+			flags &= ~flag_ascii;
+		}
+	}
+
+protected:
+	std::wstring const m_sourceFile;
+	fz::sparse_optional<std::wstring> m_targetFile;
+	CLocalPath const m_localPath;
+	CServerPath const m_remotePath;
+	int64_t m_size{};
+};
+
+class CFolderItem final : public CFileItem
+{
+public:
+	CFolderItem(CServerItem* parent, bool queued, CLocalPath const& localPath);
+	CFolderItem(CServerItem* parent, bool queued, CServerPath const& remotePath, std::wstring const& remoteFile);
+
+	virtual QueueItemType GetType() const override { return QueueItemType::Folder; }
+
+	virtual void SaveItem(pugi::xml_node& element) const override;
+
+	virtual void SetActive(bool active) override;
+};
+
+class CStatusItem final : public CQueueItem
+{
+public:
+	CStatusItem() = default;
+	virtual ~CStatusItem() = default;
+
+	virtual QueueItemType GetType() const override { return QueueItemType::Status; }
+
+	virtual bool TryRemoveAll() override { return true; }
+};
+
+class CQueue;
+class CQueueViewBase : public wxListCtrlEx
+{
+public:
+
+	enum ColumnId
+	{
+		colLocalName,
+		colDirection,
+		colRemoteName,
+		colSize,
+		colPriority,
+		colTime,
+		colTransferStatus,
+		colErrorReason
+	};
+
+	CQueueViewBase(CQueue* parent, int index, const wxString& title);
+	virtual ~CQueueViewBase();
+
+	// Gets item for given server or creates new if it doesn't exist
+	CServerItem* CreateServerItem(Site const& site);
+
+	virtual void InsertItem(CServerItem* pServerItem, CQueueItem* pItem);
+	virtual bool RemoveItem(CQueueItem* pItem, bool destroy, bool updateItemCount = true, bool updateSelections = true, bool forward = true);
+
+	// Has to be called after adding or removing items. Also updates
+	// item count and selections.
+	virtual void CommitChanges();
+
+	wxString GetTitle() const { return m_title; }
+
+	int GetFileCount() const { return m_fileCount; }
+
+	void WriteToFile(pugi::xml_node element) const;
+
+protected:
+
+	void CreateColumns(std::vector<ColumnId> const& extraColumns = std::vector<ColumnId>());
+	void AddQueueColumn(ColumnId id);
+
+	// Gets item for given server
+	CServerItem* GetServerItem(Site const& site);
+
+	// Gets item with given index
+	CQueueItem* GetQueueItem(unsigned int item) const;
+
+	// Get index for given queue item
+	int GetItemIndex(const CQueueItem* item);
+
+	virtual wxString OnGetItemText(long item, long column) const;
+	virtual wxString OnGetItemText(CQueueItem* pItem, ColumnId column) const;
+	virtual int OnGetItemImage(long item) const;
+
+	void RefreshItem(const CQueueItem* pItem);
+
+	void DisplayNumberQueuedFiles();
+
+	// Position at which insertions start and number of insertions
+	int m_insertionStart{-1};
+	unsigned int m_insertionCount{};
+
+	int m_fileCount{};
+	bool m_fileCountChanged{};
+
+	// Selection management.
+	void UpdateSelections_ItemAdded(int added);
+	void UpdateSelections_ItemRangeAdded(int added, int count);
+	void UpdateSelections_ItemRemoved(int removed);
+	void UpdateSelections_ItemRangeRemoved(int removed, int count);
+
+	int m_itemCount{};
+	bool m_allowBackgroundErase{true};
+
+	std::vector<CServerItem*> m_serverList;
+
+	CQueue* m_pQueue;
+
+	const int m_pageIndex;
+
+	const wxString m_title;
+
+	wxTimer m_filecount_delay_timer;
+
+	std::vector<ColumnId> m_columns;
+
+	DECLARE_EVENT_TABLE()
+	void OnEraseBackground(wxEraseEvent& event);
+	void OnChar(wxKeyEvent& event);
+	void OnEndColumnDrag(wxListEvent& event);
+	void OnTimer(wxTimerEvent& event);
+	void OnKeyDown(wxKeyEvent& event);
+	void OnExport(wxCommandEvent&);
+};
+
+class CQueueView;
+class CQueueViewFailed;
+class CQueueViewSuccessful;
+
+class CMainFrame;
+class CAsyncRequestQueue;
+class CQueue final : public wxAuiNotebookEx
+{
+public:
+	CQueue(wxWindow* parent, CMainFrame* pMainFrame, CAsyncRequestQueue* pAsyncRequestQueue);
+	virtual ~CQueue() {}
+
+	inline CQueueView* GetQueueView() { return m_pQueueView; }
+	inline CQueueViewFailed* GetQueueView_Failed() { return m_pQueueView_Failed; }
+	inline CQueueViewSuccessful* GetQueueView_Successful() { return m_pQueueView_Successful; }
+
+	virtual void SetFocus();
+protected:
+
+	CQueueView* m_pQueueView{};
+	CQueueViewFailed* m_pQueueView_Failed{};
+	CQueueViewSuccessful* m_pQueueView_Successful{};
+};
+
+#include "QueueView.h"
+
+#endif
diff -Naupr a/src/interface/queue_storage.h b/src/interface/queue_storage.h
--- a/src/interface/queue_storage.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/queue_storage.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,46 @@
+#ifndef FILEZILLA_INTERFACE_QUEUE_STORAGE_HEADER
+#define FILEZILLA_INTERFACE_QUEUE_STORAGE_HEADER
+
+#include <vector>
+
+class CFileItem;
+class CServerItem;
+class Site;
+
+class CQueueStorage final
+{
+	class Impl;
+
+public:
+	CQueueStorage();
+	~CQueueStorage();
+
+	CQueueStorage(CQueueStorage const&) = delete;
+	CQueueStorage& operator=(CQueueStorage const&) = delete;
+
+	// Call before loading
+	bool BeginTransaction();
+
+	// Call after finishing loading
+	bool EndTransaction(bool rollback = false);
+
+	bool Clear(); // Also clears caches
+
+	bool Vacuum();
+
+	bool SaveQueue(std::vector<CServerItem*> const& queue);
+
+	// > 0 = server id
+	//   0 = No server
+	// < 0 = failure.
+	int64_t GetServer(Site& site, bool fromBeginning);
+
+	int64_t GetFile(CFileItem** pItem, int64_t server);
+
+	static std::wstring GetDatabaseFilename();
+
+private:
+	Impl* d_;
+};
+
+#endif
diff -Naupr a/src/interface/queueview_failed.h b/src/interface/queueview_failed.h
--- a/src/interface/queueview_failed.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/queueview_failed.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,24 @@
+#ifndef FILEZILLA_INTERFACE_QUEUEVIEW_FAILED_HEADER
+#define FILEZILLA_INTERFACE_QUEUEVIEW_FAILED_HEADER
+
+class CQueueViewFailed : public CQueueViewBase
+{
+public:
+	CQueueViewFailed(CQueue* parent, int index);
+	CQueueViewFailed(CQueue* parent, int index, const wxString& title);
+
+protected:
+
+	bool RequeueFileItem(CFileItem* pItem, CServerItem* pServerItem);
+	bool RequeueServerItem(CServerItem* pServerItem);
+
+	DECLARE_EVENT_TABLE()
+	void OnContextMenu(wxContextMenuEvent& event);
+	void OnRemoveAll(wxCommandEvent& event);
+	void OnRemoveSelected(wxCommandEvent& event);
+	void OnRequeueSelected(wxCommandEvent& event);
+	void OnRequeueAll(wxCommandEvent& event);
+	void OnChar(wxKeyEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/queueview_successful.h b/src/interface/queueview_successful.h
--- a/src/interface/queueview_successful.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/queueview_successful.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,22 @@
+#ifndef FILEZILLA_INTERFACE_QUEUEVIEW_SUCCESSFUL_HEADER
+#define FILEZILLA_INTERFACE_QUEUEVIEW_SUCCESSFUL_HEADER
+
+#include "queueview_failed.h"
+
+class CQueueViewSuccessful final : public CQueueViewFailed
+{
+public:
+	CQueueViewSuccessful(CQueue* parent, int index);
+
+	bool AutoClear() const { return m_autoClear; }
+
+protected:
+
+	bool m_autoClear{};
+
+	DECLARE_EVENT_TABLE()
+	void OnContextMenu(wxContextMenuEvent& event);
+	void OnMenuAutoClear(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/quickconnectbar.cpp b/src/interface/quickconnectbar.cpp
--- a/src/interface/quickconnectbar.cpp	2020-01-23 12:18:26.000000000 +0100
+++ b/src/interface/quickconnectbar.cpp	2020-02-18 17:28:51.000000000 +0100
@@ -42,14 +42,17 @@ bool CQuickconnectBar::Create(CMainFrame
 	mainSizer->Add(new wxStaticText(this, -1, _("&Host:")), wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL));
 	m_pHost = new wxTextCtrlEx(this, -1, wxString(), wxDefaultPosition, ConvertDialogToPixels(wxSize(63, -1)), wxTE_PROCESS_ENTER);
 	m_pHost->SetToolTip(_("Enter the address of the server. To specify the server protocol, prepend the host with the protocol identifier. If no protocol is specified, the default protocol (ftp://) will be used. You can also enter complete URLs in the form protocol://user:pass@host:port here, the values in the other fields will be overwritten then.\n\nSupported protocols are:\n- ftp:// for normal FTP with optional encryption\n- sftp:// for SSH file transfer protocol\n- ftps:// for FTP over TLS (implicit)\n- ftpes:// for FTP over TLS (explicit)"));
+	m_pHost->SetMaxLength(1000);
 	mainSizer->Add(m_pHost, wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL).Border(wxRIGHT, 5));
 
 	mainSizer->Add(new wxStaticText(this, -1, _("&Username:")), wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL));
 	m_pUser = new wxTextCtrlEx(this, -1, wxString(), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER);
+	m_pUser->SetMaxLength(1000);
 	mainSizer->Add(m_pUser, wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL).Border(wxRIGHT, 5));
 
 	mainSizer->Add(new wxStaticText(this, -1, _("Pass&word:")), wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL));
 	m_pPass = new wxTextCtrlEx(this, -1, wxString(), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER|wxTE_PASSWORD);
+	m_pPass->SetMaxLength(1000);
 	mainSizer->Add(m_pPass, wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL).Border(wxRIGHT, 5));
 
 	mainSizer->Add(new wxStaticText(this, -1, _("&Port:")), wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL));
diff -Naupr a/src/interface/quickconnectbar.h b/src/interface/quickconnectbar.h
--- a/src/interface/quickconnectbar.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/quickconnectbar.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,32 @@
+#ifndef FILEZILLA_INTERFACE_QUICKCONNECTBAR_HEADER
+#define FILEZILLA_INTERFACE_QUICKCONNECTBAR_HEADER
+
+#include "serverdata.h"
+
+class CMainFrame;
+class CQuickconnectBar final : public wxPanel
+{
+public:
+	bool Create(CMainFrame* pParent);
+
+	void ClearFields();
+
+protected:
+	// Only valid while menu is being displayed
+	std::deque<Site> m_recentServers;
+
+	DECLARE_EVENT_TABLE()
+	void OnQuickconnect(wxCommandEvent& event);
+	void OnQuickconnectDropdown(wxCommandEvent& event);
+	void OnMenu(wxCommandEvent& event);
+
+	wxTextCtrl* m_pHost{};
+	wxTextCtrl* m_pUser{};
+	wxTextCtrl* m_pPass{};
+	wxTextCtrl* m_pPort{};
+
+	CMainFrame *m_pMainFrame{};
+};
+
+
+#endif
diff -Naupr a/src/interface/recentserverlist.h b/src/interface/recentserverlist.h
--- a/src/interface/recentserverlist.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/recentserverlist.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,17 @@
+#ifndef FILEZILLA_INTERFACE_RECENTSERVERLIST_HEADER
+#define FILEZILLA_INTERFACE_RECENTSERVERLIST_HEADER
+
+#include "xmlfunctions.h"
+
+#include <deque>
+
+class CRecentServerList
+{
+public:
+	static void SetMostRecentServer(Site const& site);
+	static void SetMostRecentServers(std::deque<Site> const& sites, bool lockMutex = true);
+	static const std::deque<Site> GetMostRecentServers(bool lockMutex = true);
+	static void Clear();
+};
+
+#endif
diff -Naupr a/src/interface/recursive_operation.h b/src/interface/recursive_operation.h
--- a/src/interface/recursive_operation.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/recursive_operation.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,56 @@
+#ifndef FILEZILLA_RECURSIVE_OPERATION_HEADER
+#define FILEZILLA_RECURSIVE_OPERATION_HEADER
+
+#include "filter.h"
+#include "state.h"
+
+class CActionAfterBlocker;
+class CQueueView;
+class CRecursiveOperation : public CStateEventHandler
+{
+public:
+	CRecursiveOperation(CState& state)
+		: CStateEventHandler(state)
+		, m_operationMode(recursive_none)
+	{}
+
+	virtual ~CRecursiveOperation() = default;
+
+	enum OperationMode {
+		recursive_none,
+		recursive_transfer,
+		recursive_transfer_flatten,
+		recursive_delete,
+		recursive_chmod,
+		recursive_list,
+		recursive_synchronize_download,
+		recursive_synchronize_upload
+	};
+
+	bool IsActive() const { return GetOperationMode() != recursive_none; }
+	OperationMode GetOperationMode() const { return m_operationMode; }
+	int64_t GetProcessedFiles() const { return m_processedFiles; }
+	int64_t GetProcessedDirectories() const { return m_processedDirectories; }
+
+	uint64_t m_processedFiles{};
+	uint64_t m_processedDirectories{};
+
+	virtual void StopRecursiveOperation() = 0;
+
+	void SetQueue(CQueueView* pQueue);
+
+	void SetImmediate(bool immediate);
+
+protected:
+	bool m_immediate{true};
+
+	OperationMode m_operationMode;
+
+	CQueueView* m_pQueue{};
+
+	ActiveFilters m_filters;
+
+	std::shared_ptr<CActionAfterBlocker> m_actionAfterBlocker;
+};
+
+#endif
\ Manca newline alla fine del file
diff -Naupr a/src/interface/recursive_operation_status.h b/src/interface/recursive_operation_status.h
--- a/src/interface/recursive_operation_status.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/recursive_operation_status.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,34 @@
+#ifndef FZ_RECURSIVE_OPERATION_STATUS_HEADER
+#define FZ_RECURSIVE_OPERATION_STATUS_HEADER
+
+#include "state.h"
+
+#include <wx/timer.h>
+
+class CRecursiveOperationStatus final : public wxWindow, public CStateEventHandler
+{
+public:
+	CRecursiveOperationStatus(wxWindow* pParent, CState& state, bool local);
+
+	CRecursiveOperationStatus(CRecursiveOperationStatus const&) = delete;
+private:
+	virtual bool Show(bool show);
+
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const&, const void*) override;
+
+	void UpdateText();
+
+	wxStaticText* m_pTextCtrl[2];
+
+	wxTimer m_timer;
+	bool m_changed{};
+
+	wxDECLARE_EVENT_TABLE();
+	void OnPaint(wxPaintEvent& ev);
+	void OnCancel(wxCommandEvent& ev);
+	void OnTimer(wxTimerEvent&);
+
+	bool const m_local;
+};
+
+#endif
diff -Naupr a/src/interface/remote_recursive_operation.h b/src/interface/remote_recursive_operation.h
--- a/src/interface/remote_recursive_operation.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/remote_recursive_operation.h	2020-01-23 12:18:26.000000000 +0100
@@ -0,0 +1,91 @@
+#ifndef FILEZILLA_REMOTE_RECURSIVE_OPERATION_HEADER
+#define FILEZILLA_REMOTE_RECURSIVE_OPERATION_HEADER
+
+#include <set>
+#include "recursive_operation.h"
+#include <libfilezilla/optional.hpp>
+
+class ChmodData;
+
+class recursion_root final
+{
+public:
+	recursion_root() = default;
+	recursion_root(CServerPath const& start_dir, bool allow_parent);
+
+	void add_dir_to_visit(CServerPath const& path, std::wstring const& subdir, CLocalPath const& localDir = CLocalPath(), bool is_link = false);
+
+	// Queue a directory but restrict processing to the named subdirectory
+	void add_dir_to_visit_restricted(CServerPath const& path, std::wstring const& restrict, bool recurse);
+
+	bool empty() const { return m_dirsToVisit.empty(); }
+
+private:
+	friend class CRemoteRecursiveOperation;
+
+	class new_dir final
+	{
+	public:
+		CServerPath parent;
+		std::wstring subdir;
+		CLocalPath localDir;
+		fz::sparse_optional<std::wstring> restrict;
+
+		// Symlink target might be outside actual start dir. Yet
+		// sometimes user wants to download symlink target contents
+		CServerPath start_dir;
+
+		// 0 = not a link
+		// 1 = link, added by class during the operation
+		// 2 = link, added by user of class
+		int link{};
+
+		bool doVisit{true};
+		bool recurse{true};
+		bool second_try{};
+	};
+
+	CServerPath m_remoteStartDir;
+	std::set<CServerPath> m_visitedDirs;
+	std::deque<new_dir> m_dirsToVisit;
+	bool m_allowParent{};
+};
+
+class CRemoteRecursiveOperation final : public CRecursiveOperation
+{
+public:
+	CRemoteRecursiveOperation(CState& state);
+	virtual ~CRemoteRecursiveOperation();
+
+	void AddRecursionRoot(recursion_root && root);
+	void StartRecursiveOperation(OperationMode mode, ActiveFilters const& filters, CServerPath const& finalDir, bool immediate = true);
+
+	// Needed for recursive_chmod
+	void SetChmodData(std::unique_ptr<ChmodData> && chmodData);
+
+	virtual void StopRecursiveOperation();
+
+protected:
+	void LinkIsNotDir();
+	void ListingFailed(int error);
+
+	// Processes the directory listing in case of a recursive operation
+	void ProcessDirectoryListing(const CDirectoryListing* pDirectoryListing);
+
+	bool NextOperation();
+
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const&, const void* data2) override;
+
+	bool BelowRecursionRoot(const CServerPath& path, recursion_root::new_dir &dir);
+
+	std::deque<recursion_root> recursion_roots_;
+
+	CServerPath m_finalDir;
+
+	// Needed for recursive_chmod
+	std::unique_ptr<ChmodData> chmodData_;
+
+	friend class CCommandQueue;
+};
+
+#endif
diff -Naupr a/src/interface/resources/xrc/dialogs.xrc b/src/interface/resources/xrc/dialogs.xrc
--- a/src/interface/resources/xrc/dialogs.xrc	2020-01-24 15:21:03.000000000 +0100
+++ b/src/interface/resources/xrc/dialogs.xrc	2020-02-20 16:00:03.000000000 +0100
@@ -492,356 +492,6 @@
       </object>
     </object>
   </object>
-  <object class="wxDialog" name="ID_FILTER">
-    <title>Directory listing filters</title>
-    <object class="wxBoxSizer">
-      <orient>wxVERTICAL</orient>
-      <object class="sizeritem">
-        <object class="wxBoxSizer">
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxFlexGridSizer">
-              <cols>5</cols>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>&amp;Filter sets:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxChoice" name="ID_SETS">
-                  <focused>1</focused>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxButton" name="ID_SAVESET">
-                  <label>&amp;Save as...</label>
-                </object>
-              </object>
-              <hgap>5</hgap>
-              <object class="sizeritem">
-                <object class="wxButton" name="ID_RENAMESET">
-                  <label>&amp;Rename...</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxButton" name="ID_DELETESET">
-                  <label>&amp;Delete</label>
-                </object>
-              </object>
-            </object>
-          </object>
-          <object class="sizeritem">
-            <object class="wxBoxSizer">
-              <orient>wxHORIZONTAL</orient>
-              <object class="sizeritem">
-                <object class="wxStaticBoxSizer">
-                  <label>Local filters:</label>
-                  <orient>wxVERTICAL</orient>
-                  <object class="sizeritem">
-                    <object class="wxCheckListBox" name="ID_LOCALFILTERS">
-                      <size>-1,200</size>
-                    </object>
-                    <flag>wxALL|wxGROW</flag>
-                    <border>5</border>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxBoxSizer">
-                      <orient>wxHORIZONTAL</orient>
-                      <object class="sizeritem">
-                        <object class="wxButton" name="ID_LOCAL_ENABLEALL">
-                          <label>E&amp;nable all</label>
-                        </object>
-                        <flag>wxRIGHT</flag>
-                        <border>5</border>
-                      </object>
-                      <object class="sizeritem">
-                        <object class="wxButton" name="ID_LOCAL_DISABLEALL">
-                          <label>D&amp;isable all</label>
-                        </object>
-                      </object>
-                    </object>
-                    <flag>wxBOTTOM|wxLEFT|wxRIGHT|wxALIGN_CENTRE_HORIZONTAL</flag>
-                    <border>5</border>
-                  </object>
-                </object>
-                <option>1</option>
-                <flag>wxRIGHT</flag>
-                <border>5</border>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticBoxSizer">
-                  <label>Remote filters:</label>
-                  <orient>wxVERTICAL</orient>
-                  <object class="sizeritem">
-                    <object class="wxCheckListBox" name="ID_REMOTEFILTERS">
-                      <size>-1, 200</size>
-                    </object>
-                    <flag>wxALL|wxGROW</flag>
-                    <border>5</border>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxBoxSizer">
-                      <orient>wxHORIZONTAL</orient>
-                      <object class="sizeritem">
-                        <object class="wxButton" name="ID_REMOTE_ENABLEALL">
-                          <label>En&amp;able all</label>
-                        </object>
-                        <flag>wxRIGHT</flag>
-                        <border>5</border>
-                      </object>
-                      <object class="sizeritem">
-                        <object class="wxButton" name="ID_REMOTE_DISABLEALL">
-                          <label>Disa&amp;ble all</label>
-                        </object>
-                      </object>
-                    </object>
-                    <flag>wxBOTTOM|wxLEFT|wxRIGHT|wxALIGN_CENTRE_HORIZONTAL</flag>
-                    <border>5</border>
-                  </object>
-                </object>
-                <option>1</option>
-              </object>
-            </object>
-            <flag>wxTOP|wxGROW</flag>
-            <border>5</border>
-          </object>
-          <object class="sizeritem" platform="win|mac">
-            <object class="wxStaticText">
-              <label>Hold the shift key to toggle the filter state on both sides simultaneously.</label>
-            </object>
-            <flag>wxTOP|wxBOTTOM</flag>
-            <border>5</border>
-          </object>
-          <object class="sizeritem" platform="win|mac">
-            <object class="wxStaticLine"/>
-            <flag>wxGROW</flag>
-          </object>
-          <object class="sizeritem">
-            <object class="wxBoxSizer">
-              <orient>wxHORIZONTAL</orient>
-              <object class="sizeritem">
-                <object class="wxButton" name="ID_EDIT">
-                  <label>&amp;Edit filter rules...</label>
-                </object>
-              </object>
-              <object class="spacer">
-                <size>25,0</size>
-                <option>1</option>
-              </object>
-              <object class="sizeritem">
-                <object class="wxGridSizer">
-                  <rows>1</rows>
-                  <hgap>6</hgap>
-                  <object class="sizeritem">
-                    <object class="wxButton" name="wxID_OK">
-                      <label>OK</label>
-                      <default>1</default>
-                    </object>
-                    <flag>wxGROW</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxButton" name="wxID_CANCEL">
-                      <label>Cancel</label>
-                    </object>
-                    <flag>wxGROW</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxButton" name="wxID_APPLY">
-                      <label>Apply</label>
-                    </object>
-                    <flag>wxGROW</flag>
-                  </object>
-                </object>
-              </object>
-            </object>
-            <flag>wxGROW|wxTOP</flag>
-            <border>5</border>
-          </object>
-        </object>
-        <flag>wxALL</flag>
-        <border>5</border>
-      </object>
-    </object>
-  </object>
-  <object class="wxDialog" name="ID_EDITFILTER">
-    <object class="wxBoxSizer">
-      <orient>wxVERTICAL</orient>
-      <object class="sizeritem">
-        <object class="wxBoxSizer">
-          <object class="sizeritem">
-            <object class="wxBoxSizer">
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>&amp;Filters:</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxListBox" name="ID_FILTERS">
-                  <focused>1</focused>
-                </object>
-                <option>1</option>
-                <flag>wxTOP|wxBOTTOM|wxGROW</flag>
-                <border>5</border>
-              </object>
-              <object class="sizeritem">
-                <object class="wxGridSizer">
-                  <cols>2</cols>
-                  <object class="sizeritem">
-                    <object class="wxButton" name="ID_NEW">
-                      <label>&amp;New</label>
-                    </object>
-                    <flag>wxGROW</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxButton" name="ID_DELETE">
-                      <label>&amp;Delete</label>
-                    </object>
-                    <flag>wxGROW</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxButton" name="ID_RENAME">
-                      <label>&amp;Rename</label>
-                    </object>
-                    <flag>wxGROW</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxButton" name="ID_COPY">
-                      <label>D&amp;uplicate</label>
-                    </object>
-                    <flag>wxGROW</flag>
-                  </object>
-                  <vgap>5</vgap>
-                  <hgap>5</hgap>
-                </object>
-                <flag>wxALIGN_CENTRE_HORIZONTAL</flag>
-              </object>
-              <orient>wxVERTICAL</orient>
-            </object>
-            <flag>wxGROW</flag>
-          </object>
-          <object class="sizeritem">
-            <object class="wxBoxSizer">
-              <object class="sizeritem">
-                <object class="wxFlexGridSizer">
-                  <object class="sizeritem">
-                    <object class="wxStaticText">
-                      <label>F&amp;ilter name:</label>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxTextCtrl" name="ID_NAME">
-                      <maxlength>255</maxlength>
-                    </object>
-                    <flag>wxGROW|wxALIGN_CENTRE_VERTICAL</flag>
-                    <minsize>200,-1</minsize>
-                  </object>
-                  <cols>2</cols>
-                  <hgap>5</hgap>
-                  <growablecols>1</growablecols>
-                </object>
-                <flag>wxGROW</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxFlexGridSizer">
-                  <object class="sizeritem">
-                    <object class="wxStaticText">
-                      <label>&amp;Filter conditions:</label>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxChoice" name="ID_MATCHTYPE">
-                      <content>
-                        <item>Filter out items matching all of the following</item>
-                        <item>Filter out items matching any of the following</item>
-                        <item>Filter out items matching none of the following</item>
-                        <item>Filter out items matching not all of the following</item>
-                      </content>
-                      <selection>0</selection>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <rows>1</rows>
-                  <hgap>5</hgap>
-                </object>
-                <flag>wxTOP|wxBOTTOM</flag>
-                <border>5</border>
-              </object>
-              <object class="sizeritem">
-                <object class="wxScrolledWindow" name="ID_CONDITIONS" subclass="wxCustomHeightListCtrl">
-                  <size>350,200</size>
-                  <style>wxVSCROLL|wxSUNKEN_BORDER|wxTAB_TRAVERSAL</style>
-                  <bg>wxSYS_COLOUR_WINDOW</bg>
-                </object>
-                <option>1</option>
-                <flag>wxGROW</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxCheckBox" name="ID_CASE">
-                  <label>Conditions are c&amp;ase sensitive</label>
-                </object>
-                <flag>wxTOP|wxBOTTOM</flag>
-                <border>5</border>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>Filter applies to:</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxFlexGridSizer">
-                  <object class="sizeritem">
-                    <object class="wxCheckBox" name="ID_FILES">
-                      <label>Fil&amp;es</label>
-                    </object>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxCheckBox" name="ID_DIRS">
-                      <label>Dire&amp;ctories</label>
-                    </object>
-                  </object>
-                  <rows>1</rows>
-                  <hgap>5</hgap>
-                </object>
-                <flag>wxTOP</flag>
-                <border>5</border>
-              </object>
-              <orient>wxVERTICAL</orient>
-            </object>
-            <option>1</option>
-            <flag>wxLEFT|wxGROW</flag>
-            <border>10</border>
-          </object>
-          <orient>wxHORIZONTAL</orient>
-        </object>
-        <option>1</option>
-        <flag>wxALL|wxGROW</flag>
-        <border>5</border>
-      </object>
-      <object class="sizeritem">
-        <object class="wxStdDialogButtonSizer">
-          <object class="button">
-            <object class="wxButton" name="wxID_OK">
-              <label>OK</label>
-              <default>1</default>
-            </object>
-          </object>
-          <object class="button">
-            <object class="wxButton" name="wxID_CANCEL">
-              <label>Cancel</label>
-            </object>
-          </object>
-        </object>
-        <flag>wxALL|wxGROW</flag>
-        <border>5</border>
-      </object>
-    </object>
-    <title>Edit filters</title>
-    <style>wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER</style>
-  </object>
   <object class="wxDialog" name="ID_DEFAULTFILEEXISTSDLG">
     <title>Default file exists action</title>
     <object class="wxBoxSizer">
diff -Naupr a/src/interface/resources/xrc/settings.xrc b/src/interface/resources/xrc/settings.xrc
--- a/src/interface/resources/xrc/settings.xrc	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/resources/xrc/settings.xrc	2020-02-19 16:39:03.000000000 +0100
@@ -750,243 +750,6 @@
       </object>
     </object>
   </object>
-  <object class="wxPanel" name="ID_SETTINGS_TRANSFER">
-    <object class="wxBoxSizer">
-      <orient>wxVERTICAL</orient>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Concurrent transfers</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxFlexGridSizer">
-              <cols>3</cols>
-              <vgap>4</vgap>
-              <hgap>4</hgap>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>Maximum simultaneous &amp;transfers:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxSpinCtrl" name="ID_NUMTRANSFERS">
-                  <min>1</min>
-                  <max>10</max>
-                  <size>26,-1d</size>
-                  <style>wxSP_ARROW_KEYS</style>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>(1-10)</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>Limit for concurrent &amp;downloads:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxSpinCtrl" name="ID_NUMDOWNLOADS">
-                  <min>0</min>
-                  <max>10</max>
-                  <size>26,-1d</size>
-                  <style>wxSP_ARROW_KEYS</style>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>(0 for no limit)</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>Limit for concurrent &amp;uploads:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxSpinCtrl" name="ID_NUMUPLOADS">
-                  <min>0</min>
-                  <max>10</max>
-                  <size>26,-1d</size>
-                  <style>wxSP_ARROW_KEYS</style>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>(0 for no limit)</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-            </object>
-            <flag>wxBOTTOM|wxLEFT|wxRIGHT</flag>
-            <border>4</border>
-          </object>
-        </object>
-        <flag>wxGROW</flag>
-      </object>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Speed limits</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxCheckBox" name="ID_ENABLE_SPEEDLIMITS">
-              <label>&amp;Enable speed limits</label>
-            </object>
-            <flag>wxLEFT|wxRIGHT|wxTOP</flag>
-            <border>4</border>
-          </object>
-          <object class="sizeritem">
-            <object class="wxFlexGridSizer">
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>Download &amp;limit:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxFlexGridSizer">
-                  <object class="sizeritem">
-                    <object class="wxTextCtrl" name="ID_DOWNLOADLIMIT">
-                      <size>60,-1</size>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxStaticText" name="ID_DOWNLOADLIMIT_UNIT">
-                      <label>(in %s/s)</label>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <cols>2</cols>
-                  <hgap>5</hgap>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>U&amp;pload limit:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxFlexGridSizer">
-                  <object class="sizeritem">
-                    <object class="wxTextCtrl" name="ID_UPLOADLIMIT">
-                      <size>60,-1</size>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxStaticText" name="ID_UPLOADLIMIT_UNIT">
-                      <label>(in %s/s)</label>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <cols>2</cols>
-                  <hgap>5</hgap>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>&amp;Burst tolerance:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxChoice" name="ID_BURSTTOLERANCE">
-                  <content>
-                    <item>Normal</item>
-                    <item>High</item>
-                    <item>Very high</item>
-                  </content>
-                </object>
-              </object>
-              <cols>2</cols>
-              <vgap>5</vgap>
-              <hgap>5</hgap>
-            </object>
-            <flag>wxALL</flag>
-            <border>4</border>
-          </object>
-        </object>
-        <flag>wxGROW</flag>
-      </object>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Filter invalid characters in filenames</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxFlexGridSizer">
-              <object class="sizeritem">
-                <object class="wxCheckBox" name="ID_ENABLE_REPLACE">
-                  <label>Enable invalid character &amp;filtering</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>When enabled, characters that are not supported by the local operating system in filenames are replaced if downloading such a file.</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxBoxSizer">
-                  <orient>wxHORIZONTAL</orient>
-                  <object class="sizeritem">
-                    <object class="wxStaticText">
-                      <label>&amp;Replace invalid characters with:</label>
-                    </object>
-                    <flag>wxRIGHT|wxALIGN_CENTER_VERTICAL</flag>
-                    <border>5</border>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxTextCtrl" name="ID_REPLACE"/>
-                    <flag>wxALIGN_CENTER_VERTICAL</flag>
-                    <minsize>25,-1</minsize>
-                  </object>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_REPLACED">
-                  <label>&lt;replaced&gt;</label>
-                </object>
-              </object>
-              <cols>1</cols>
-              <vgap>5</vgap>
-            </object>
-            <flag>wxBOTTOM|wxLEFT|wxRIGHT</flag>
-            <border>4</border>
-          </object>
-        </object>
-        <flag>wxGROW</flag>
-      </object>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Preallocation</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxCheckBox" name="ID_ENABLE_PREALLOCATION">
-              <label>Pre&amp;allocate space before downloading</label>
-            </object>
-            <flag>wxLEFT|wxRIGHT|wxTOP</flag>
-            <border>4</border>
-          </object>
-        </object>
-        <flag>wxGROW</flag>
-      </object>
-      <object class="sizeritem">
-        <object class="wxStaticText">
-        </object>
-      </object>
-    </object>
-  </object>
   <object class="wxPanel" name="ID_SETTINGS_FILETYPE">
     <object class="wxBoxSizer">
       <orient>wxVERTICAL</orient>
@@ -1207,83 +970,6 @@
       </object>
     </object>
   </object>
-  <object class="wxPanel" name="ID_SETTINGS_THEMES">
-    <object class="wxBoxSizer">
-      <orient>wxVERTICAL</orient>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Select Theme</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxFlexGridSizer">
-              <cols>2</cols>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>&amp;Theme:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxChoice" name="ID_THEME"/>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>Author:</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_AUTHOR">
-                  <label>&lt;Author&gt;</label>
-                </object>
-                <flag>wxGROW</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText">
-                  <label>Email:</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_EMAIL">
-                  <label>&lt;Email&gt;</label>
-                </object>
-                <flag>wxGROW</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_SCALE_LABEL">
-                  <label>Scale factor:</label>
-                </object>
-                <flag>wxALIGN_CENTRE_VERTICAL</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_SCALE">
-                  <label>&lt;Scale&gt;</label>
-                </object>
-              </object>
-              <vgap>5</vgap>
-              <hgap>5</hgap>
-            </object>
-            <flag>wxALL|wxGROW</flag>
-            <border>5</border>
-          </object>
-        </object>
-        <flag>wxGROW</flag>
-      </object>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Preview</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxScrolledWindow" subclass="CIconPreview" name="ID_PREVIEW"/>
-            <option>1</option>
-            <flag>wxALL|wxGROW</flag>
-            <border>5</border>
-          </object>
-        </object>
-        <option>1</option>
-        <flag>wxGROW</flag>
-      </object>
-    </object>
-  </object>
   <object class="wxPanel" name="ID_SETTINGS_DATEFORMATTING">
     <object class="wxBoxSizer">
       <orient>wxVERTICAL</orient>
@@ -1396,123 +1082,6 @@
       </object>
     </object>
   </object>
-  <object class="wxPanel" name="ID_SETTINGS_SIZEFORMATTING">
-    <object class="wxBoxSizer">
-      <orient>wxVERTICAL</orient>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Size formatting</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxFlexGridSizer">
-              <object class="sizeritem">
-                <object class="wxRadioButton" name="ID_SIZEFORMAT_BYTES">
-                  <label>&amp;Display size in bytes</label>
-                  <style>wxRB_GROUP</style>
-                </object>
-              </object>
-              <cols>1</cols>
-              <vgap>5</vgap>
-              <object class="sizeritem">
-                <object class="wxRadioButton" name="ID_SIZEFORMAT_IEC">
-                  <label>&amp;IEC binary prefixes (e.g. 1 KiB = 1024 bytes)</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxRadioButton" name="ID_SIZEFORMAT_SI_BINARY">
-                  <label>&amp;Binary prefixes using SI symbols. (e.g. 1 KB = 1024 bytes)</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxRadioButton" name="ID_SIZEFORMAT_SI_DECIMAL">
-                  <label>D&amp;ecimal prefixes using SI symbols (e.g. 1 KB = 1000 bytes)</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxCheckBox" name="ID_SIZEFORMAT_SEPARATE_THOUTHANDS">
-                  <label>&amp;Use thousands separator</label>
-                </object>
-              </object>
-              <object class="sizeritem">
-                <object class="wxFlexGridSizer">
-                  <object class="sizeritem">
-                    <object class="wxStaticText">
-                      <label>Number of decimal places:</label>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <object class="sizeritem">
-                    <object class="wxSpinCtrl" name="ID_SIZEFORMAT_DECIMALPLACES">
-                      <min>0</min>
-                      <max>3</max>
-                      <size>50,-1</size>
-                    </object>
-                    <flag>wxALIGN_CENTRE_VERTICAL</flag>
-                  </object>
-                  <cols>2</cols>
-                  <hgap>5</hgap>
-                </object>
-              </object>
-            </object>
-            <flag>wxALL</flag>
-            <border>5</border>
-          </object>
-        </object>
-        <flag>wxGROW</flag>
-      </object>
-      <object class="sizeritem">
-        <object class="wxStaticBoxSizer">
-          <label>Examples</label>
-          <orient>wxVERTICAL</orient>
-          <object class="sizeritem">
-            <object class="wxFlexGridSizer">
-              <cols>1</cols>
-              <vgap>3</vgap>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_EXAMPLE1">
-                  <label>&lt;example&gt;</label>
-                </object>
-                <flag>wxALIGN_RIGHT</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_EXAMPLE2">
-                  <label>&lt;example&gt;</label>
-                </object>
-                <flag>wxALIGN_RIGHT</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_EXAMPLE3">
-                  <label>&lt;example&gt;</label>
-                </object>
-                <flag>wxALIGN_RIGHT</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_EXAMPLE4">
-                  <label>&lt;example&gt;</label>
-                </object>
-                <flag>wxALIGN_RIGHT</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_EXAMPLE5">
-                  <label>&lt;example&gt;</label>
-                </object>
-                <flag>wxALIGN_RIGHT</flag>
-              </object>
-              <object class="sizeritem">
-                <object class="wxStaticText" name="ID_EXAMPLE6">
-                  <label>&lt;example&gt;</label>
-                </object>
-                <flag>wxALIGN_RIGHT</flag>
-              </object>
-            </object>
-            <flag>wxALL</flag>
-            <border>5</border>
-          </object>
-        </object>
-        <flag>wxGROW</flag>
-      </object>
-    </object>
-  </object>
   <object class="wxPanel" name="ID_SETTINGS_FILELISTS">
     <object class="wxBoxSizer">
       <orient>wxVERTICAL</orient>
diff -Naupr a/src/interface/search.cpp b/src/interface/search.cpp
--- a/src/interface/search.cpp	2020-01-24 15:21:03.000000000 +0100
+++ b/src/interface/search.cpp	2020-02-19 16:39:04.000000000 +0100
@@ -11,6 +11,7 @@
 #include "queue.h"
 #include "remote_recursive_operation.h"
 #include "sizeformatting.h"
+#include "textctrlex.h"
 #include "timeformatting.h"
 #include "window_state_manager.h"
 #include "xrc_helper.h"
@@ -658,10 +659,10 @@ bool CSearchDialog::Load()
 
 	optionsSizer->Add(new wxButton(this, XRCID("ID_START"), "&Search"), 0, wxALIGN_CENTRE_VERTICAL);
 	optionsSizer->Add(new wxStaticText(this, XRCID("ID_PATH_LABEL"), "Search &directory:"), 0, wxALIGN_CENTRE_VERTICAL);
-	optionsSizer->Add(new wxTextCtrl(this, XRCID("ID_PATH")), 0, wxALIGN_CENTRE_VERTICAL | wxGROW);
+	optionsSizer->Add(new wxTextCtrlEx(this, XRCID("ID_PATH")), 0, wxALIGN_CENTRE_VERTICAL | wxGROW);
 	optionsSizer->Add(new wxButton(this, XRCID("ID_STOP"), "S&top"), 0, wxALIGN_CENTRE_VERTICAL);
 	optionsSizer->Add(new wxStaticText(this, XRCID("ID_REMOTE_PATH_LABEL"), "Search &directory:"), 0, wxALIGN_CENTRE_VERTICAL);
-	optionsSizer->Add(new wxTextCtrl(this, XRCID("ID_REMOTE_PATH")), 0, wxALIGN_CENTRE_VERTICAL | wxGROW);
+	optionsSizer->Add(new wxTextCtrlEx(this, XRCID("ID_REMOTE_PATH")), 0, wxALIGN_CENTRE_VERTICAL | wxGROW);
 	optionsSizer->AddSpacer(0);
 	optionsSizer->Add(new wxStaticText(this, wxID_ANY, "Search &conditions:"), 0, wxALIGN_CENTRE_VERTICAL);
 
diff -Naupr a/src/interface/search.h b/src/interface/search.h
--- a/src/interface/search.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/search.h	2020-01-24 15:21:03.000000000 +0100
@@ -0,0 +1,83 @@
+#ifndef FILEZILLA_INTERFACE_SEARCH_HEADER
+#define FILEZILLA_INTERFACE_SEARCH_HEADER
+
+#include "filter_conditions_dialog.h"
+#include "local_recursive_operation.h"
+#include "listingcomparison.h"
+#include "state.h"
+#include <set>
+
+class CWindowStateManager;
+class CSearchDialogFileList;
+class CQueueView;
+class CFilelistStatusBar;
+class CSearchDialog final : protected CFilterConditionsDialog, public CStateEventHandler
+{
+	friend class CSearchDialogFileList;
+public:
+	enum class search_mode
+	{
+		none,
+		local,
+		remote
+	};
+
+	CSearchDialog(wxWindow* parent, CState& state, CQueueView* pQueue);
+	virtual ~CSearchDialog();
+
+	bool Load();
+	void Run();
+
+	bool IsIdle();
+
+protected:
+	void ProcessDirectoryListing(std::shared_ptr<CDirectoryListing> const& listing);
+	void ProcessDirectoryListing(CLocalRecursiveOperation::listing const& listing);
+
+	void SetCtrlState();
+
+	void SaveConditions();
+	void LoadConditions();
+
+	wxWindow* m_parent;
+	CSearchDialogFileList *m_results{};
+	CSearchDialogFileList *m_remoteResults{};
+	CQueueView* m_pQueue;
+
+	CFilelistStatusBar* m_remoteStatusBar{};
+
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+
+	CWindowStateManager* m_pWindowStateManager{};
+
+	CFilter m_search_filter;
+
+	search_mode m_searching{};
+	bool m_comparative{};
+
+	CServerPath m_original_dir;
+
+	DECLARE_EVENT_TABLE()
+	void OnSearch(wxCommandEvent& event);
+	void OnStop(wxCommandEvent& event);
+	void OnContextMenu(wxContextMenuEvent& event);
+	void OnDownload(wxCommandEvent&);
+	void OnUpload(wxCommandEvent&);
+	void OnEdit(wxCommandEvent&);
+	void OnDeleteLocal(wxCommandEvent&);
+	void OnDeleteRemote(wxCommandEvent&);
+	void OnCharHook(wxKeyEvent& event);
+	void OnChangeSearchMode(wxCommandEvent&);
+	void OnGetUrl(wxCommandEvent& event);
+	void OnOpen(wxCommandEvent& event);
+	void OnChangeCompareOption(wxCommandEvent& event);
+
+	std::set<CServerPath> m_visited;
+
+	CLocalPath m_local_search_root;
+	CServerPath m_remote_search_root;
+
+	CComparisonManager* m_pComparisonManager{};
+};
+
+#endif
diff -Naupr a/src/interface/serverdata.h b/src/interface/serverdata.h
--- a/src/interface/serverdata.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/serverdata.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,138 @@
+#ifndef FILEZILLA_INTERFACE_SERVER_HEADER
+#define FILEZILLA_INTERFACE_SERVER_HEADER
+
+#include <server.h>
+
+#include <libfilezilla/encryption.hpp>
+
+#include <optional>
+#include <string>
+
+class ProtectedCredentials final : public Credentials
+{
+public:
+	ProtectedCredentials() = default;
+	ProtectedCredentials(ProtectedCredentials const& c) = default;
+	ProtectedCredentials& operator=(ProtectedCredentials const& c) = default;
+
+	explicit ProtectedCredentials(Credentials const& c)
+		: Credentials(c)
+	{
+	}
+
+	void Protect();
+	void Protect(fz::public_key const& key);
+	bool Unprotect(fz::private_key const& key, bool on_failure_set_to_ask = false);
+
+	fz::public_key encrypted_;
+
+private:
+	bool DoUnprotect(fz::private_key const& key);
+};
+
+class Bookmark final
+{
+public:
+	bool operator==(Bookmark const& b) const;
+	bool operator!=(Bookmark const& b) const { return !(*this == b); }
+
+	std::wstring m_localDir;
+	CServerPath m_remoteDir;
+
+	bool m_sync{};
+	bool m_comparison{};
+
+	std::wstring m_name;
+};
+
+struct SiteHandleData final : public ServerHandleData
+{
+public:
+	std::wstring name_;
+	std::wstring sitePath_;
+
+	bool operator==(SiteHandleData& rhs) const {
+		return name_ == rhs.name_ && sitePath_ == rhs.sitePath_;
+	}
+
+	bool operator!=(SiteHandleData& rhs) const {
+		return !(*this == rhs);
+	}
+};
+
+SiteHandleData toSiteHandle(ServerHandle const& handle);
+
+class Site final
+{
+public:
+	Site() = default;
+
+	explicit Site(CServer const& s, ServerHandle const& handle, Credentials const& c)
+		: server(s)
+		, credentials(c)
+		, data_(std::dynamic_pointer_cast<SiteHandleData>(handle.lock()))
+	{}
+
+	explicit Site(CServer const& s, ServerHandle const& handle, ProtectedCredentials const& c)
+		: server(s)
+		, credentials(c)
+		, data_(std::dynamic_pointer_cast<SiteHandleData>(handle.lock()))
+	{}
+
+	Site(Site const& s);
+	Site& operator=(Site const& s);
+
+	explicit operator bool() const { return server.operator bool(); }
+
+	bool empty() const { return !*this; }
+	bool operator==(Site const& s) const;
+	bool operator!=(Site const& s) const { return !(*this == s); }
+
+	// Return true if URL could be parsed correctly, false otherwise.
+	// If parsing fails, pError is filled with the reason and the CServer instance may be left an undefined state.
+	bool ParseUrl(std::wstring host, unsigned int port, std::wstring user, std::wstring pass, std::wstring &error, CServerPath &path, ServerProtocol const hint = UNKNOWN);
+	bool ParseUrl(std::wstring const& host, std::wstring const& port, std::wstring const& user, std::wstring const& pass, std::wstring &error, CServerPath &path, ServerProtocol const hint = UNKNOWN);
+
+	std::wstring Format(ServerFormat formatType) const {
+		return server.Format(formatType, credentials);
+	}
+
+	void SetLogonType(LogonType logonType);
+
+	void SetUser(std::wstring const& user);
+
+	void SetName(std::wstring const& name);
+	std::wstring const& GetName() const;
+
+	CServer server;
+	std::optional<CServer> originalServer;
+	ProtectedCredentials credentials;
+
+	std::wstring comments_;
+
+	Bookmark m_default_bookmark;
+
+	std::vector<Bookmark> m_bookmarks;
+
+	wxColour m_colour;
+
+	void SetSitePath(std::wstring const& sitePath);
+	std::wstring const& SitePath() const;
+
+	ServerHandle Handle() const;
+
+	// Almost like operator= but does not invalidate exiting handles.
+	void Update(Site const& rhs);
+
+	bool SameResource(Site const& other) const {
+		return server.SameResource(other.server);
+	}
+
+	CServer const& GetOriginalServer() const {
+		return originalServer ? *originalServer : server;
+	}
+private:
+	std::shared_ptr<SiteHandleData> data_;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage.h b/src/interface/settings/optionspage.h
--- a/src/interface/settings/optionspage.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,62 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_HEADER
+
+#include <wx/panel.h>
+
+class COptions;
+class CSettingsDialog;
+class COptionsPage : public wxPanel
+{
+public:
+	virtual bool CreatePage(COptions* pOptions, CSettingsDialog* pOwner, wxWindow* parent, wxSize& maxSize);
+
+	void UpdateMaxPageSize(wxSize& maxSize);
+
+	virtual bool LoadPage() = 0;
+	virtual bool SavePage() = 0;
+	virtual bool Validate() { return true; }
+
+	void SetCheck(int id, bool checked, bool& failure);
+	void SetCheckFromOption(int control_id, int option_id, bool& failure);
+	void SetRCheck(int id, bool checked, bool& failure);
+	void SetTextFromOption(int ctrlId, int optionId, bool& failure);
+	void SetStaticText(int id, const wxString& text, bool& failure);
+	void SetChoice(int id, int selection, bool& failure);
+	bool SetText(int id, const wxString& text, bool& failure);
+
+	// The GetXXX functions do never return an error since the controls were
+	// checked to exist while loading the dialog.
+	bool GetCheck(int id) const;
+	bool GetRCheck(int id) const;
+	wxString GetText(int id) const;
+	wxString GetStaticText(int id) const;
+	int GetChoice(int id) const;
+
+	void SetOptionFromText(int ctrlId, int optionId);
+	void SetIntOptionFromText(int ctrlId, int optionId); // There's no corresponding GetTextFromIntOption as COptions::GetOption is smart enough to convert
+	void SetOptionFromCheck(int control_id, int option_id);
+
+	void ReloadSettings();
+
+	// Always returns false
+	bool DisplayError(const wxString& controlToFocus, const wxString& error);
+	bool DisplayError(wxWindow* pWnd, const wxString& error);
+
+	bool Display();
+
+	virtual bool OnDisplayedFirstTime();
+
+protected:
+	virtual wxString GetResourceName() const {
+		return wxString();
+	}
+
+	virtual bool CreateControls(wxWindow* parent);
+
+	COptions* m_pOptions{};
+	CSettingsDialog* m_pOwner{};
+
+	bool m_was_selected{};
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_connection.h b/src/interface/settings/optionspage_connection.h
--- a/src/interface/settings/optionspage_connection.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_connection.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,17 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_HEADER
+
+class COptionsPageConnection final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_CONNECTION"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+	DECLARE_EVENT_TABLE()
+	void OnWizard(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_connection_active.h b/src/interface/settings/optionspage_connection_active.h
--- a/src/interface/settings/optionspage_connection_active.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_connection_active.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,19 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_ACTIVE_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_ACTIVE_HEADER
+
+class COptionsPageConnectionActive final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_CONNECTION_ACTIVE"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+	virtual void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnRadioOrCheckEvent(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_connection_ftp.h b/src/interface/settings/optionspage_connection_ftp.h
--- a/src/interface/settings/optionspage_connection_ftp.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_connection_ftp.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,12 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_FTP_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_FTP_HEADER
+
+class COptionsPageConnectionFTP final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_CONNECTION_FTP"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_connection_passive.h b/src/interface/settings/optionspage_connection_passive.h
--- a/src/interface/settings/optionspage_connection_passive.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_connection_passive.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,13 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_PASSIVE_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_PASSIVE_HEADER
+
+class COptionsPageConnectionPassive final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_CONNECTION_PASSIVE"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_connection_sftp.h b/src/interface/settings/optionspage_connection_sftp.h
--- a/src/interface/settings/optionspage_connection_sftp.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_connection_sftp.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,32 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_SFTP_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_CONNECTION_SFTP_HEADER
+
+#include <wx/process.h>
+
+#include <memory>
+
+class CFZPuttyGenInterface;
+class COptionsPageConnectionSFTP final : public COptionsPage
+{
+public:
+	COptionsPageConnectionSFTP();
+	virtual ~COptionsPageConnectionSFTP();
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_CONNECTION_SFTP"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+
+protected:
+	std::unique_ptr<CFZPuttyGenInterface> m_pFzpg;
+
+	bool AddKey(std::wstring keyFile, bool silent);
+	bool KeyFileExists(std::wstring const& keyFile);
+
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnAdd(wxCommandEvent& event);
+	void OnRemove(wxCommandEvent& event);
+	void OnSelChanged(wxListEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_dateformatting.h b/src/interface/settings/optionspage_dateformatting.h
--- a/src/interface/settings/optionspage_dateformatting.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_dateformatting.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,20 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_DATEFORMATTING_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_DATEFORMATTING_HEADER
+
+class COptionsPageDateFormatting final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_DATEFORMATTING"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnRadioChanged(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_debug.h b/src/interface/settings/optionspage_debug.h
--- a/src/interface/settings/optionspage_debug.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_debug.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,13 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_DEBUG_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_DEBUG_HEADER
+
+class COptionsPageDebug final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_DEBUG"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_edit.h b/src/interface/settings/optionspage_edit.h
--- a/src/interface/settings/optionspage_edit.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_edit.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,21 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_EDIT_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_EDIT_HEADER
+
+class COptionsPageEdit final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_EDIT"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnBrowseEditor(wxCommandEvent& event);
+	void OnRadioButton(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_edit_associations.h b/src/interface/settings/optionspage_edit_associations.h
--- a/src/interface/settings/optionspage_edit_associations.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_edit_associations.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,13 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_EDIT_ASSOCIATIONS_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_EDIT_ASSOCIATIONS_HEADER
+
+class COptionsPageEditAssociations final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_EDIT_ASSOCIATIONS"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_fileexists.h b/src/interface/settings/optionspage_fileexists.h
--- a/src/interface/settings/optionspage_fileexists.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_fileexists.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,13 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_FILEEXISTS_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_FILEEXISTS_HEADER
+
+class COptionsPageFileExists final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_FILEEXISTS"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_filelists.h b/src/interface/settings/optionspage_filelists.h
--- a/src/interface/settings/optionspage_filelists.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_filelists.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,13 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_FILELISTS_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_FILELISTS_HEADER
+
+class COptionsPageFilelists final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_FILELISTS"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_filetype.h b/src/interface/settings/optionspage_filetype.h
--- a/src/interface/settings/optionspage_filetype.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_filetype.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,22 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_FILETYPE_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_FILETYPE_HEADER
+
+class COptionsPageFiletype final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_FILETYPE"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnRemove(wxCommandEvent& event);
+	void OnAdd(wxCommandEvent& event);
+	void OnSelChanged(wxListEvent& event);
+	void OnTextChanged(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_ftpproxy.h b/src/interface/settings/optionspage_ftpproxy.h
--- a/src/interface/settings/optionspage_ftpproxy.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_ftpproxy.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,21 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_FTPPROXY_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_FTPPROXY_HEADER
+
+class COptionsPageFtpProxy final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_CONNECTION_FTP_PROXY"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnProxyTypeChanged(wxCommandEvent& event);
+	void OnLoginSequenceChanged(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_interface.h b/src/interface/settings/optionspage_interface.h
--- a/src/interface/settings/optionspage_interface.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_interface.h	2020-02-19 16:39:04.000000000 +0100
@@ -0,0 +1,20 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_INTERFACE_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_INTERFACE_HEADER
+
+#include "optionspage.h"
+
+class COptionsPageInterface final : public COptionsPage
+{
+public:
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+
+protected:
+	virtual bool CreateControls(wxWindow* parent) override;
+
+private:
+	DECLARE_EVENT_TABLE()
+	void OnLayoutChange(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_language.h b/src/interface/settings/optionspage_language.h
--- a/src/interface/settings/optionspage_language.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_language.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,24 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_LANGUAGE_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_LANGUAGE_HEADER
+
+class COptionsPageLanguage final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_LANGUAGE"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+	virtual bool OnDisplayedFirstTime();
+
+	struct _locale_info { wxString name; wxString code; };
+
+protected:
+	void GetLocales();
+
+	DECLARE_EVENT_TABLE()
+
+	std::vector<_locale_info> m_locale;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_logging.h b/src/interface/settings/optionspage_logging.h
--- a/src/interface/settings/optionspage_logging.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_logging.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,20 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_LOGGING_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_LOGGING_HEADER
+
+class COptionsPageLogging final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_LOGGING"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnBrowse(wxCommandEvent& event);
+	void OnCheck(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_passwords.h b/src/interface/settings/optionspage_passwords.h
--- a/src/interface/settings/optionspage_passwords.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_passwords.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,17 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAG_PASSWORDS_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAG_PASSWORDS_HEADER
+
+#include "optionspage.h"
+
+class COptionsPagePasswords final : public COptionsPage
+{
+public:
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+	virtual bool CreateControls(wxWindow* parent) override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_proxy.h b/src/interface/settings/optionspage_proxy.h
--- a/src/interface/settings/optionspage_proxy.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_proxy.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,20 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_PROXY_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_PROXY_HEADER
+
+class COptionsPageProxy final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_CONNECTION_PROXY"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+
+	void SetCtrlState();
+
+	DECLARE_EVENT_TABLE()
+	void OnProxyTypeChanged(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_sizeformatting.cpp b/src/interface/settings/optionspage_sizeformatting.cpp
--- a/src/interface/settings/optionspage_sizeformatting.cpp	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/settings/optionspage_sizeformatting.cpp	2020-02-19 16:39:04.000000000 +0100
@@ -4,6 +4,9 @@
 #include "settingsdialog.h"
 #include "optionspage.h"
 #include "optionspage_sizeformatting.h"
+#include "wxext/spinctrlex.h"
+
+#include <wx/statbox.h>
 
 BEGIN_EVENT_TABLE(COptionsPageSizeFormatting, COptionsPage)
 EVT_RADIOBUTTON(wxID_ANY, COptionsPageSizeFormatting::OnRadio)
@@ -11,6 +14,45 @@ EVT_CHECKBOX(wxID_ANY, COptionsPageSizeF
 EVT_SPINCTRL(wxID_ANY, COptionsPageSizeFormatting::OnSpin)
 END_EVENT_TABLE()
 
+bool COptionsPageSizeFormatting::CreateControls(wxWindow* parent)
+{
+	auto const& lay = m_pOwner->layout();
+
+	Create(parent);
+	auto main = lay.createFlex(1);
+	main->AddGrowableCol(0);
+	SetSizer(main);
+
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Size formatting"), 1);
+		inner->Add(new wxRadioButton(box, XRCID("ID_SIZEFORMAT_BYTES"), _("&Display size in bytes"), wxDefaultPosition, wxDefaultSize, wxRB_GROUP));
+		inner->Add(new wxRadioButton(box, XRCID("ID_SIZEFORMAT_IEC"), _("&IEC binary prefixes (e.g. 1 KiB = 1024 bytes)")));
+		inner->Add(new wxRadioButton(box, XRCID("ID_SIZEFORMAT_SI_BINARY"), _("&Binary prefixes using SI symbols. (e.g. 1 KB = 1024 bytes)")));
+		inner->Add(new wxRadioButton(box, XRCID("ID_SIZEFORMAT_SI_DECIMAL"), _("D&ecimal prefixes using SI symbols (e.g. 1 KB = 1000 bytes)")));
+		inner->Add(new wxCheckBox(box, XRCID("ID_SIZEFORMAT_SEPARATE_THOUTHANDS"), _("&Use thousands separator")));
+
+		auto row = lay.createFlex(2);
+		inner->Add(row);
+		row->Add(new wxStaticText(box, -1, _("Number of decimal places:")), lay.valign);
+		auto spin = new wxSpinCtrlEx(box, XRCID("ID_SIZEFORMAT_DECIMALPLACES"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(30), -1));
+		spin->SetRange(0, 3);
+		spin->SetMaxLength(1);
+		row->Add(spin, lay.valign);
+	}
+
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Examples"), 1);
+		inner->Add(new wxStaticText(box, XRCID("ID_EXAMPLE1"), wxString()), lay.ralign);
+		inner->Add(new wxStaticText(box, XRCID("ID_EXAMPLE2"), wxString()), lay.ralign);
+		inner->Add(new wxStaticText(box, XRCID("ID_EXAMPLE3"), wxString()), lay.ralign);
+		inner->Add(new wxStaticText(box, XRCID("ID_EXAMPLE4"), wxString()), lay.ralign);
+		inner->Add(new wxStaticText(box, XRCID("ID_EXAMPLE5"), wxString()), lay.ralign);
+		inner->Add(new wxStaticText(box, XRCID("ID_EXAMPLE6"), wxString()), lay.ralign);
+	}
+
+	return true;
+}
+
 bool COptionsPageSizeFormatting::LoadPage()
 {
 	bool failure = false;
@@ -55,12 +97,15 @@ bool COptionsPageSizeFormatting::SavePag
 
 CSizeFormat::_format COptionsPageSizeFormatting::GetFormat() const
 {
-	if (GetRCheck(XRCID("ID_SIZEFORMAT_IEC")))
+	if (GetRCheck(XRCID("ID_SIZEFORMAT_IEC"))) {
 		return CSizeFormat::iec;
-	else if (GetRCheck(XRCID("ID_SIZEFORMAT_SI_BINARY")))
+	}
+	else if (GetRCheck(XRCID("ID_SIZEFORMAT_SI_BINARY"))) {
 		return CSizeFormat::si1024;
-	else if (GetRCheck(XRCID("ID_SIZEFORMAT_SI_DECIMAL")))
+	}
+	else if (GetRCheck(XRCID("ID_SIZEFORMAT_SI_DECIMAL"))) {
 		return CSizeFormat::si1000;
+	}
 
 	return CSizeFormat::bytes;
 }
diff -Naupr a/src/interface/settings/optionspage_sizeformatting.h b/src/interface/settings/optionspage_sizeformatting.h
--- a/src/interface/settings/optionspage_sizeformatting.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_sizeformatting.h	2020-02-19 16:39:04.000000000 +0100
@@ -0,0 +1,28 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_SIZEFORMATTING_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_SIZEFORMATTING_HEADER
+
+#include "../sizeformatting.h"
+
+class COptionsPageSizeFormatting final : public COptionsPage
+{
+public:
+	virtual bool CreateControls(wxWindow* parent) override;
+
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+	void UpdateControls();
+	void UpdateExamples();
+
+	CSizeFormat::_format GetFormat() const;
+
+	DECLARE_EVENT_TABLE()
+	void OnRadio(wxCommandEvent& event);
+	void OnCheck(wxCommandEvent& event);
+	void OnSpin(wxSpinEvent& event);
+
+	wxString FormatSize(int64_t size);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_themes.cpp b/src/interface/settings/optionspage_themes.cpp
--- a/src/interface/settings/optionspage_themes.cpp	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/settings/optionspage_themes.cpp	2020-02-19 16:39:04.000000000 +0100
@@ -5,9 +5,11 @@
 #include "optionspage.h"
 #include "optionspage_themes.h"
 #include "../themeprovider.h"
+#include "wxext/spinctrlex.h"
 
 #include <wx/dcclient.h>
 #include <wx/scrolwin.h>
+#include <wx/statbox.h>
 
 #include "xrc_helper.h"
 
@@ -22,8 +24,8 @@ class CIconPreview final : public wxScro
 public:
 	CIconPreview() = default;
 
-	CIconPreview(wxWindow* pParent)
-		: wxScrolledWindow(pParent, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSTATIC_BORDER | wxVSCROLL)
+	CIconPreview(wxWindow* pParent, int id = -1)
+		: wxScrolledWindow(pParent, id, wxDefaultPosition, wxDefaultSize, wxVSCROLL)
 	{
 	}
 
@@ -115,44 +117,52 @@ protected:
 	wxSize m_iconSize;
 	bool m_sizeInitialized{};
 	int m_extra_padding{};
-
-	DECLARE_DYNAMIC_CLASS(CIconPreview)
 };
 
-IMPLEMENT_DYNAMIC_CLASS(CIconPreview, wxScrolledWindow)
-
 BEGIN_EVENT_TABLE(CIconPreview, wxScrolledWindow)
 EVT_PAINT(CIconPreview::OnPaint)
 END_EVENT_TABLE()
 
-bool COptionsPageThemes::CreatePage(COptions* pOptions, CSettingsDialog* pOwner, wxWindow* parent, wxSize& maxSize)
+bool COptionsPageThemes::CreateControls(wxWindow* parent)
 {
-	bool success = COptionsPage::CreatePage(pOptions, pOwner, parent, maxSize);
-	if (success) {
-		auto dummy = XRCCTRL(*this, "ID_SCALE", wxWindow);
-		auto sizer = dummy ? dummy->GetContainingSizer() : 0;
-		if (!sizer) {
-			return false;
-		}
+	auto const& lay = m_pOwner->layout();
 
-		wxWindow* sizerParent = dummy->GetParent();
-		sizer->Detach(dummy);
-		delete dummy;
+	Create(parent);
+	auto main = lay.createFlex(1);
+	main->AddGrowableCol(0);
+	main->AddGrowableRow(1);
+	SetSizer(main);
 
-		auto scale = new wxSpinCtrlDouble(sizerParent, XRCID("ID_SCALE"));
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Select Theme"), 2);
+		inner->Add(new wxStaticText(box, -1, _("&Theme:")), lay.valign);
+		inner->Add(new wxChoice(box, XRCID("ID_THEME")));
+		inner->Add(new wxStaticText(box, -1, _("Author:")), lay.valign);
+		inner->Add(new wxStaticText(box, XRCID("ID_AUTHOR"), wxString()), lay.valign);
+		inner->Add(new wxStaticText(box, -1, _("Email:")), lay.valign);
+		inner->Add(new wxStaticText(box, XRCID("ID_EMAIL"), wxString()), lay.valign);
+		inner->Add(new wxStaticText(box, -1, _("Scale factor:")), lay.valign);
+		auto scale = new wxSpinCtrlDoubleEx(box, XRCID("ID_SCALE"));
 		scale->SetRange(0.5, 4);
 		scale->SetIncrement(0.25);
 		scale->SetValue(1.25);
 		scale->SetDigits(2);
-		sizer->Add(scale, wxSizerFlags().Align(wxALIGN_CENTER_VERTICAL));
-		sizer->Layout();
-		GetSizer()->Layout();
-		GetSizer()->Fit(this);
-
+		scale->SetMaxLength(10);
 		scale->Connect(wxEVT_SPINCTRLDOUBLE, wxCommandEventHandler(COptionsPageThemes::OnThemeChange), 0, this);
+		inner->Add(scale, lay.valign);
+	}
+
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Preview"), 1);
+		inner->AddGrowableCol(0);
+		inner->AddGrowableRow(0);
+		inner->Add(new CIconPreview(box, XRCID("ID_PREVIEW")), 1, wxGROW);
 	}
 
-	return success;
+	GetSizer()->Layout();
+	GetSizer()->Fit(this);
+	
+	return true;
 }
 
 bool COptionsPageThemes::LoadPage()
diff -Naupr a/src/interface/settings/optionspage_themes.h b/src/interface/settings/optionspage_themes.h
--- a/src/interface/settings/optionspage_themes.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_themes.h	2020-02-19 16:39:04.000000000 +0100
@@ -0,0 +1,21 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_THEMES_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_THEMES_HEADER
+
+class COptionsPageThemes final : public COptionsPage
+{
+public:
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+	virtual bool CreateControls(wxWindow* parent) override;
+protected:
+	bool DisplayTheme(std::wstring const& theme);
+
+	virtual bool OnDisplayedFirstTime();
+
+	DECLARE_EVENT_TABLE()
+	void OnThemeChange(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_transfer.cpp b/src/interface/settings/optionspage_transfer.cpp
--- a/src/interface/settings/optionspage_transfer.cpp	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/settings/optionspage_transfer.cpp	2020-02-22 05:30:03.000000000 +0100
@@ -4,17 +4,108 @@
 #include "settingsdialog.h"
 #include "optionspage.h"
 #include "optionspage_transfer.h"
+#include "textctrlex.h"
+#include "wxext/spinctrlex.h"
 
-BEGIN_EVENT_TABLE(COptionsPageTransfer, COptionsPage)
-EVT_CHECKBOX(XRCID("ID_ENABLE_SPEEDLIMITS"), COptionsPageTransfer::OnToggleSpeedLimitEnable)
-END_EVENT_TABLE()
+#include <wx/statbox.h>
 
-void COptionsPageTransfer::OnToggleSpeedLimitEnable(wxCommandEvent&)
+bool COptionsPageTransfer::CreateControls(wxWindow* parent)
 {
-	bool enable_speedlimits = GetCheck(XRCID("ID_ENABLE_SPEEDLIMITS"));
-	XRCCTRL(*this, "ID_DOWNLOADLIMIT", wxTextCtrl)->Enable(enable_speedlimits);
-	XRCCTRL(*this, "ID_UPLOADLIMIT", wxTextCtrl)->Enable(enable_speedlimits);
-	XRCCTRL(*this, "ID_BURSTTOLERANCE", wxChoice)->Enable(enable_speedlimits);
+	auto const& lay = m_pOwner->layout();
+
+	Create(parent);
+	auto main = lay.createFlex(1);
+	main->AddGrowableCol(0);
+	SetSizer(main);
+
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Concurrent transfers"), 3);
+		inner->Add(new wxStaticText(box, -1, _("Maximum simultaneous &transfers:")), lay.valign);
+		auto spin = new wxSpinCtrlEx(box, XRCID("ID_NUMTRANSFERS"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
+		spin->SetRange(1, 10);
+		spin->SetMaxLength(2);
+		inner->Add(spin, lay.valign);
+		inner->Add(new wxStaticText(box, -1, _("(1-10)")), lay.valign);
+		inner->Add(new wxStaticText(box, -1, _("Limit for concurrent &downloads:")), lay.valign);
+		spin = new wxSpinCtrlEx(box, XRCID("ID_NUMDOWNLOADS"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
+		spin->SetRange(1, 10);
+		spin->SetMaxLength(2);
+		inner->Add(spin, lay.valign);
+		inner->Add(new wxStaticText(box, -1, _("(0 for no limit)")), lay.valign);
+		inner->Add(new wxStaticText(box, -1, _("Limit for concurrent &uploads:")), lay.valign);
+		spin = new wxSpinCtrlEx(box, XRCID("ID_NUMUPLOADS"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
+		spin->SetRange(1, 10);
+		spin->SetMaxLength(2);
+		inner->Add(spin, lay.valign);
+		inner->Add(new wxStaticText(box, -1, _("(0 for no limit)")), lay.valign);
+	}
+
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Speed limits"), 1);
+
+		auto enable = new wxCheckBox(box, XRCID("ID_ENABLE_SPEEDLIMITS"), _("&Enable speed limits"));
+		inner->Add(enable);
+
+		auto innermost = lay.createFlex(2);
+		inner->Add(innermost);
+		innermost->Add(new wxStaticText(box, -1, _("Download &limit:")), lay.valign);
+		auto row = lay.createFlex(2);
+		innermost->Add(row, lay.valign);
+		auto dllimit = new wxTextCtrlEx(box, XRCID("ID_DOWNLOADLIMIT"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(40), -1));
+		dllimit->SetMaxLength(9);
+		row->Add(dllimit, lay.valign);
+		row->Add(new wxStaticText(box, -1, wxString::Format(_("(in %s/s)"), CSizeFormat::GetUnitWithBase(CSizeFormat::kilo, 1024))), lay.valign);
+
+		innermost->Add(new wxStaticText(box, -1, _("Upload &limit:")), lay.valign);
+		row = lay.createFlex(2);
+		innermost->Add(row, lay.valign);
+		auto ullimit = new wxTextCtrlEx(box, XRCID("ID_UPLOADLIMIT"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(40), -1));
+		ullimit->SetMaxLength(9);
+		row->Add(ullimit, lay.valign);
+		row->Add(new wxStaticText(box, -1, wxString::Format(_("(in %s/s)"), CSizeFormat::GetUnitWithBase(CSizeFormat::kilo, 1024))), lay.valign);
+
+		innermost->Add(new wxStaticText(box, -1, _("&Burst tolerance:")), lay.valign);
+		auto choice = new wxChoice(box, XRCID("ID_BURSTTOLERANCE"));
+		choice->AppendString(_("Normal"));
+		choice->AppendString(_("High"));
+		choice->AppendString(_("Very high"));
+		innermost->Add(choice, lay.valign);
+
+		enable->Bind(wxEVT_CHECKBOX, [dllimit, ullimit, choice](wxCommandEvent const& ev) {
+			dllimit->Enable(ev.IsChecked());
+			ullimit->Enable(ev.IsChecked());
+			choice->Enable(ev.IsChecked());
+		});
+	}
+	
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Filter invalid characters in filenames"), 1);
+		inner->Add(new wxCheckBox(box, XRCID("ID_ENABLE_REPLACE"), _("Enable invalid character &filtering")));
+		inner->Add(new wxStaticText(box, -1, _("When enabled, characters that are not supported by the local operating system in filenames are replaced if downloading such a file.")));
+		auto innermost = lay.createFlex(2);
+		inner->Add(innermost);
+		innermost->Add(new wxStaticText(box, -1, _("&Replace invalid characters with:")), lay.valign);
+		auto replace = new wxTextCtrlEx(box, XRCID("ID_REPLACE"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(10), -1));
+		replace->SetMaxLength(1);
+		innermost->Add(replace, lay.valign);
+#ifdef __WXMSW__
+		wxString invalid = _T("\\ / : * ? \" < > |");
+		wxString filtered = wxString::Format(_("The following characters will be replaced: %s"), invalid);
+#else
+		wxString invalid = _T("/");
+		wxString filtered = wxString::Format(_("The following character will be replaced: %s"), invalid);
+#endif
+		inner->Add(new wxStaticText(box, -1, filtered));
+	}
+
+	{
+		auto [box, inner] = lay.createStatBox(main, _("Preallocation"), 1);
+		inner->Add(new wxCheckBox(box, XRCID("ID_PREALLOCATE"), _("Pre&allocate space before downloading")));
+	}
+
+	GetSizer()->Fit(this);
+
+	return true;
 }
 
 bool COptionsPageTransfer::LoadPage()
@@ -25,16 +116,16 @@ bool COptionsPageTransfer::LoadPage()
 	SetCheck(XRCID("ID_ENABLE_SPEEDLIMITS"), enable_speedlimits, failure);
 
 	wxTextCtrl* pTextCtrl = XRCCTRL(*this, "ID_DOWNLOADLIMIT", wxTextCtrl);
-	if (!pTextCtrl)
+	if (!pTextCtrl) {
 		return false;
-	pTextCtrl->SetMaxLength(9);
+	}
 	pTextCtrl->ChangeValue(m_pOptions->GetOption(OPTION_SPEEDLIMIT_INBOUND));
 	pTextCtrl->Enable(enable_speedlimits);
 
 	pTextCtrl = XRCCTRL(*this, "ID_UPLOADLIMIT", wxTextCtrl);
-	if (!pTextCtrl)
+	if (!pTextCtrl) {
 		return false;
-	pTextCtrl->SetMaxLength(9);
+	}
 	pTextCtrl->ChangeValue(m_pOptions->GetOption(OPTION_SPEEDLIMIT_OUTBOUND));
 	pTextCtrl->Enable(enable_speedlimits);
 
@@ -45,32 +136,12 @@ bool COptionsPageTransfer::LoadPage()
 	SetChoice(XRCID("ID_BURSTTOLERANCE"), m_pOptions->GetOptionVal(OPTION_SPEEDLIMIT_BURSTTOLERANCE), failure);
 	XRCCTRL(*this, "ID_BURSTTOLERANCE", wxChoice)->Enable(enable_speedlimits);
 
-	wxStaticText* pUnit = XRCCTRL(*this, "ID_DOWNLOADLIMIT_UNIT", wxStaticText);
-	if (!pUnit)
-		return false;
-	pUnit->SetLabel(wxString::Format(pUnit->GetLabel(), CSizeFormat::GetUnitWithBase(CSizeFormat::kilo, 1024)));
-
-	pUnit = XRCCTRL(*this, "ID_UPLOADLIMIT_UNIT", wxStaticText);
-	if (!pUnit)
-		return false;
-	pUnit->SetLabel(wxString::Format(pUnit->GetLabel(), CSizeFormat::GetUnitWithBase(CSizeFormat::kilo, 1024)));
-
 	pTextCtrl = XRCCTRL(*this, "ID_REPLACE", wxTextCtrl);
-	pTextCtrl->SetMaxLength(1);
 	pTextCtrl->ChangeValue(m_pOptions->GetOption(OPTION_INVALID_CHAR_REPLACE));
 
 	SetCheckFromOption(XRCID("ID_ENABLE_REPLACE"), OPTION_INVALID_CHAR_REPLACE_ENABLE, failure);
 
-#ifdef __WXMSW__
-	wxString invalid = _T("\\ / : * ? \" < > |");
-	wxString filtered = wxString::Format(_("The following characters will be replaced: %s"), invalid);
-#else
-	wxString invalid = _T("/");
-	wxString filtered = wxString::Format(_("The following character will be replaced: %s"), invalid);
-#endif
-	XRCCTRL(*this, "ID_REPLACED", wxStaticText)->SetLabel(filtered);
-
-	SetCheckFromOption(XRCID("ID_ENABLE_PREALLOCATION"), OPTION_PREALLOCATE_SPACE, failure);
+	SetCheckFromOption(XRCID("ID_PREALLOCATE"), OPTION_PREALLOCATE_SPACE, failure);
 
 	return !failure;
 }
@@ -89,7 +160,7 @@ bool COptionsPageTransfer::SavePage()
 	SetOptionFromText(XRCID("ID_REPLACE"), OPTION_INVALID_CHAR_REPLACE);
 	SetOptionFromCheck(XRCID("ID_ENABLE_REPLACE"), OPTION_INVALID_CHAR_REPLACE_ENABLE);
 
-	SetOptionFromCheck(XRCID("ID_ENABLE_PREALLOCATION"), OPTION_PREALLOCATE_SPACE);
+	SetOptionFromCheck(XRCID("ID_PREALLOCATE"), OPTION_PREALLOCATE_SPACE);
 
 	return true;
 }
@@ -103,29 +174,30 @@ bool COptionsPageTransfer::Validate()
 
 	pSpinCtrl = XRCCTRL(*this, "ID_NUMTRANSFERS", wxSpinCtrl);
 	spinValue = pSpinCtrl->GetValue();
-	if (spinValue < 1 || spinValue > 10)
+	if (spinValue < 1 || spinValue > 10) {
 		return DisplayError(pSpinCtrl, _("Please enter a number between 1 and 10 for the number of concurrent transfers."));
+	}
 
 	pSpinCtrl = XRCCTRL(*this, "ID_NUMDOWNLOADS", wxSpinCtrl);
 	spinValue = pSpinCtrl->GetValue();
-	if (spinValue < 0 || spinValue > 10)
+	if (spinValue < 0 || spinValue > 10) {
 		return DisplayError(pSpinCtrl, _("Please enter a number between 0 and 10 for the number of concurrent downloads."));
+	}
 
 	pSpinCtrl = XRCCTRL(*this, "ID_NUMUPLOADS", wxSpinCtrl);
 	spinValue = pSpinCtrl->GetValue();
-	if (spinValue < 0 || spinValue > 10)
+	if (spinValue < 0 || spinValue > 10) {
 		return DisplayError(pSpinCtrl, _("Please enter a number between 0 and 10 for the number of concurrent uploads."));
+	}
 
 	pCtrl = XRCCTRL(*this, "ID_DOWNLOADLIMIT", wxTextCtrl);
-	if (!pCtrl->GetValue().ToLong(&tmp) || (tmp < 0))
-	{
+	if (!pCtrl->GetValue().ToLong(&tmp) || (tmp < 0)) {
 		const wxString unit = CSizeFormat::GetUnitWithBase(CSizeFormat::kilo, 1024);
 		return DisplayError(pCtrl, wxString::Format(_("Please enter a download speed limit greater or equal to 0 %s/s."), unit));
 	}
 
 	pCtrl = XRCCTRL(*this, "ID_UPLOADLIMIT", wxTextCtrl);
-	if (!pCtrl->GetValue().ToLong(&tmp) || (tmp < 0))
-	{
+	if (!pCtrl->GetValue().ToLong(&tmp) || (tmp < 0)) {
 		const wxString unit = CSizeFormat::GetUnitWithBase(CSizeFormat::kilo, 1024);
 		return DisplayError(pCtrl, wxString::Format(_("Please enter an upload speed limit greater or equal to 0 %s/s."), unit));
 	}
diff -Naupr a/src/interface/settings/optionspage_transfer.h b/src/interface/settings/optionspage_transfer.h
--- a/src/interface/settings/optionspage_transfer.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_transfer.h	2020-02-19 16:39:04.000000000 +0100
@@ -0,0 +1,15 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_TRANSFER_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_TRANSFER_HEADER
+
+class COptionsPageTransfer final : public COptionsPage
+{
+public:
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+	virtual bool CreateControls(wxWindow* parent) override;
+};
+
+#endif
diff -Naupr a/src/interface/settings/optionspage_updatecheck.h b/src/interface/settings/optionspage_updatecheck.h
--- a/src/interface/settings/optionspage_updatecheck.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/optionspage_updatecheck.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,22 @@
+#ifndef FILEZILLA_INTERFACE_OPTIONSPAGE_UPDATECHECK_HEADER
+#define FILEZILLA_INTERFACE_OPTIONSPAGE_UPDATECHECK_HEADER
+
+#if FZ_MANUALUPDATECHECK && FZ_AUTOUPDATECHECK
+
+class COptionsPageUpdateCheck final : public COptionsPage
+{
+public:
+	virtual wxString GetResourceName() const override { return _T("ID_SETTINGS_UPDATECHECK"); }
+	virtual bool LoadPage() override;
+	virtual bool SavePage() override;
+	virtual bool Validate() override;
+
+protected:
+	void OnRunUpdateCheck(wxCommandEvent&);
+
+	DECLARE_EVENT_TABLE()
+};
+
+#endif
+
+#endif
diff -Naupr a/src/interface/settings/settingsdialog.cpp b/src/interface/settings/settingsdialog.cpp
--- a/src/interface/settings/settingsdialog.cpp	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/settings/settingsdialog.cpp	2020-02-19 16:39:04.000000000 +0100
@@ -193,7 +193,10 @@ bool CSettingsDialog::LoadPages()
 	// Keep track of maximum page size
 	size = wxSize(0, 0);
 	for (auto const& page : m_pages) {
-		size.IncTo(page.page->GetSizer()->GetMinSize());
+		auto sizer = page.page->GetSizer();
+		if (sizer) {
+			size.IncTo(sizer->GetMinSize());
+		}
 	}
 
 	wxSize panelSize = size;
@@ -204,9 +207,12 @@ bool CSettingsDialog::LoadPages()
 
 	// Adjust pages sizes according to maximum size
 	for (auto const& page : m_pages) {
-		page.page->GetSizer()->SetMinSize(size);
-		page.page->GetSizer()->Fit(page.page);
-		page.page->GetSizer()->SetSizeHints(page.page);
+		auto sizer = page.page->GetSizer();
+		if (sizer) {
+			sizer->SetMinSize(size);
+			sizer->Fit(page.page);
+			sizer->SetSizeHints(page.page);
+		}
 		if (GetLayoutDirection() == wxLayout_RightToLeft) {
 			page.page->Move(wxPoint(1, 0));
 		}
diff -Naupr a/src/interface/settings/settingsdialog.h b/src/interface/settings/settingsdialog.h
--- a/src/interface/settings/settingsdialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/settings/settingsdialog.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,56 @@
+#ifndef FILEZILLA_INTERFACE_SETTINGS_SETTINGSDIALOG_HEADER
+#define FILEZILLA_INTERFACE_SETTINGS_SETTINGSDIALOG_HEADER
+
+#include "../dialogex.h"
+
+class COptions;
+class COptionsPage;
+class CMainFrame;
+class wxTreeCtrlEx;
+class CSettingsDialog final : public wxDialogEx
+{
+public:
+	CSettingsDialog(CFileZillaEngineContext & engine_context);
+	virtual ~CSettingsDialog();
+
+	bool Create(CMainFrame* pMainFrame);
+	bool LoadSettings();
+
+	CMainFrame* m_pMainFrame{};
+
+	CFileZillaEngineContext& GetEngineContext() { return m_engine_context; }
+
+	void RememberOldValue(int option);
+
+protected:
+	bool LoadPages();
+
+	COptions* m_pOptions;
+
+	wxPanel* pagePanel_{};
+
+	COptionsPage* m_activePanel{};
+
+	wxTreeCtrlEx* tree_{};
+
+	void AddPage(wxString const& name, COptionsPage* page, int nest);
+
+	struct t_page
+	{
+		wxTreeItemId id;
+		COptionsPage* page{};
+	};
+	std::vector<t_page> m_pages;
+
+	std::map<int, std::wstring> m_oldValues;
+
+	DECLARE_EVENT_TABLE()
+	void OnPageChanging(wxTreeEvent& event);
+	void OnPageChanged(wxTreeEvent& event);
+	void OnOK(wxCommandEvent& event);
+	void OnCancel(wxCommandEvent& event);
+
+	CFileZillaEngineContext& m_engine_context;
+};
+
+#endif
diff -Naupr a/src/interface/sftp_crypt_info_dlg.h b/src/interface/sftp_crypt_info_dlg.h
--- a/src/interface/sftp_crypt_info_dlg.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/sftp_crypt_info_dlg.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,14 @@
+#ifndef FILEZILLA_INTERFACE_SFTP_CRYPT_INFO_DLG_HEADER
+#define FILEZILLA_INTERFACE_SFTP_CRYPT_INFO_DLG_HEADER
+
+class wxDialogEx;
+class CSftpEncryptioInfoDialog
+{
+public:
+	void ShowDialog(CSftpEncryptionNotification* pNotification);
+
+protected:
+	void SetLabel(wxDialogEx& dlg, int id, const wxString& text);
+};
+
+#endif
diff -Naupr a/src/interface/sitemanager.h b/src/interface/sitemanager.h
--- a/src/interface/sitemanager.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/sitemanager.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,77 @@
+#ifndef FILEZILLA_INTERFACE_SITEMANAGER_HEADER
+#define FILEZILLA_INTERFACE_SITEMANAGER_HEADER
+
+#include <wx/treectrl.h>
+
+#include "xmlfunctions.h"
+
+class CSiteManagerXmlHandler
+{
+public:
+	virtual ~CSiteManagerXmlHandler() {};
+
+	// Adds a folder and descents
+	virtual bool AddFolder(std::wstring const& name, bool expanded) = 0;
+	virtual bool AddSite(std::unique_ptr<Site> data) = 0;
+
+	// Go up a level
+	virtual bool LevelUp() { return true; } // *Ding*
+};
+
+class CLoginManager;
+class CSiteManagerXmlHandler;
+class CSiteManagerDialog;
+class CSiteManager
+{
+	friend class CSiteManagerDialog;
+public:
+	// This function also clears the Id map
+	static std::unique_ptr<wxMenu> GetSitesMenu();
+	static void ClearIdMap();
+	static std::unique_ptr<Site> GetSiteById(int id);
+
+	static std::pair<std::unique_ptr<Site>, Bookmark> GetSiteByPath(std::wstring const& sitePath, bool printErrors = true);
+
+	static std::wstring AddServer(Site site);
+	static bool AddBookmark(std::wstring sitePath, wxString const& name, wxString const& local_dir, CServerPath const& remote_dir, bool sync, bool comparison);
+	static bool ClearBookmarks(std::wstring sitePath);
+
+	static void Rewrite(CLoginManager & loginManager, bool on_failure_set_to_ask);
+
+	static bool UnescapeSitePath(std::wstring path, std::vector<std::wstring>& result);
+	static std::wstring EscapeSegment(std::wstring segment);
+
+	static bool HasSites();
+
+	static bool ReadBookmarkElement(Bookmark & bookmark, pugi::xml_node element);
+
+	static wxColour GetColourFromIndex(int i);
+	static int GetColourIndex(wxColour const& c);
+	static wxString GetColourName(int i);
+
+	static bool ImportSites(pugi::xml_node sites);
+
+protected:
+	static bool ImportSites(pugi::xml_node sitesToImport, pugi::xml_node existingSites);
+
+	static void Rewrite(CLoginManager & loginManager, pugi::xml_node element, bool on_failure_set_to_ask);
+	static void Save(pugi::xml_node element, Site const& site);
+
+	static std::pair<std::unique_ptr<Site>, Bookmark> DoGetSiteByPath(std::wstring sitePath, wxString& error);
+
+	static bool Load(CSiteManagerXmlHandler& pHandler);
+	static bool Load(pugi::xml_node element, CSiteManagerXmlHandler& pHandler);
+	static std::unique_ptr<Site> ReadServerElement(pugi::xml_node element);
+
+	static pugi::xml_node GetElementByPath(pugi::xml_node node, std::vector<std::wstring> const& segments);
+	static std::wstring BuildPath(wxChar root, std::vector<std::wstring> const& segments);
+
+	static std::map<int, std::unique_ptr<Site>> m_idMap;
+
+	// The map maps event id's to sites
+	static std::unique_ptr<wxMenu> GetSitesMenu_Predefined(std::map<int, std::unique_ptr<Site>> &idMap);
+
+	static bool LoadPredefined(CSiteManagerXmlHandler& handler);
+};
+
+#endif
diff -Naupr a/src/interface/sitemanager_controls.cpp b/src/interface/sitemanager_controls.cpp
--- a/src/interface/sitemanager_controls.cpp	2020-02-15 05:30:03.000000000 +0100
+++ b/src/interface/sitemanager_controls.cpp	2020-02-18 17:28:51.000000000 +0100
@@ -10,6 +10,7 @@
 #endif
 #include "textctrlex.h"
 #include "xrc_helper.h"
+#include "wxext/spinctrlex.h"
 
 #include <s3sse.h>
 
@@ -17,7 +18,6 @@
 
 #include <wx/gbsizer.h>
 #include <wx/hyperlink.h>
-#include <wx/spinctrl.h>
 #include <wx/statline.h>
 
 #include <array>
@@ -950,12 +950,14 @@ AdvancedSiteControls::AdvancedSiteContro
 	sizer.Add(new wxStaticText(&parent, -1, _("&Adjust server time, offset by:")));
 	row = lay.createFlex(0, 1);
 	sizer.Add(row);
-	auto* hours = new wxSpinCtrl(&parent, XRCID("ID_TIMEZONE_HOURS"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
+	auto* hours = new wxSpinCtrlEx(&parent, XRCID("ID_TIMEZONE_HOURS"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
 	hours->SetRange(-24, 24);
+	hours->SetMaxLength(3);
 	row->Add(hours, lay.valign);
 	row->Add(new wxStaticText(&parent, -1, _("Hours,")), lay.valign);
-	auto* minutes = new wxSpinCtrl(&parent, XRCID("ID_TIMEZONE_MINUTES"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
+	auto* minutes = new wxSpinCtrlEx(&parent, XRCID("ID_TIMEZONE_MINUTES"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
 	minutes->SetRange(-59, 59);
+	minutes->SetMaxLength(3);
 	row->Add(minutes, lay.valign);
 	row->Add(new wxStaticText(&parent, -1, _("Minutes")), lay.valign);
 }
@@ -1168,7 +1170,8 @@ TransferSettingsSiteControls::TransferSe
 	row = lay.createFlex(0, 1);
 	sizer.Add(row, 0, wxLEFT, lay.dlgUnits(10));
 	row->Add(new wxStaticText(&parent, -1, _("&Maximum number of connections:")), lay.valign);
-	auto * spin = new wxSpinCtrl(&parent, XRCID("ID_MAXMULTIPLE"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
+	auto * spin = new wxSpinCtrlEx(&parent, XRCID("ID_MAXMULTIPLE"), wxString(), wxDefaultPosition, wxSize(lay.dlgUnits(26), -1));
+	spin->SetMaxLength(2);
 	spin->SetRange(1, 10);
 	row->Add(spin, lay.valign);
 
diff -Naupr a/src/interface/sitemanager_controls.h b/src/interface/sitemanager_controls.h
--- a/src/interface/sitemanager_controls.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/sitemanager_controls.h	2020-02-15 05:30:03.000000000 +0100
@@ -0,0 +1,103 @@
+#ifndef FILEZILLA_INTERFACE_SITEMANAGER_CONTROLS_HEADER
+#define FILEZILLA_INTERFACE_SITEMANAGER_CONTROLS_HEADER
+
+#include "serverdata.h"
+
+struct DialogLayout;
+class Site;
+enum ServerProtocol;
+enum class LogonType;
+
+class SiteControls
+{
+public:
+	SiteControls(wxWindow & parent)
+	    : parent_(parent)
+	{}
+
+	virtual ~SiteControls() = default;
+	virtual void SetSite(Site const& site) = 0;
+
+	void SetPredefined(bool predefined) { predefined_ = predefined; }
+	virtual void SetControlVisibility(ServerProtocol /*protocol*/, LogonType /*type*/) {}
+
+	virtual bool UpdateSite(Site & site, bool silent) = 0;
+	virtual void SetControlState() {}
+
+	wxWindow & parent_;
+
+	bool predefined_{};
+	ServerProtocol protocol_{UNKNOWN};
+	LogonType logonType_{};
+};
+
+class GeneralSiteControls final : public SiteControls
+{
+public:
+	GeneralSiteControls(wxWindow & parent, DialogLayout const& lay, wxFlexGridSizer & sizer, std::function<void(ServerProtocol protocol, LogonType logon_type)> const& changeHandler = nullptr);
+
+	virtual void SetControlVisibility(ServerProtocol protocol, LogonType) override;
+	virtual void SetSite(Site const& site) override;
+	virtual void SetControlState() override;
+
+	virtual bool UpdateSite(Site & site, bool silent) override;
+
+private:
+	void SetProtocol(ServerProtocol protocol);
+	ServerProtocol GetProtocol() const;
+
+	void SetLogonType(LogonType t);
+	LogonType GetLogonType() const;
+
+	void UpdateHostFromDefaults(ServerProtocol const newProtocol);
+
+	std::map<ServerProtocol, int> mainProtocolListIndex_;
+	typedef std::tuple<std::string, wxStaticText*, wxTextCtrl*> Parameter;
+	std::vector<Parameter> extraParameters_[ParameterSection::section_count];
+
+	std::function<void(ServerProtocol protocol, LogonType logon_type)> const changeHandler_;
+};
+
+class AdvancedSiteControls final : public SiteControls
+{
+public:
+	AdvancedSiteControls(wxWindow & parent, DialogLayout const& lay, wxFlexGridSizer & sizer);
+
+	virtual void SetSite(Site const& site) override;
+	virtual void SetControlVisibility(ServerProtocol protocol, LogonType) override;
+	virtual bool UpdateSite(Site & site, bool silent) override;
+};
+
+class CharsetSiteControls final : public SiteControls
+{
+public:
+	CharsetSiteControls(wxWindow & parent, DialogLayout const& lay, wxFlexGridSizer & sizer);
+
+	virtual void SetSite(Site const& site) override;
+	virtual bool UpdateSite(Site & site, bool silent) override;
+};
+
+class TransferSettingsSiteControls final : public SiteControls
+{
+public:
+	TransferSettingsSiteControls(wxWindow & parent, DialogLayout const& lay, wxFlexGridSizer & sizer);
+
+	virtual void SetSite(Site const& site) override;
+	virtual void SetControlVisibility(ServerProtocol protocol, LogonType) override;
+	virtual bool UpdateSite(Site & site, bool silent) override;
+};
+
+
+class S3SiteControls final : public SiteControls
+{
+public:
+	S3SiteControls(wxWindow & parent, DialogLayout const& lay, wxFlexGridSizer & sizer);
+
+	virtual void SetSite(Site const& site) override;
+	virtual bool UpdateSite(Site & site, bool silent) override;
+
+private:
+	virtual void SetControlState() override;
+};
+
+#endif
diff -Naupr a/src/interface/sitemanager_dialog.h b/src/interface/sitemanager_dialog.h
--- a/src/interface/sitemanager_dialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/sitemanager_dialog.h	2020-01-30 13:04:32.000000000 +0100
@@ -0,0 +1,106 @@
+#ifndef FILEZILLA_INTERFACE_SITEMANAGER_DIALOG_HEADER
+#define FILEZILLA_INTERFACE_SITEMANAGER_DIALOG_HEADER
+
+#include "dialogex.h"
+#include "sitemanager.h"
+
+class CInterProcessMutex;
+class CWindowStateManager;
+class CSiteManagerDropTarget;
+class CSiteManagerSite;
+class wxTreeCtrlEx;
+
+class CSiteManagerDialog final : public wxDialogEx
+{
+	friend class CSiteManagerDropTarget;
+
+	DECLARE_EVENT_TABLE()
+
+public:
+	struct _connected_site
+	{
+		Site site;
+		std::wstring old_path;
+	};
+
+	/// Constructors
+	CSiteManagerDialog();
+	virtual ~CSiteManagerDialog();
+
+	// Creation. If pServer is set, it will cause a new item to be created.
+	bool Create(wxWindow* parent, std::vector<_connected_site> *connected_sites, Site const* site = 0);
+
+	bool GetServer(Site& data, Bookmark& bookmark);
+
+protected:
+
+	bool Verify();
+	bool UpdateItem();
+	bool UpdateBookmark(Bookmark &bookmark, Site const& site);
+	bool Load();
+	bool Save(pugi::xml_node element = pugi::xml_node(), wxTreeItemId treeId = wxTreeItemId());
+	bool SaveChild(pugi::xml_node element, wxTreeItemId child);
+	bool UpdateServer(Site & site, wxString const& name);
+	void SetCtrlState();
+	bool LoadDefaultSites();
+
+	bool IsPredefinedItem(wxTreeItemId item);
+
+	wxString FindFirstFreeName(const wxTreeItemId &parent, const wxString& name);
+
+	void AddNewSite(wxTreeItemId parent, Site const& site, bool connected = false);
+	void CopyAddServer(Site const& site);
+
+	void AddNewBookmark(wxTreeItemId parent);
+
+	void RememberLastSelected();
+
+	std::wstring GetSitePath(wxTreeItemId item, bool stripBookmark = true);
+
+	void MarkConnectedSites();
+	void MarkConnectedSite(int connected_site);
+
+	void OnOK(wxCommandEvent&);
+	void OnCancel(wxCommandEvent&);
+	void OnConnect(wxCommandEvent& event);
+	void OnNewSite(wxCommandEvent& event);
+	void OnNewFolder(wxCommandEvent& event);
+	void OnRename(wxCommandEvent& event);
+	void OnDelete(wxCommandEvent& event);
+	void OnBeginLabelEdit(wxTreeEvent& event);
+	void OnEndLabelEdit(wxTreeEvent& event);
+	void OnSelChanging(wxTreeEvent& event);
+	void OnSelChanged(wxTreeEvent& event);
+	void OnItemActivated(wxTreeEvent& event);
+	void OnBeginDrag(wxTreeEvent& event);
+	void OnChar(wxKeyEvent& event);
+	void OnCopySite(wxCommandEvent& event);
+	void OnContextMenu(wxTreeEvent& event);
+	void OnExportSelected(wxCommandEvent&);
+	void OnNewBookmark(wxCommandEvent&);
+	void OnBookmarkBrowse(wxCommandEvent&);
+	void OnSearch(wxCommandEvent&);
+
+	CInterProcessMutex* m_pSiteManagerMutex{};
+
+	wxTreeItemId m_predefinedSites;
+	wxTreeItemId m_ownSites;
+
+	std::vector<wxTreeItemId> draggedItems_;
+
+	wxTreeItemId MoveItems(wxTreeItemId source, wxTreeItemId target, bool copy, bool use_existing_name);
+
+	wxTreeCtrlEx* tree_{};
+protected:
+	CWindowStateManager* m_pWindowStateManager{};
+
+	CSiteManagerSite *m_pNotebook_Site{};
+	wxNotebook *m_pNotebook_Bookmark{};
+
+	std::vector<_connected_site> *m_connected_sites{};
+
+	bool m_is_deleting{};
+	bool lastEditVetoed_{};
+};
+
+#endif
diff -Naupr a/src/interface/sitemanager_site.h b/src/interface/sitemanager_site.h
--- a/src/interface/sitemanager_site.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/sitemanager_site.h	2020-01-30 13:04:32.000000000 +0100
@@ -0,0 +1,38 @@
+#ifndef FILEZILLA_INTERFACE_SITEMANAGER_SITE_HEADER
+#define FILEZILLA_INTERFACE_SITEMANAGER_SITE_HEADER
+
+#include <wx/notebook.h>
+
+class Site;
+class CSiteManagerDialog;
+class SiteControls;
+class GeneralSiteControls; //remove
+class CSiteManagerSite : public wxNotebook
+{
+public:
+	CSiteManagerSite(CSiteManagerDialog & sitemanager);
+
+	bool Load(wxWindow * parent);
+
+	bool UpdateSite(Site &site, bool silent);
+	void SetSite(Site const& site, bool predefined);
+
+private:
+	void SetControlVisibility(ServerProtocol protocol, LogonType type);
+
+	CSiteManagerDialog & sitemanager_;
+
+	wxNotebookPage *generalPage_{};
+	wxNotebookPage *advancedPage_{};
+	wxNotebookPage *charsetPage_{};
+	wxNotebookPage *transferPage_{};
+	wxNotebookPage *s3Page_{};
+
+	std::vector<std::unique_ptr<SiteControls>> controls_;
+	wxString m_charsetPageText;
+	size_t m_totalPages = -1;
+
+	bool predefined_{};
+};
+
+#endif
diff -Naupr a/src/interface/sizeformatting.h b/src/interface/sizeformatting.h
--- a/src/interface/sizeformatting.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/sizeformatting.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,19 @@
+#ifndef FILEZILLA_INTERFACE_SIZEFORMATTING_HEADER
+#define FILEZILLA_INTERFACE_SIZEFORMATTING_HEADER
+
+#include <sizeformatting_base.h>
+
+class CSizeFormat final : public CSizeFormatBase
+{
+public:
+	static std::wstring FormatNumber(int64_t size, bool* thousands_separator = 0);
+
+	static std::wstring GetUnitWithBase(_unit unit, int base);
+	static std::wstring GetUnit(_unit unit, _format = formats_count);
+	static std::wstring FormatUnit(int64_t size, _unit unit, int base = 1024);
+
+	static std::wstring Format(int64_t size, bool add_bytes_suffix, _format format, bool thousands_separator, int num_decimal_places);
+	static std::wstring Format(int64_t size, bool add_bytes_suffix = false);
+};
+
+#endif
diff -Naupr a/src/interface/speedlimits_dialog.h b/src/interface/speedlimits_dialog.h
--- a/src/interface/speedlimits_dialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/speedlimits_dialog.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,20 @@
+#ifndef FILEZILLA_INTERFACE_SPEEDLIMITS_DIALOG_HEADER
+#define FILEZILLA_INTERFACE_SPEEDLIMITS_DIALOG_HEADER
+
+#include "dialogex.h"
+
+class CSpeedLimitsDialog final : public wxDialogEx
+{
+public:
+	CSpeedLimitsDialog() {}
+	virtual ~CSpeedLimitsDialog() {}
+
+	void Run(wxWindow* parent);
+
+protected:
+	DECLARE_EVENT_TABLE()
+	void OnToggleEnable(wxCommandEvent& event);
+	void OnOK(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/splitter.h b/src/interface/splitter.h
--- a/src/interface/splitter.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/splitter.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,46 @@
+#ifndef FILEZILLA_INTERFACE_SPLITTER_HEADER
+#define FILEZILLA_INTERFACE_SPLITTER_HEADER
+
+class CSplitterWindowEx final : public wxSplitterWindow
+{
+public:
+	CSplitterWindowEx();
+	CSplitterWindowEx(wxWindow* parent, wxWindowID id, wxPoint const& point = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = wxSP_3D, wxString const& name = _T("splitterWindow"));
+
+	bool Create(wxWindow* parent, wxWindowID id, wxPoint const& point = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = wxSP_3D, wxString const& name = _T("splitterWindow"));
+
+	void SetSashGravity(double gravity);
+
+	// If pane size goes below paneSize_soft, make sure both panes are equally large
+	void SetMinimumPaneSize(int paneSize, int paneSize_soft = -1);
+
+	int GetSashPosition() const;
+	void SetSashPosition(int sash_position);
+	void SetRelativeSashPosition(double relative_sash_position);
+	double GetRelativeSashPosition() const { return m_relative_sash_position; }
+
+	void Initialize(wxWindow *window);
+
+	bool SplitHorizontally(wxWindow* window1, wxWindow* window2, int sashPosition = 0);
+	bool SplitVertically(wxWindow* window1, wxWindow* window2, int sashPosition = 0);
+
+	bool Unsplit(wxWindow* toRemove = NULL);
+
+protected:
+	void PrepareSplit(wxWindow* window1, wxWindow* window2, int & sashPosition, bool horizontal);
+
+	virtual int OnSashPositionChanging(int newSashPosition);
+
+	int CalcSoftLimit(int newSashPosition);
+
+	DECLARE_EVENT_TABLE()
+	void OnSize(wxSizeEvent& event);
+
+	double m_relative_sash_position{0.5};
+
+	int m_soft_min_pane_size{-1};
+
+	int m_lastSashPosition{-1};
+};
+
+#endif
diff -Naupr a/src/interface/state.h b/src/interface/state.h
--- a/src/interface/state.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/state.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,300 @@
+#ifndef FILEZILLA_INTERFACE_STATE_HEADER
+#define FILEZILLA_INTERFACE_STATE_HEADER
+
+#include "local_path.h"
+#include "sitemanager.h"
+#include "sitemanager_dialog.h"
+#include "filter.h"
+
+#include <memory>
+
+enum t_statechange_notifications
+{
+	STATECHANGE_NONE, // Used to unregister all notifications
+
+	STATECHANGE_REMOTE_DIR,
+	STATECHANGE_REMOTE_DIR_OTHER,
+	STATECHANGE_REMOTE_RECV,
+	STATECHANGE_REMOTE_SEND,
+	STATECHANGE_REMOTE_LINKNOTDIR,
+	STATECHANGE_LOCAL_DIR,
+
+	// data contains name (excluding path) of file to refresh
+	STATECHANGE_LOCAL_REFRESH_FILE,
+
+	STATECHANGE_APPLYFILTER,
+
+	STATECHANGE_REMOTE_IDLE,
+	STATECHANGE_SERVER,
+	STATECHANGE_ENCRYPTION,
+
+	STATECHANGE_SYNC_BROWSE,
+	STATECHANGE_COMPARISON,
+
+	STATECHANGE_REMOTE_RECURSION_STATUS,
+	STATECHANGE_LOCAL_RECURSION_STATUS,
+
+	STATECHANGE_LOCAL_RECURSION_LISTING,
+
+	/* Global notifications */
+	STATECHANGE_QUEUEPROCESSING,
+	STATECHANGE_NEWCONTEXT, /* New context created */
+	STATECHANGE_CHANGEDCONTEXT, /* Currently active context changed */
+	STATECHANGE_REMOVECONTEXT, /* Right before deleting a context */
+	STATECHANGE_GLOBALBOOKMARKS,
+	STATECHANGE_REWRITE_CREDENTIALS,
+
+	STATECHANGE_QUITNOW,
+
+	STATECHANGE_MAX
+};
+
+class CDirectoryListing;
+class CFileZillaEngine;
+class CCommandQueue;
+class CLocalDataObject;
+class CLocalRecursiveOperation;
+class CMainFrame;
+class CGlobalStateEventHandler;
+class CStateEventHandler;
+class CRemoteDataObject;
+class CRemoteRecursiveOperation;
+class CComparisonManager;
+
+class CStateFilterManager final : public CFilterManager
+{
+public:
+	virtual bool FilenameFiltered(std::wstring const& name, std::wstring const& path, bool dir, int64_t size, bool local, int attributes, fz::datetime const& date) const override;
+
+	CFilter const& GetLocalFilter() const { return m_localFilter; }
+	void SetLocalFilter(CFilter const& filter) { m_localFilter = filter; }
+
+	CFilter const& GetRemoteFilter() const { return m_remoteFilter; }
+	void SetRemoteFilter(CFilter const& filter) { m_remoteFilter = filter; }
+
+private:
+	CFilter m_localFilter;
+	CFilter m_remoteFilter;
+};
+
+class CState;
+class CContextManager final
+{
+	friend class CState;
+public:
+	// If current_only is set, only notifications from the current (at the time
+	// of notification emission) context is dispatched to the handler.
+	void RegisterHandler(CGlobalStateEventHandler* pHandler, t_statechange_notifications notification, bool current_only);
+	void UnregisterHandler(CGlobalStateEventHandler* pHandler, t_statechange_notifications notification);
+
+	size_t HandlerCount(t_statechange_notifications notification) const;
+
+	CState* CreateState(CMainFrame &mainFrame);
+	void DestroyState(CState* pState);
+	void DestroyAllStates();
+
+	CState* GetCurrentContext();
+	const std::vector<CState*>* GetAllStates() { return &m_contexts; }
+
+	static CContextManager* Get();
+
+	void NotifyAllHandlers(t_statechange_notifications notification, std::wstring const& data = std::wstring(), void const* data2 = 0);
+	void NotifyGlobalHandlers(t_statechange_notifications notification, std::wstring const& data = std::wstring(), void const* data2 = 0);
+
+	void SetCurrentContext(CState* pState);
+
+	void ProcessDirectoryListing(CServer const& server, std::shared_ptr<CDirectoryListing> const& listing, CState const* exempt);
+	
+protected:
+	CContextManager();
+
+	std::vector<CState*> m_contexts;
+	int m_current_context;
+
+	struct t_handler
+	{
+		CGlobalStateEventHandler* pHandler;
+		bool current_only;
+	};
+	std::vector<t_handler> m_handlers[STATECHANGE_MAX];
+
+	void NotifyHandlers(CState* pState, t_statechange_notifications notification, std::wstring const& data, void const* data2);
+
+	static CContextManager m_the_context_manager;
+};
+
+class CState final
+{
+	friend class CCommandQueue;
+public:
+	CState(CMainFrame& mainFrame);
+	~CState();
+
+	CState(CState const&) = delete;
+	CState& operator=(CState const&) = delete;
+
+	bool CreateEngine();
+	void DestroyEngine();
+
+	CLocalPath GetLocalDir() const;
+	bool SetLocalDir(CLocalPath const& dir, std::wstring *error = 0, bool rememberPreviousSubdir = true);
+	bool SetLocalDir(std::wstring const& dir, std::wstring *error = 0, bool rememberPreviousSubdir = true);
+
+	bool Connect(Site const& site, CServerPath const& path = CServerPath(), bool compare = false);
+	bool Disconnect();
+
+	bool ChangeRemoteDir(CServerPath const& path, std::wstring const& subdir = std::wstring(), int flags = 0, bool ignore_busy = false, bool compare = false);
+	bool SetRemoteDir(std::shared_ptr<CDirectoryListing> const& pDirectoryListing, bool primary);
+	std::shared_ptr<CDirectoryListing> GetRemoteDir() const;
+	const CServerPath GetRemotePath() const;
+
+	Site const& GetSite() const;
+	wxString GetTitle() const;
+
+	void RefreshLocal();
+	void RefreshLocalFile(std::wstring const& file);
+	void LocalDirCreated(CLocalPath const& path);
+
+	bool RefreshRemote(bool clear_cache = false);
+
+	void RegisterHandler(CStateEventHandler* pHandler, t_statechange_notifications notification, CStateEventHandler* insertBefore = 0);
+	void UnregisterHandler(CStateEventHandler* pHandler, t_statechange_notifications notification);
+
+	CFileZillaEngine* m_pEngine{};
+	CCommandQueue* m_pCommandQueue{};
+	CComparisonManager* GetComparisonManager() { return m_pComparisonManager; }
+
+	void UploadDroppedFiles(CLocalDataObject const* pLocalDataObject, std::wstring const& subdir, bool queueOnly);
+	void UploadDroppedFiles(wxFileDataObject const* pFileDataObject, std::wstring const& subdir, bool queueOnly);
+	void UploadDroppedFiles(CLocalDataObject const* pLocalDataObject, CServerPath const& path, bool queueOnly);
+	void UploadDroppedFiles(wxFileDataObject const* pFileDataObject, CServerPath const& path, bool queueOnly);
+	void HandleDroppedFiles(CLocalDataObject const* pLocalDataObject, CLocalPath const& path, bool copy);
+	void HandleDroppedFiles(wxFileDataObject const* pFileDataObject, CLocalPath const& path, bool copy);
+	bool DownloadDroppedFiles(CRemoteDataObject const* pRemoteDataObject, CLocalPath const& path, bool queueOnly = false);
+
+	static bool RecursiveCopy(CLocalPath source, CLocalPath const& targte);
+
+	bool IsRemoteConnected() const;
+	bool IsRemoteIdle(bool ignore_recursive = false) const;
+	bool IsLocalIdle(bool ignore_recursive = false) const;
+
+	CLocalRecursiveOperation* GetLocalRecursiveOperation() { return m_pLocalRecursiveOperation; }
+	CRemoteRecursiveOperation* GetRemoteRecursiveOperation() { return m_pRemoteRecursiveOperation; }
+
+	void NotifyHandlers(t_statechange_notifications notification, std::wstring const& data = std::wstring(), void const* data2 = 0);
+
+	bool SuccessfulConnect() const { return m_successful_connect; }
+	void SetSuccessfulConnect() { m_successful_connect = true; }
+
+	void ListingFailed(int error);
+	void LinkIsNotDir(CServerPath const& path, std::wstring const& subdir);
+
+	bool SetSyncBrowse(bool enable, CServerPath const& assumed_remote_root = CServerPath());
+	bool GetSyncBrowse() const { return !m_sync_browse.local_root.empty(); }
+
+	Site const& GetLastSite() const { return m_last_site; }
+	CServerPath GetLastServerPath() const { return m_last_path; }
+	void SetLastSite(Site const& server, CServerPath const& path)
+		{ m_last_site = server; m_last_path = path; }
+
+	bool GetSecurityInfo(CCertificateNotification *& pInfo);
+	bool GetSecurityInfo(CSftpEncryptionNotification *& pInfo);
+	void SetSecurityInfo(CCertificateNotification const& info);
+	void SetSecurityInfo(CSftpEncryptionNotification const& info);
+
+	// If the previously selected directory was a direct child of the current directory, this
+	// returns the relative name of the subdirectory.
+	std::wstring GetPreviouslyVisitedLocalSubdir() const { return m_previouslyVisitedLocalSubdir; }
+	std::wstring GetPreviouslyVisitedRemoteSubdir() const { return m_previouslyVisitedRemoteSubdir; }
+	void ClearPreviouslyVisitedLocalSubdir() { m_previouslyVisitedLocalSubdir.clear(); }
+	void ClearPreviouslyVisitedRemoteSubdir() { m_previouslyVisitedRemoteSubdir.clear(); }
+
+	void UpdateKnownSites(std::vector<CSiteManagerDialog::_connected_site> const& active_sites);
+	void UpdateSite(std::wstring const& oldPath, Site const& newSite);
+
+	CStateFilterManager& GetStateFilterManager() { return m_stateFilterManager; }
+
+	void ChangeServer(CServer const& newServer);
+
+	fz::thread_pool & pool_;
+
+protected:
+	void SetSite(Site const& site, CServerPath const& path = CServerPath());
+
+	void UpdateTitle();
+
+	CLocalPath m_localDir;
+	std::shared_ptr<CDirectoryListing> m_pDirectoryListing;
+
+	Site m_site;
+
+	wxString m_title;
+	bool m_successful_connect{};
+
+	Site m_last_site;
+	CServerPath m_last_path;
+
+	CMainFrame& m_mainFrame;
+
+	CLocalRecursiveOperation* m_pLocalRecursiveOperation;
+	CRemoteRecursiveOperation* m_pRemoteRecursiveOperation;
+
+	CComparisonManager* m_pComparisonManager;
+	
+	CStateFilterManager m_stateFilterManager;
+	
+	struct t_handlersForNotification
+	{
+		std::vector<CStateEventHandler*> handlers;
+		bool compact_{};
+		bool inNotify_{};
+	};
+
+	t_handlersForNotification m_handlers[STATECHANGE_MAX];
+
+	CLocalPath GetSynchronizedDirectory(CServerPath remote_path);
+	CServerPath GetSynchronizedDirectory(CLocalPath local_path);
+
+	struct _sync_browse
+	{
+		CLocalPath local_root;
+		CServerPath remote_root;
+
+		// The target path when changing remote directory
+		CServerPath target_path;
+	} m_sync_browse;
+
+	struct _post_setdir
+	{
+		bool compare{};
+		bool syncbrowse{};
+	} m_changeDirFlags;
+
+	std::unique_ptr<CCertificateNotification> m_pCertificate;
+	std::unique_ptr<CSftpEncryptionNotification> m_pSftpEncryptionInfo;
+
+	std::wstring m_previouslyVisitedLocalSubdir;
+	std::wstring m_previouslyVisitedRemoteSubdir;
+};
+
+class CGlobalStateEventHandler
+{
+public:
+	CGlobalStateEventHandler() = default;
+	virtual ~CGlobalStateEventHandler();
+
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const& data, const void* data2) = 0;
+};
+
+class CStateEventHandler
+{
+public:
+	CStateEventHandler(CState& state);
+	virtual ~CStateEventHandler();
+
+	CState& m_state;
+
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const& data, const void* data2) = 0;
+};
+
+#endif
diff -Naupr a/src/interface/statusbar.h b/src/interface/statusbar.h
--- a/src/interface/statusbar.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/statusbar.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,135 @@
+#ifndef FILEZILLA_INTERFACE_STATUSBAR_HEADER
+#define FILEZILLA_INTERFACE_STATUSBAR_HEADER
+
+#include <option_change_event_handler.h>
+#include "sizeformatting.h"
+#include "state.h"
+
+#include <wx/timer.h>
+
+enum widgets
+{
+	widget_led_send,
+	widget_led_recv,
+	widget_speedlimit,
+	widget_datatype,
+	widget_encryption,
+
+	WIDGET_COUNT
+};
+
+class wxStatusBarEx : public wxStatusBar
+{
+public:
+	wxStatusBarEx(wxTopLevelWindow* parent);
+	virtual ~wxStatusBarEx();
+
+	// We override these for two reasons:
+	// - wxWidgets does not provide a function to get the field widths back
+	// - fixup for last field. Under MSW it has a gripper if window is not
+	//   maximized, under GTK2 it always has a gripper. These grippers overlap
+	//   last field.
+	virtual void SetFieldsCount(int number = 1, const int* widths = NULL);
+	virtual void SetStatusWidths(int n, const int *widths);
+
+	virtual void SetFieldWidth(int field, int width);
+
+	int GetGripperWidth();
+
+#ifdef __WXGTK__
+	// Basically identical to the wx one, but not calling Update
+	virtual void SetStatusText(const wxString& text, int number = 0);
+#endif
+
+protected:
+	int GetFieldIndex(int field);
+
+	wxTopLevelWindow* m_pParent;
+#ifdef __WXMSW__
+	bool m_parentWasMaximized;
+#endif
+
+	void FixupFieldWidth(int field);
+
+	int* m_columnWidths;
+
+	DECLARE_EVENT_TABLE()
+	void OnSize(wxSizeEvent& event);
+};
+
+class CWidgetsStatusBar : public wxStatusBarEx
+{
+public:
+	CWidgetsStatusBar(wxTopLevelWindow* parent);
+	virtual ~CWidgetsStatusBar();
+
+	// Adds a child window that gets repositioned on window resize
+	// Positioned in the field given in the constructor,
+	// right aligned and in reverse order.
+	bool AddField(int field, int idx, wxWindow* pChild);
+
+	void RemoveField(int idx);
+
+	virtual void SetFieldWidth(int field, int width);
+protected:
+
+	struct t_statbar_child
+	{
+		int field;
+		wxWindow* pChild;
+	};
+
+	std::map<int, t_statbar_child> m_children;
+
+	void PositionChildren(int field);
+
+	DECLARE_EVENT_TABLE()
+	void OnSize(wxSizeEvent& event);
+};
+
+class CStatusBar final : public CWidgetsStatusBar, protected COptionChangeEventHandler, protected CGlobalStateEventHandler
+{
+public:
+	CStatusBar(wxTopLevelWindow* parent);
+	virtual ~CStatusBar();
+
+	void DisplayQueueSize(int64_t totalSize, bool hasUnknown);
+
+	void OnHandleLeftClick(wxWindow* wnd);
+	void OnHandleRightClick(wxWindow* wnd);
+
+protected:
+	void UpdateSizeFormat();
+	void DisplayDataType();
+	void DisplayEncrypted();
+	void UpdateSpeedLimitsIcon();
+
+	void MeasureQueueSizeWidth();
+
+	void ShowDataTypeMenu();
+
+	virtual void OnOptionsChanged(changed_options_t const& options) override;
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+
+	void DoDisplayQueueSize();
+
+	CSizeFormat::_format m_sizeFormat;
+	bool m_sizeFormatThousandsSep;
+	int m_sizeFormatDecimalPlaces;
+	int64_t m_size{};
+	bool m_hasUnknownFiles{};
+
+	wxStaticBitmap* m_pDataTypeIndicator{};
+	wxStaticBitmap* m_pEncryptionIndicator{};
+	wxStaticBitmap* m_pSpeedLimitsIndicator{};
+
+	wxTimer m_queue_size_timer;
+	bool m_queue_size_changed{};
+
+	DECLARE_EVENT_TABLE()
+	void OnSpeedLimitsEnable(wxCommandEvent& event);
+	void OnSpeedLimitsConfigure(wxCommandEvent& event);
+	void OnTimer(wxTimerEvent& ev);
+};
+
+#endif
diff -Naupr a/src/interface/statuslinectrl.h b/src/interface/statuslinectrl.h
--- a/src/interface/statuslinectrl.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/statuslinectrl.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,79 @@
+#ifndef FILEZILLA_INTERFACE_STATUSLINECTRL_HEADER
+#define FILEZILLA_INTERFACE_STATUSLINECTRL_HEADER
+
+class CQueueView;
+class CStatusLineCtrl final : public wxWindow
+{
+public:
+	CStatusLineCtrl(CQueueView* pParent, const t_EngineData* const pEngineData, const wxRect& initialPosition);
+	~CStatusLineCtrl();
+
+	const CFileItem* GetItem() const { return m_pEngineData->pItem; }
+
+	void SetEngineData(const t_EngineData* const pEngineData);
+
+	void SetTransferStatus(CTransferStatus const& status);
+	void ClearTransferStatus();
+
+	int64_t GetLastOffset() const { return status_.empty() ? m_lastOffset : status_.currentOffset; }
+	int64_t GetTotalSize() const { return status_.empty() ? -1 : status_.totalSize; }
+	wxFileOffset GetAverageSpeed(int elapsed_milli_seconds);
+	wxFileOffset GetMomentarySpeed();
+
+	virtual bool Show(bool show = true);
+
+protected:
+	void InitFieldOffsets();
+
+	void DrawRightAlignedText(wxDC& dc, wxString const& text, int x, int y);
+	void DrawProgressBar(wxDC& dc, int x, int y, int height, int bar_split, int permill);
+
+	CQueueView* m_pParent;
+	const t_EngineData* m_pEngineData;
+	CTransferStatus status_;
+
+	wxString m_statusText;
+	wxTimer m_transferStatusTimer;
+
+	static int m_fieldOffsets[4];
+	static int m_barWidth;
+	static wxCoord m_textHeight;
+	static bool m_initialized;
+
+	bool m_madeProgress;
+
+	int64_t m_lastOffset{-1}; // Stores the last transfer offset so that the total queue size can be accurately calculated.
+
+	// This is used by GetSpeed to forget about the first 10 seconds on longer transfers
+	// since at the very start the speed is hardly accurate (e.g. due to TCP slow start)
+	struct _past_data final
+	{
+		int elapsed{};
+		wxFileOffset offset{};
+	} m_past_data[10];
+	int m_past_data_count{};
+
+	//Used by GetMomentarySpeed
+	struct monentary_speed_data {
+		fz::monotonic_clock last_update;
+		wxFileOffset last_offset{-1};
+		wxFileOffset last_speed{-1};
+	} m_monentary_speed_data;
+
+	//Used to avoid excessive redraws
+	wxBitmap m_data;
+	std::unique_ptr<wxMemoryDC> m_mdc;
+	wxString m_previousStatusText;
+	int m_last_elapsed_seconds{};
+	int m_last_left{};
+	wxString m_last_bytes_and_rate;
+	int m_last_bar_split{-1};
+	int m_last_permill{-1};
+
+	DECLARE_EVENT_TABLE()
+	void OnPaint(wxPaintEvent& event);
+	void OnTimer(wxTimerEvent& event);
+	void OnEraseBackground(wxEraseEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/systemimagelist.h b/src/interface/systemimagelist.h
--- a/src/interface/systemimagelist.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/systemimagelist.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,58 @@
+#ifndef FILEZILLA_INTERFACE_SYSTEMIMAGELIST_HEADER
+#define FILEZILLA_INTERFACE_SYSTEMIMAGELIST_HEADER
+
+#ifdef __WXMSW__
+#include <shellapi.h>
+#include <commctrl.h>
+#endif
+
+enum class iconType
+{
+	file,
+	dir,
+	opened_dir
+};
+
+// Required wxImageList extension
+class wxImageListEx final : public wxImageList
+{
+public:
+	wxImageListEx();
+	wxImageListEx(int width, int height, const bool mask = true, int initialCount = 1);
+
+#ifdef __WXMSW__
+	wxImageListEx(WXHIMAGELIST hList) { m_hImageList = hList; }
+	HIMAGELIST GetHandle() const { return reinterpret_cast<HIMAGELIST>(m_hImageList); }
+	HIMAGELIST Detach();
+#endif
+};
+
+class CSystemImageList
+{
+public:
+	CSystemImageList(int size = -1);
+	virtual ~CSystemImageList();
+
+	CSystemImageList(CSystemImageList const&) = delete;
+	CSystemImageList& operator=(CSystemImageList const&) = delete;
+
+	bool CreateSystemImageList(int size);
+
+	wxImageList* GetSystemImageList() { return m_pImageList; }
+
+	int GetIconIndex(iconType type, std::wstring const& fileName = std::wstring(), bool physical = true, bool symlink = false);
+
+#ifdef __WXMSW__
+	int GetLinkOverlayIndex();
+#endif
+
+private:
+	wxImageListEx *m_pImageList{};
+
+#ifndef __WXMSW__
+	std::map<std::wstring, int> m_iconCache;
+	std::map<std::wstring, int> m_iconSymlinkCache;
+#endif
+};
+
+#endif
diff -Naupr a/src/interface/textctrlex.h b/src/interface/textctrlex.h
--- a/src/interface/textctrlex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/textctrlex.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,25 @@
+#ifndef FILEZILLA_INTERFACE_TEXTCTRLEX_HEADER
+#define FILEZILLA_INTERFACE_TEXTCTRLEX_HEADER
+
+#include <wx/textctrl.h>
+
+#ifdef __WXMAC__
+// Subclassed wxTextCtrl to disable pasting of formatting, we're only ever interested in the text.
+class wxTextCtrlEx : public wxTextCtrl
+{
+public:
+	wxTextCtrlEx() = default;
+	wxTextCtrlEx(wxWindow* parent, int id, wxString const& value = wxString(), wxPoint const& pos = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = 0);
+
+	virtual void Paste();
+};
+
+const wxTextAttr& GetDefaultTextCtrlStyle(wxTextCtrl* ctrl);
+
+#else
+
+#define wxTextCtrlEx wxTextCtrl
+
+#endif
+
+#endif
diff -Naupr a/src/interface/themeprovider.h b/src/interface/themeprovider.h
--- a/src/interface/themeprovider.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/themeprovider.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,100 @@
+#ifndef FILEZILLA_INTERFACE_THEMEPROVIDER_HEADER
+#define FILEZILLA_INTERFACE_THEMEPROVIDER_HEADER
+
+#include <option_change_event_handler.h>
+#include <memory>
+
+#include <libfilezilla/time.hpp>
+
+enum iconSize
+{
+	iconSizeTiny,
+	iconSizeSmall,
+	iconSize24,
+	iconSizeNormal,
+	iconSizeLarge,
+	iconSizeHuge
+};
+
+class CTheme final
+{
+public:
+	bool Load(std::wstring const& theme);
+	bool Load(std::wstring const& theme, std::vector<wxSize> sizes);
+
+	wxBitmap const& LoadBitmap(std::wstring const& name, wxSize const& size);
+	wxAnimation LoadAnimation(std::wstring const& name, wxSize const& size);
+
+	static wxSize StringToSize(std::wstring const&);
+
+	std::wstring get_theme() const { return theme_; }
+	std::wstring get_name() const { return name_; }
+	std::wstring get_author() const { return author_; }
+	std::wstring get_mail() const { return mail_; }
+
+	std::vector<wxBitmap> GetAllImages(wxSize const& size);
+private:
+	struct size_cmp final
+	{
+		bool operator()(wxSize const& a, wxSize const&b) const {
+			return a.x < b.x || (a.x == b.x && a.y < b.y);
+		}
+	};
+
+	struct cacheEntry
+	{
+		// Converting from wxImage to wxBitmap to wxImage is quite slow, so cache the images as well.
+		std::map<wxSize, wxBitmap, size_cmp> bitmaps_;
+		std::map<wxSize, wxImage, size_cmp> images_;
+	};
+
+	wxBitmap const& DoLoadBitmap(std::wstring const& name, wxSize const& size, cacheEntry & cache);
+
+	wxBitmap const& LoadBitmapWithSpecificSizeAndScale(std::wstring const& name, wxSize const& size, wxSize const& scale, cacheEntry & cache);
+
+	wxImage const& LoadImageWithSpecificSize(std::wstring const& file, wxSize const& size, cacheEntry & cache);
+
+	std::wstring theme_;
+	std::wstring path_;
+
+	std::wstring name_;
+	std::wstring author_;
+	std::wstring mail_;
+
+	fz::datetime timestamp_;
+
+	std::map<wxSize, bool, size_cmp> sizes_;
+
+	std::map<std::wstring, cacheEntry> cache_;
+};
+
+class CThemeProvider final : public wxArtProvider, protected COptionChangeEventHandler
+{
+public:
+	CThemeProvider();
+	virtual ~CThemeProvider();
+
+	static std::vector<std::wstring> GetThemes();
+	std::vector<wxBitmap> GetAllImages(std::wstring const& theme, wxSize const& size);
+	bool GetThemeData(std::wstring const& theme, std::wstring& name, std::wstring& author, std::wstring& email);
+	static wxIconBundle GetIconBundle(const wxArtID& id, const wxArtClient& client = wxART_OTHER);
+
+	static wxSize GetIconSize(iconSize size, bool userScaled = false);
+
+	// Note: Always 1 on OS X
+	static double GetUIScaleFactor();
+
+	static CThemeProvider* Get();
+
+	wxAnimation CreateAnimation(wxArtID const& id, wxSize const& size);
+
+	virtual wxBitmap CreateBitmap(wxArtID const& id, wxArtClient const& client, wxSize const& size);
+
+protected:
+
+	virtual void OnOptionsChanged(changed_options_t const& options);
+
+	std::map<std::wstring, CTheme> themes_;
+};
+
+#endif
diff -Naupr a/src/interface/timeformatting.h b/src/interface/timeformatting.h
--- a/src/interface/timeformatting.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/timeformatting.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,16 @@
+#ifndef FILEZILLA_INTERFACE_TIMEFORMATTING_HEADER
+#define FILEZILLA_INTERFACE_TIMEFORMATTING_HEADER
+
+namespace fz {
+class datetime;
+}
+
+class CTimeFormat
+{
+public:
+	static wxString Format(fz::datetime const& time);
+	static wxString FormatDateTime(fz::datetime const& time);
+	static wxString FormatDate(fz::datetime const& time);
+};
+
+#endif
diff -Naupr a/src/interface/toolbar.h b/src/interface/toolbar.h
--- a/src/interface/toolbar.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/toolbar.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,45 @@
+#ifndef FILEZILLA_INTERFACE_TOOLBAR_HEADER
+#define FILEZILLA_INTERFACE_TOOLBAR_HEADER
+
+#include <option_change_event_handler.h>
+#include "state.h"
+
+class CMainFrame;
+
+class CToolBar final : public wxToolBar, public CGlobalStateEventHandler, public COptionChangeEventHandler
+{
+public:
+	CToolBar() = default;
+	virtual ~CToolBar();
+
+	void UpdateToolbarState();
+
+	static CToolBar* Load(CMainFrame* pMainFrame);
+
+	bool ShowTool(int id);
+	bool HideTool(int id);
+
+#ifdef __WXMSW__
+	virtual bool Realize();
+#endif
+
+protected:
+	void MakeTool(char const* id, std::wstring const& art, wxString const& tooltip, wxString const& help = wxString(), wxItemKind type = wxITEM_NORMAL);
+	void MakeTools();
+
+	virtual void OnStateChange(CState* pState, t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+	virtual void OnOptionsChanged(changed_options_t const& options);
+
+	CMainFrame* m_pMainFrame{};
+
+	std::map<int, wxToolBarToolBase*> m_hidden_tools;
+
+#ifdef __WXMSW__
+	std::unique_ptr<wxImageList> toolImages_;
+	std::unique_ptr<wxImageList> disabledToolImages_;
+#endif
+
+	wxSize iconSize_;
+};
+
+#endif
diff -Naupr a/src/interface/treectrlex.h b/src/interface/treectrlex.h
--- a/src/interface/treectrlex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/treectrlex.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,70 @@
+#ifndef FILEZILLA_INTERFACE_TREECTRLEX_HEADER
+#define FILEZILLA_INTERFACE_TREECTRLEX_HEADER
+
+#include <wx/dnd.h>
+#include "filelistctrl.h"
+
+#ifndef __WXMAC__
+	#define DEFAULT_TREE_STYLE wxTR_HAS_BUTTONS | wxTR_LINES_AT_ROOT
+#else
+	#define DEFAULT_TREE_STYLE wxTR_HAS_BUTTONS | wxTR_NO_LINES
+#endif
+
+class wxTreeCtrlEx : public wxNavigationEnabled<wxTreeCtrl>
+{
+	wxDECLARE_CLASS(wxTreeCtrlEx); // Needed for OnCompareItems to work on Windows. Bad library design, why not use normal RTTI?
+public:
+	typedef wxTreeItemId Item;
+
+	wxTreeCtrlEx();
+	wxTreeCtrlEx(wxWindow *parent, wxWindowID id = wxID_ANY,
+			   const wxPoint& pos = wxDefaultPosition,
+			   const wxSize& size = wxDefaultSize,
+			   long style = DEFAULT_TREE_STYLE);
+	void SafeSelectItem(wxTreeItemId const& item, bool clearSelection = true);
+
+	// Small wrappers to make wxTreeCtrl(Ex) API more similar to wxListCtrl(ex).
+	int GetItemCount() const { return GetCount(); }
+	wxTreeItemId GetTopItem() const { return GetFirstVisibleItem(); }
+	bool GetItemRect(wxTreeItemId const& item, wxRect &rect) const { return GetBoundingRect(item, rect); }
+
+	wxRect GetActualClientRect() const { return GetClientRect(); }
+
+	bool Valid(wxTreeItemId const& i) const { return i.IsOk(); }
+
+	wxWindow* GetMainWindow() { return this; }
+
+	virtual wxTreeItemId GetSelection() const override;
+
+	// wxTreeCtrl::GetSelections has an atrocious interface
+	std::vector<wxTreeItemId> GetSelections() const;
+
+	// Items with a collapsed ancestor are not included
+	wxTreeItemId GetFirstItem() const;
+	wxTreeItemId GetLastItem() const;
+	wxTreeItemId GetBottomItem() const;
+
+	wxTreeItemId GetNextItemSimple(wxTreeItemId const& item, bool includeCollapsed = false) const;
+	wxTreeItemId GetPrevItemSimple(wxTreeItemId const& item) const;
+
+	bool InPrefixSearch() const { return inPrefixSearch_; }
+
+	void Resort();
+protected:
+
+	bool inPrefixSearch_{};
+
+	int m_setSelection{};
+
+#ifdef __WXMAC__
+	wxDECLARE_EVENT_TABLE();
+	void OnChar(wxKeyEvent& event);
+#endif
+
+	virtual int OnCompareItems(wxTreeItemId const& item1, wxTreeItemId const& item2) override;
+
+	typedef int (*CompareFunction)(std::wstring_view const&, std::wstring_view const&);
+	CompareFunction sortFunction_{};
+};
+
+#endif
diff -Naupr a/src/interface/update_dialog.cpp b/src/interface/update_dialog.cpp
--- a/src/interface/update_dialog.cpp	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/update_dialog.cpp	2020-02-20 16:00:03.000000000 +0100
@@ -6,6 +6,7 @@
 #include "filezillaapp.h"
 #include "file_utils.h"
 #include "update_dialog.h"
+#include "textctrlex.h"
 #include "themeprovider.h"
 #include "xrc_helper.h"
 #include "Options.h"
@@ -110,10 +111,12 @@ int CUpdateDialog::ShowModal()
 		
 		row->Add(new wxStaticText(p, -1, _("Checking for updates...")), lay.valign);
 
-		auto anim = new wxAnimationCtrl(p, -1, throbber);
-		anim->SetMinSize(throbber.GetSize());
-		anim->Play();
-		row->Add(anim, lay.valign);
+		if (throbber.IsOk()) {
+			auto anim = new wxAnimationCtrl(p, -1, throbber);
+			anim->SetMinSize(throbber.GetSize());
+			anim->Play();
+			row->Add(anim, lay.valign);
+		}
 
 		s->AddStretchSpacer();
 	}
@@ -129,7 +132,7 @@ int CUpdateDialog::ShowModal()
 		s->Add(new wxStaticText(p, -1, _("Information about the latest version of FileZilla could not be retrieved. Please try again later.")));
 		s->Add(new wxHyperlinkCtrl(p, XRCID("ID_RETRY"), _("Try again"), wxString()));
 
-		s->Add(new wxTextCtrl(p, XRCID("ID_DETAILS"), wxString(), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY | wxHSCROLL | wxTE_DONTWRAP), 1, wxGROW)->SetMinSize(wxSize(-1, 200));
+		s->Add(new wxTextCtrlEx(p, XRCID("ID_DETAILS"), wxString(), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY | wxHSCROLL | wxTE_DONTWRAP), 1, wxGROW)->SetMinSize(wxSize(-1, 200));
 		s->Add(new wxHyperlinkCtrl(p, XRCID("ID_SHOW_DETAILS"), _("Show details"), wxString()), lay.valign);
 
 		s->AddSpacer(lay.dlgUnits(5));
@@ -150,16 +153,18 @@ int CUpdateDialog::ShowModal()
 		s->Add(new wxStaticText(p, XRCID("ID_VERSION"), L"1.2.3.4"));
 		s->AddSpacer(0);
 		s->Add(new wxStaticText(p, XRCID("ID_NEWS_LABEL"), _("What's new:")));
-		s->Add(new wxTextCtrl(p, XRCID("ID_NEWS"), wxString(), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY), 1, wxGROW)->SetMinSize(400, 150);
+		s->Add(new wxTextCtrlEx(p, XRCID("ID_NEWS"), wxString(), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY), 1, wxGROW)->SetMinSize(400, 150);
 
 		auto dl = lay.createFlex(0, 1);
 		s->Add(dl, lay.halign);
 		dl->Add(new wxStaticText(p, XRCID("ID_DOWNLOAD_LABEL"), _("Downloading update...")), lay.valign);
 
-		auto anim = new wxAnimationCtrl(p, XRCID("ID_WAIT_DOWNLOAD"), throbber);
-		anim->SetMinSize(throbber.GetSize());
-		anim->Play();
-		dl->Add(anim, lay.valign);
+		if (throbber.IsOk()) {
+			auto anim = new wxAnimationCtrl(p, XRCID("ID_WAIT_DOWNLOAD"), throbber);
+			anim->SetMinSize(throbber.GetSize());
+			anim->Play();
+			dl->Add(anim, lay.valign);
+		}
 
 		dl->Add(new wxStaticText(p, XRCID("ID_DOWNLOAD_PROGRESS"), L"12% downloaded"), lay.valign);
 
@@ -171,7 +176,7 @@ int CUpdateDialog::ShowModal()
 		s->Add(new wxStaticText(p, XRCID("ID_DISABLED_CHECK"), _("Either you or your system administrator has disabled checking for updates. Please re-enable checking for updates to obtain more information.")));
 		s->Add(new wxStaticText(p, XRCID("ID_DOWNLOAD_FAIL"), _("The new version could not be downloaded, please retry later.")));
 
-		s->Add(new wxTextCtrl(p, XRCID("ID_DETAILS_DL"), wxString(), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY | wxHSCROLL | wxTE_DONTWRAP), 1, wxGROW)->SetMinSize(wxSize(-1, 0));
+		s->Add(new wxTextCtrlEx(p, XRCID("ID_DETAILS_DL"), wxString(), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY | wxHSCROLL | wxTE_DONTWRAP), 1, wxGROW)->SetMinSize(wxSize(-1, 0));
 		auto retry = lay.createFlex(0, 1);
 		s->Add(retry);
 		retry->Add(new wxHyperlinkCtrl(p, XRCID("ID_DOWNLOAD_RETRY"), _("Try again"), wxString()), lay.valign);
@@ -354,7 +359,10 @@ void CUpdateDialog::UpdaterStateChanged(
 		}
 		bool downloading = s == UpdaterState::newversion_downloading;
 		XRCCTRL(*this, "ID_DOWNLOAD_LABEL", wxStaticText)->Show(downloading);
-		XRCCTRL(*this, "ID_WAIT_DOWNLOAD", wxAnimationCtrl)->Show(downloading);
+		auto anim = FindWindow(XRCID("ID_WAIT_DOWNLOAD"));
+		if (anim) {
+			anim->Show(downloading);
+		}
 		XRCCTRL(*this, "ID_DOWNLOAD_PROGRESS", wxStaticText)->Show(downloading);
 		if (downloading) {
 			timer_.Start(500);
diff -Naupr a/src/interface/update_dialog.h b/src/interface/update_dialog.h
--- a/src/interface/update_dialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/update_dialog.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,50 @@
+#ifndef FILEZILLA_UPDATE_DIALOG_HEADER
+#define FILEZILLA_UPDATE_DIALOG_HEADER
+
+#if FZ_MANUALUPDATECHECK
+#include "dialogex.h"
+#include "updater.h"
+
+class wxPanel;
+class wxWindow;
+
+class wxHyperlinkEvent;
+
+class CUpdateDialog final : public wxDialogEx, protected CUpdateHandler
+{
+public:
+	CUpdateDialog(wxWindow* parent, CUpdater& updater);
+	virtual ~CUpdateDialog();
+
+	virtual int ShowModal();
+
+	static bool IsRunning();
+
+protected:
+	virtual void UpdaterStateChanged( UpdaterState s, build const& v );
+
+	void Wrap();
+
+	void InitFooter();
+
+	void UpdateProgress();
+
+	wxWindow* parent_{};
+	CUpdater& updater_;
+
+	wxPanel* content_{};
+	std::vector<wxPanel*> panels_;
+
+	wxTimer timer_;
+
+	DECLARE_EVENT_TABLE()
+	void OnInstall(wxCommandEvent& ev);
+	void OnTimer(wxTimerEvent& ev);
+	void ShowDetails(wxHyperlinkEvent& ev);
+	void ShowDetailsDl(wxHyperlinkEvent& ev);
+	void Retry(wxHyperlinkEvent& ev);
+	void OnDebugLog(wxCommandEvent&);
+};
+
+#endif
+#endif
diff -Naupr a/src/interface/updater.h b/src/interface/updater.h
--- a/src/interface/updater.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/updater.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,155 @@
+#ifndef FILEZILLA_UPDATER_HEADER
+#define FILEZILLA_UPDATER_HEADER
+
+#if FZ_MANUALUPDATECHECK
+
+#include "notification.h"
+
+#include <wx/timer.h>
+
+#include <functional>
+
+#include <libfilezilla/uri.hpp>
+
+struct build
+{
+	std::wstring url_;
+	std::wstring version_;
+	std::wstring hash_;
+	int64_t size_{-1};
+};
+
+struct version_information
+{
+	bool empty() const {
+		return available_.version_.empty() && !eol_;
+	}
+
+	void update_available();
+
+	build stable_;
+	build beta_;
+	build nightly_;
+
+	build available_;
+
+	std::wstring changelog_;
+
+	std::wstring resources_;
+
+	bool eol_{};
+};
+
+enum class UpdaterState
+{
+	idle,
+	failed,
+	checking,
+	newversion, // There is a new version available, user needs to manually download
+	newversion_downloading, // There is a new version available, file is being downloaded
+	newversion_ready, // There is a new version available, file has been downloaded
+	newversion_stale, // Very old version of FileZilla. Either update checking has been disabled or is otherwise not working.
+	eol // Too old of an operating system
+};
+
+class CUpdateHandler
+{
+public:
+	virtual void UpdaterStateChanged(UpdaterState s, build const& v) = 0;
+};
+
+class CFileZillaEngineContext;
+class CUpdater final : public wxEvtHandler, private EngineNotificationHandler
+{
+public:
+	CUpdater(CUpdateHandler& parent, CFileZillaEngineContext& engine_context, std::function<void(CActiveNotification const&)> const& activityNotificationHandler);
+	virtual ~CUpdater();
+
+	// 2-Stage initialization
+	void Init();
+
+	void AddHandler(CUpdateHandler& handler);
+	void RemoveHandler(CUpdateHandler& handler);
+
+	UpdaterState GetState() const { return state_; }
+	build AvailableBuild() const { return version_information_.available_; }
+	std::wstring GetChangelog() const { return version_information_.changelog_; }
+	std::wstring GetResources() const { return version_information_.resources_; }
+
+	std::wstring DownloadedFile() const;
+
+	int64_t BytesDownloaded() const; // Returns -1 on error
+
+	std::wstring GetLog() const { return log_; }
+
+	static CUpdater* GetInstance();
+
+	bool UpdatableBuild() const;
+
+	void RunIfNeeded();
+
+	bool Busy() const;
+
+protected:
+	bool LongTimeSinceLastCheck() const;
+
+	int Download(std::wstring const& url, std::wstring const& local_file = std::wstring());
+	int Request(fz::uri const& uri);
+	int ContinueDownload();
+
+	void AutoRunIfNeeded();
+	bool Run(bool manual);
+
+	bool CreateConnectCommand(std::wstring const& url);
+	bool CreateTransferCommand(std::wstring const& url, std::wstring const& local_file);
+
+	fz::uri GetUrl();
+	void ProcessNotification(std::unique_ptr<CNotification> && notification);
+	void ProcessOperation(COperationNotification const& operation);
+	void ProcessData(CDataNotification& dataNotification);
+	void ParseData();
+	UpdaterState ProcessFinishedDownload();
+	UpdaterState ProcessFinishedData(bool can_download);
+
+	bool VerifyChecksum(std::wstring const& file, int64_t size, std::wstring const& checksum);
+
+	std::wstring GetTempFile() const;
+	std::wstring GetFilename(std::wstring const& url) const;
+	std::wstring GetLocalFile(build const& b, bool allow_existing);
+
+	void SetState(UpdaterState s);
+
+	virtual void OnEngineEvent(CFileZillaEngine* engine);
+	void DoOnEngineEvent(CFileZillaEngine* engine);
+
+	DECLARE_EVENT_TABLE()
+	void OnTimer(wxTimerEvent& ev);
+
+	UpdaterState state_;
+	std::wstring local_file_;
+	
+	CFileZillaEngineContext& engine_context_;
+	CFileZillaEngine* engine_{};
+	
+	bool m_use_internal_rootcert{};
+
+	std::wstring raw_version_information_;
+
+	version_information version_information_;
+
+	std::list<CUpdateHandler*> handlers_;
+
+	std::wstring log_;
+
+	wxTimer update_timer_;
+
+	std::deque<std::unique_ptr<CCommand>> pending_commands_;
+
+	std::function<void(CActiveNotification const&)> activityNotificationHandler_;
+
+	bool manual_{};
+};
+
+#endif //FZ_MANUALUPDATECHECK
+
+#endif
diff -Naupr a/src/interface/verifycertdialog.h b/src/interface/verifycertdialog.h
--- a/src/interface/verifycertdialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/verifycertdialog.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,76 @@
+#ifndef FILEZILLA_INTERFACE_VERIFYCERTDIALOG_HEADER
+#define FILEZILLA_INTERFACE_VERIFYCERTDIALOG_HEADER
+
+#include "dialogex.h"
+#include "xmlfunctions.h"
+
+#include <set>
+
+class CertStore final
+{
+public:
+	CertStore();
+
+	bool IsTrusted(fz::tls_session_info const& info);
+	void SetTrusted(fz::tls_session_info const& info, bool permanent, bool trustAllHostnames);
+
+	void SetInsecure(std::string const& host, unsigned int port, bool permanent);
+
+	bool IsInsecure(std::string const& host, unsigned int port, bool permanentOnly = false);
+
+	bool HasCertificate(std::string const& host, unsigned int port);
+
+private:
+	struct t_certData {
+		std::string host;
+		bool trustSans{};
+		unsigned int port{};
+		std::vector<uint8_t> data;
+	};
+
+	bool IsTrusted(std::string const& host, unsigned int port, std::vector<uint8_t> const& data, bool permanentOnly, bool allowSans);
+	bool DoIsTrusted(std::string const& host, unsigned int port, std::vector<uint8_t> const& data, std::list<t_certData> const& trustedCerts, bool allowSans);
+
+	void LoadTrustedCerts();
+
+	std::list<t_certData> trustedCerts_;
+	std::list<t_certData> sessionTrustedCerts_;
+	std::set<std::tuple<std::string, unsigned int>> insecureHosts_;
+	std::set<std::tuple<std::string, unsigned int>> sessionInsecureHosts_;
+
+	CXmlFile m_xmlFile;
+};
+
+class CVerifyCertDialog final : protected wxDialogEx
+{
+public:
+	static void ShowVerificationDialog(CertStore & certStore, CCertificateNotification& notification);
+
+	static void DisplayCertificate(CCertificateNotification const& notification);
+
+private:
+	bool CreateVerificationDialog(CCertificateNotification const& notification, bool displayOnly);
+
+	CVerifyCertDialog() = default;
+
+	bool DisplayAlgorithm(int controlId, std::string const& name, bool insecure);
+
+	bool DisplayCert(fz::x509_certificate const& cert);
+
+	void ParseDN(wxWindow* parent, std::wstring const& dn, wxSizer* pSizer);
+	void ParseDN_by_prefix(wxWindow* parent, std::vector<std::pair<std::wstring, std::wstring>>& tokens, std::wstring const& prefix, wxString const& name, wxSizer* pSizer);
+
+	std::vector<fz::x509_certificate> m_certificates;
+	wxSizer* m_pSubjectSizer{};
+	wxSizer* m_pIssuerSizer{};
+	int line_height_{};
+
+	void OnCertificateChoice(wxCommandEvent& event);
+
+	bool warning_{};
+	bool sanTrustAllowed_{};
+};
+
+void ConfirmInsecureConection(wxWindow* parent, CertStore & certStore, CInsecureConnectionNotification & notification);
+
+#endif
diff -Naupr a/src/interface/verifyhostkeydialog.h b/src/interface/verifyhostkeydialog.h
--- a/src/interface/verifyhostkeydialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/verifyhostkeydialog.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,22 @@
+#ifndef FILEZILLAINTERFACE_VERIFYHOSTKEYDIALOG_HEADER
+#define FILEZILLAINTERFACE_VERIFYHOSTKEYDIALOG_HEADER
+
+/* Full handling is done inside fzsftp, this class is just to display the
+ * dialog and for temporary session trust, lost on restart of FileZilla.
+ */
+class CVerifyHostkeyDialog final
+{
+public:
+	static bool IsTrusted(CHostKeyNotification const& pNotification);
+	static void ShowVerificationDialog(wxWindow* parent, CHostKeyNotification& pNotification);
+
+protected:
+	struct t_keyData
+	{
+		std::wstring host;
+		std::wstring fingerprint;
+	};
+	static std::vector<t_keyData> m_sessionTrustedKeys;
+};
+
+#endif
diff -Naupr a/src/interface/view.h b/src/interface/view.h
--- a/src/interface/view.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/view.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,38 @@
+#ifndef FILEZILLA_INTERFACE_VIEW_HEADER
+#define FILEZILLA_INTERFACE_VIEW_HEADER
+
+class CViewHeader;
+class CView final : public wxNavigationEnabled<wxWindow>
+{
+public:
+	CView(wxWindow* pParent);
+
+	void SetWindow(wxWindow* pWnd);
+	void SetHeader(CViewHeader* pWnd);
+	CViewHeader* GetHeader() { return m_pHeader; }
+	CViewHeader* DetachHeader();
+	void SetStatusBar(wxStatusBar* pStatusBar);
+	wxStatusBar* GetStatusBar() { return m_pStatusBar; }
+
+	void SetFooter(wxWindow* footer);
+	void SetSearchPanel(wxWindow* panel);
+
+	void ShowSearchPanel();
+
+protected:
+	void Arrange(wxWindow* child, wxRect& clientRect, bool top);
+
+	void FixTabOrder();
+
+	wxWindow* m_pWnd{};
+	CViewHeader* m_pHeader{};
+	wxStatusBar* m_pStatusBar{};
+
+	wxWindow* m_pFooter{};
+	wxWindow* m_pSearchPanel{};
+
+	DECLARE_EVENT_TABLE()
+	void OnSize(wxSizeEvent&);
+};
+
+#endif
diff -Naupr a/src/interface/viewheader.cpp b/src/interface/viewheader.cpp
--- a/src/interface/viewheader.cpp	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/viewheader.cpp	2020-02-18 17:28:51.000000000 +0100
@@ -68,6 +68,7 @@ CViewHeader::CViewHeader(wxWindow* pPare
 	Create(pParent, wxID_ANY);
 
 	m_pComboBox = new CComboBoxEx(this);
+	m_pComboBox->SetMaxLength(20000);
 	m_pLabel = new wxStaticText(this, wxID_ANY, label, wxDefaultPosition, wxDefaultSize);
 	wxSize size = GetSize();
 	size.SetHeight(m_pComboBox->GetBestSize().GetHeight() + border_offset);
diff -Naupr a/src/interface/viewheader.h b/src/interface/viewheader.h
--- a/src/interface/viewheader.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/viewheader.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,88 @@
+#ifndef FILEZILLA_INTERFACE_VIEWHEADER_HEADER
+#define FILEZILLA_INTERFACE_VIEWHEADER_HEADER
+
+#include "state.h"
+
+class CComboBoxEx;
+class CWindowTinter;
+class CViewHeader : public wxNavigationEnabled<wxWindow>
+{
+	friend class CComboBoxEx;
+public:
+	CViewHeader(wxWindow* pParent, const wxString& label);
+
+	// Reparents the control.
+	// Calls wxWindow::Reparent under WXMSW and WXGTK. On other systems,
+	// a new instance is created with the same content (but with different
+	// parent) and the provided pointer to pViewHeader will be modified.
+	static void Reparent(CViewHeader** pViewHeader, wxWindow* parent);
+
+	void SetLabel(const wxString& label);
+	wxString GetLabel() const;
+
+	virtual void SetFocus();
+
+protected:
+	CComboBoxEx* m_pComboBox{};
+	wxStaticText* m_pLabel{};
+	bool m_alreadyInPaint{};
+
+	DECLARE_EVENT_TABLE()
+	void OnSize(wxSizeEvent& event);
+
+	void OnPaint(wxPaintEvent& event);
+#ifdef __WXMSW__
+	void OnComboPaint(wxPaintEvent& event);
+	void OnComboMouseEvent(wxMouseEvent& event);
+	bool m_bLeftMousePressed{};
+#endif //__WXMSW__
+
+	void AddRecentDirectory(const wxString &directory);
+	std::deque<wxString> m_recentDirectories; // ordered by age
+	std::list<wxString> m_sortedRecentDirectories; // ordered by sort order
+
+	int m_cbOffset{};
+	int m_labelHeight{};
+
+	std::unique_ptr<CWindowTinter> m_windowTinter;
+};
+
+class CLocalViewHeader final : public CViewHeader, CStateEventHandler
+{
+public:
+	CLocalViewHeader(wxWindow* pParent, CState& state);
+
+protected:
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+
+	wxString m_oldValue;
+
+	DECLARE_EVENT_TABLE()
+	void OnTextChanged(wxCommandEvent& event);
+	void OnTextEnter(wxCommandEvent& event);
+	void OnSelectionChanged(wxCommandEvent& event);
+#ifdef __WXGTK__
+	void OnSelectTextEvent(wxCommandEvent& event);
+
+	wxString m_autoCompletionText;
+#endif
+};
+
+class CRemoteViewHeader final : public CViewHeader, CStateEventHandler
+{
+public:
+	CRemoteViewHeader(wxWindow* pParent, CState& state);
+
+protected:
+	virtual void OnStateChange(t_statechange_notifications notification, std::wstring const& data, const void* data2) override;
+
+	CServer m_lastServer;
+	CServerPath m_path;
+
+	DECLARE_EVENT_TABLE()
+	void OnTextChanged(wxCommandEvent& event);
+	void OnTextEnter(wxCommandEvent& event);
+	void OnSelectionChanged(wxCommandEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/volume_enumerator.h b/src/interface/volume_enumerator.h
--- a/src/interface/volume_enumerator.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/volume_enumerator.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,72 @@
+#ifndef FILEZILLA_VOLUME_ENUMERATOR_HEADER
+#define FILEZILLA_VOLUME_ENUMERATOR_HEADER
+
+#include <libfilezilla/thread_pool.hpp>
+
+// Class to enumerate volume labels of volumes assigned
+// a drive letter under MSW.
+// Also gets the full UNC path for drive-mapped network
+// shares.
+
+// Windows has this very exotic concept of drive letters (nowadays called
+// volumes), even if the drive isn't mounted (in the sense of no media
+// inserted).
+// This can result in a long seek time if trying to enumerate the volume
+// labels, especially with legacy floppy drives (why are people still using
+// them?). Worse, even if no floppy drive is installed the BIOS can report
+// one to exist and Windows dutifully displays A:
+
+// Since the local directory tree including the drives is populated at
+// startup, use a background thread to obtain the labels.
+#ifdef FZ_WINDOWS
+
+DECLARE_EVENT_TYPE(fzEVT_VOLUMEENUMERATED, -1)
+DECLARE_EVENT_TYPE(fzEVT_VOLUMESENUMERATED, -1)
+
+class CVolumeDescriptionEnumeratorThread final
+{
+public:
+	CVolumeDescriptionEnumeratorThread(wxEvtHandler* pEvtHandler, fz::thread_pool & pool);
+	~CVolumeDescriptionEnumeratorThread();
+
+	bool Failed() const { return m_failure; }
+
+	struct t_VolumeInfo
+	{
+		std::wstring volume;
+		std::wstring volumeName;
+		int icon{-1};
+	};
+
+	std::vector<t_VolumeInfo> GetVolumes();
+
+	static std::vector<std::wstring> GetDrives();
+
+	static long GetDrivesToHide();
+	static bool IsHidden(wchar_t const* drive, long noDrives);
+
+protected:
+	static std::vector<std::wstring> GetDrives(long drivesToHide);
+
+	bool GetDriveLabels();
+	void ProcessDrive(std::wstring const& drive);
+	bool GetDriveLabel(std::wstring const& drive);
+	bool GetDriveIcon(std::wstring const& drive);
+	void entry();
+
+	wxEvtHandler* m_pEvtHandler;
+
+	bool m_failure{};
+	bool m_stop{};
+
+	std::vector<t_VolumeInfo> m_volumeInfo;
+
+	fz::async_task thread_;
+	fz::mutex sync_{false};
+
+	long drivesToHide_{};
+};
+
+#endif
+
+#endif
diff -Naupr a/src/interface/welcome_dialog.h b/src/interface/welcome_dialog.h
--- a/src/interface/welcome_dialog.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/welcome_dialog.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,29 @@
+#ifndef FILEZILLA_INTERFACE_WELCOME_DIALOG_HEADER
+#define FILEZILLA_INTERFACE_WELCOME_DIALOG_HEADER
+
+#include "dialogex.h"
+
+#include <wx/timer.h>
+
+class CWelcomeDialog final : public wxDialogEx
+{
+public:
+	CWelcomeDialog() = default;
+
+	bool Run(wxWindow* parent, bool force = false);
+
+	static void RunDelayed(wxWindow* parent);
+
+protected:
+
+	void InitFooter(wxString const& resources);
+
+	wxTimer m_delayedShowTimer;
+
+	wxWindow* parent_{};
+
+	DECLARE_EVENT_TABLE()
+	void OnTimer(wxTimerEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/window_state_manager.h b/src/interface/window_state_manager.h
--- a/src/interface/window_state_manager.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/window_state_manager.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,38 @@
+#ifndef FILEZILLA_INTERFACE_WINDOW_STATE_MANAGER_HEADER
+#define FILEZILLA_INTERFACE_WINDOW_STATE_MANAGER_HEADER
+
+// This class get used to remember toplevel window size and position across
+// sessions.
+
+class CWindowStateManager final : public wxEvtHandler
+{
+public:
+	CWindowStateManager(wxTopLevelWindow* pWindow);
+	virtual ~CWindowStateManager();
+
+	bool Restore(const unsigned int optionId, const wxSize& default_size = wxSize(-1, -1));
+	void Remember(unsigned int optionId);
+
+	static wxRect GetScreenDimensions();
+
+#ifdef __WXGTK__
+	// Set nonzero if Restore maximized the window.
+	// Reason is that under wxGTK, maximization request may take some time.
+	// It is actually done asynchronously by the window manager.
+	unsigned int m_maximize_requested;
+#endif
+
+protected:
+	bool ReadDefaults(const unsigned int optionId, bool& maximized, wxPoint& position, wxSize& size);
+
+	wxTopLevelWindow* m_pWindow;
+
+	bool m_lastMaximized;
+	wxPoint m_lastWindowPosition;
+	wxSize m_lastWindowSize;
+
+	void OnSize(wxSizeEvent& event);
+	void OnMove(wxMoveEvent& event);
+};
+
+#endif
diff -Naupr a/src/interface/wrapengine.h b/src/interface/wrapengine.h
--- a/src/interface/wrapengine.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/wrapengine.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,56 @@
+#ifndef FILEZILLA_INTERFACE_WRAPENGINE_HEADER
+#define FILEZILLA_INTERFACE_WRAPENGINE_HEADER
+
+class CWrapEngine
+{
+public:
+	CWrapEngine();
+	virtual ~CWrapEngine() {}
+
+	bool LoadCache();
+
+	static void ClearCache();
+
+	enum wrap_result {
+		wrap_failed = 0x01,
+		wrap_didwrap = 0x02
+	};
+	// Find all wxStaticText controls in the given window(s) and wrap them, so
+	// that the window has the right aspect ratio...
+	bool WrapRecursive(wxWindow* wnd, double ratio, const char* name = "", wxSize canvas = wxSize(), wxSize minRequested = wxSize());
+	bool WrapRecursive(std::vector<wxWindow*>& windows, double ratio, const char* name = "", wxSize canvas = wxSize(), wxSize const& minRequested = wxSize());
+
+	// .. or does not exceed the given maximum length.
+	int WrapRecursive(wxWindow* wnd, wxSizer* sizer, int max);
+
+	// Find all wxStaticText controls in the window and unwrap them
+	bool UnwrapRecursive(wxWindow* wnd, wxSizer* sizer);
+
+	// Wrap the given text so its length in pixels does not exceed maxLength
+	bool WrapText(wxWindow* parent, wxString &text, unsigned long maxLength);
+	bool WrapTextChinese(wxWindow* parent, wxString &text, unsigned long maxLength);
+	bool WrapText(wxWindow* parent, int id, unsigned long maxLength);
+	wxString UnwrapText(const wxString& text);
+
+	int GetWidthFromCache(const char* name);
+
+	void CheckLanguage();
+
+protected:
+	void UnwrapRecursive_Wrapped(std::vector<int> const& wrapped, std::vector<wxWindow*> &windows, bool remove_fitting = false);
+
+	void SetWidthToCache(const char* name, int width);
+
+	std::map<wxChar, unsigned int> m_charWidths;
+
+	bool CanWrapBefore(const wxChar& c);
+	bool m_wrapOnEveryChar{};
+	const wxChar* m_noWrapChars{};
+
+	wxFont m_font;
+	int m_spaceWidth{-1};
+
+	static bool m_use_cache;
+};
+
+#endif
diff -Naupr a/src/interface/wxext/spinctrlex.cpp b/src/interface/wxext/spinctrlex.cpp
--- a/src/interface/wxext/spinctrlex.cpp	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/wxext/spinctrlex.cpp	2020-02-19 16:39:04.000000000 +0100
@@ -0,0 +1,57 @@
+#include <filezilla.h>
+#include "spinctrlex.h"
+
+#define DEFAULT_LENGTH_LIMIT 26 // Big enough for all 64bit values with thousands separator
+#define DEFAULT_LENGTH_LIMIT_DOUBLE 100 // A guess
+
+wxSpinCtrlEx::wxSpinCtrlEx()
+{
+}
+
+wxSpinCtrlEx::wxSpinCtrlEx(wxWindow* parent, wxWindowID id, wxString const& value, wxPoint const& pos, wxSize const& size, long style, int min, int max, int initial)
+	: wxSpinCtrl(parent, id, value, pos, size, style, min, max, initial)
+{
+	SetMaxLength(DEFAULT_LENGTH_LIMIT);
+}
+
+bool wxSpinCtrlEx::Create(wxWindow* parent, wxWindowID id, wxString const& value, wxPoint const& pos, wxSize const& size, long style, int min, int max, int initial, wxString const& name)
+{
+	bool ret = wxSpinCtrl::Create(parent, id, value, pos, size, style, min, max, initial, name);
+	if (ret) {
+		SetMaxLength(DEFAULT_LENGTH_LIMIT);
+	}
+	return ret;
+}
+
+void wxSpinCtrlEx::SetMaxLength(unsigned long len)
+{
+#ifdef __WXMSW__
+	::SendMessage(m_hwndBuddy, EM_LIMITTEXT, len, 0);
+#endif
+}
+
+wxSpinCtrlDoubleEx::wxSpinCtrlDoubleEx()
+{
+}
+
+wxSpinCtrlDoubleEx::wxSpinCtrlDoubleEx(wxWindow* parent, wxWindowID id, wxString const& value, wxPoint const& pos, wxSize const& size, long style, double min, double max, double initial, double inc)
+	: wxSpinCtrlDouble(parent, id, value, pos, size, style, min, max, initial, inc)
+{
+	SetMaxLength(DEFAULT_LENGTH_LIMIT_DOUBLE);
+}
+
+bool wxSpinCtrlDoubleEx::Create(wxWindow* parent, wxWindowID id, wxString const& value, wxPoint const& pos, wxSize const& size, long style, double min, double max, double initial, double inc, wxString const& name)
+{
+	bool ret = wxSpinCtrlDouble::Create(parent, id, value, pos, size, style, min, max, initial, inc, name);
+	if (ret) {
+		SetMaxLength(DEFAULT_LENGTH_LIMIT_DOUBLE);
+	}
+	return false;
+}
+
+void wxSpinCtrlDoubleEx::SetMaxLength(unsigned long len)
+{
+#ifndef __WXGTK__
+	GetText()->SetMaxLength(len);
+#endif
+}
diff -Naupr a/src/interface/wxext/spinctrlex.h b/src/interface/wxext/spinctrlex.h
--- a/src/interface/wxext/spinctrlex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/wxext/spinctrlex.h	2020-02-19 16:39:04.000000000 +0100
@@ -0,0 +1,28 @@
+#ifndef FILEZILLA_INTERFACE_EXEXT_SPINCTRL_HEADER
+#define FILEZILLA_INTERFACE_EXEXT_SPINCTRL_HEADER
+
+#include <wx/spinctrl.h>
+
+class wxSpinCtrlEx : public wxSpinCtrl
+{
+public:
+	wxSpinCtrlEx();
+	wxSpinCtrlEx(wxWindow* parent, wxWindowID id = wxID_ANY, wxString const& value = wxString(), wxPoint const& pos = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = wxSP_ARROW_KEYS | wxALIGN_RIGHT, int min = 0, int max = 100, int initial = 0);
+
+	bool Create(wxWindow* parent, wxWindowID id = wxID_ANY, wxString const& value = wxString(), wxPoint const& pos = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = wxSP_ARROW_KEYS | wxALIGN_RIGHT, int min = 0, int max = 100, int initial = 0, wxString const& name = wxT("wxSpinCtrl"));
+
+	void SetMaxLength(unsigned long len);
+};
+
+class wxSpinCtrlDoubleEx : public wxSpinCtrlDouble
+{
+public:
+    wxSpinCtrlDoubleEx();
+    wxSpinCtrlDoubleEx(wxWindow* parent, wxWindowID id = wxID_ANY, wxString const& value = wxString(), wxPoint const& pos = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = wxSP_ARROW_KEYS | wxALIGN_RIGHT, double min = 0, double max = 100, double initial = 0, double inc = 1);
+    
+	bool Create(wxWindow* parent, wxWindowID id = wxID_ANY, wxString const& value = wxString(), wxPoint const& pos = wxDefaultPosition, wxSize const& size = wxDefaultSize, long style = wxSP_ARROW_KEYS | wxALIGN_RIGHT, double min = 0, double max = 100, double initial = 0, double inc = 1, wxString const& name = wxT("wxSpinCtrlDouble"));
+
+	void SetMaxLength(unsigned long len);
+};
+
+#endif
\ Manca newline alla fine del file
diff -Naupr a/src/interface/wxfilesystem_blob_handler.h b/src/interface/wxfilesystem_blob_handler.h
--- a/src/interface/wxfilesystem_blob_handler.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/wxfilesystem_blob_handler.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,19 @@
+#ifndef FILEZILLA_INTERFACE_WXFILESYSTEM_BLOB_HANDLER_HEADER
+#define FILEZILLA_INTERFACE_WXFILESYSTEM_BLOB_HANDLER_HEADER
+
+#include <wx/filesys.h>
+
+// A handler for wxFileSystem where the filename is the hex-encoded file content.
+class wxFileSystemBlobHandler : public wxFileSystemHandler
+{
+public:
+	wxFileSystemBlobHandler() = default;
+
+	virtual bool CanOpen(wxString const& location);
+
+	virtual wxFSFile* OpenFile(wxFileSystem& fs, wxString const& location);
+
+	virtual wxString FindFirst(wxString const& wildcard, int flags);
+};
+
+#endif
\ Manca newline alla fine del file
diff -Naupr a/src/interface/xh_text_ex.h b/src/interface/xh_text_ex.h
--- a/src/interface/xh_text_ex.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/xh_text_ex.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,20 @@
+#ifndef FILEZILLA_INTERFACE_XH_TEXT_EX_HEADER
+#define FILEZILLA_INTERFACE_XH_TEXT_EX_HEADER
+
+#include <wx/xrc/xh_text.h>
+
+#ifndef __WXMAC__
+#define wxTextCtrlXmlHandlerEx wxTextCtrlXmlHandler
+#else
+
+class wxTextCtrlXmlHandlerEx final : public wxTextCtrlXmlHandler
+{
+	DECLARE_DYNAMIC_CLASS(wxTextCtrlXmlHandlerEx)
+
+public:
+	virtual wxObject *DoCreateResource();
+};
+
+#endif
+
+#endif
diff -Naupr a/src/interface/xmlfunctions.h b/src/interface/xmlfunctions.h
--- a/src/interface/xmlfunctions.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/xmlfunctions.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,81 @@
+/*
+ * xmlfunctions.h declares some useful xml helper functions, especially to
+ * improve usability together with wxWidgets.
+ */
+
+#ifndef FILEZILLA_INTERFACE_XMLFUNCTIONS_HEADER
+#define FILEZILLA_INTERFACE_XMLFUNCTIONS_HEADER
+
+#ifdef HAVE_LIBPUGIXML
+#include <pugixml.hpp>
+#else
+#include "../pugixml/pugixml.hpp"
+#endif
+
+#include "xmlutils.h"
+#include "serverdata.h"
+
+class CXmlFile final
+{
+public:
+	CXmlFile() = default;
+	explicit CXmlFile(std::wstring const& fileName, std::string const& root = std::string());
+
+	CXmlFile(CXmlFile const&) = delete;
+	CXmlFile& operator=(CXmlFile const&) = delete;
+
+	pugi::xml_node CreateEmpty();
+
+	std::wstring GetFileName() const { return m_fileName; }
+	void SetFileName(std::wstring const& name);
+
+	bool HasFileName() const { return !m_fileName.empty(); }
+
+	// Sets error description on failure
+	pugi::xml_node Load(bool overwriteInvalid = false);
+
+	std::wstring GetError() const { return m_error; }
+	size_t GetRawDataLength();
+	void GetRawDataHere(char* p, size_t size); // p has to big enough to hold at least GetRawDataLength() bytes
+
+	bool ParseData(uint8_t const* data, size_t len);
+
+	void Close();
+
+	pugi::xml_node GetElement() { return m_element; }
+	pugi::xml_node const GetElement() const { return m_element; }
+
+	bool Modified();
+
+	bool Save(bool printError, bool updateMetadata = true);
+
+	bool IsFromFutureVersion() const;
+protected:
+	std::wstring GetRedirectedName() const;
+
+	// Opens the specified XML file if it exists or creates a new one otherwise.
+	// Returns 0 on error.
+	bool GetXmlFile(std::wstring const& file);
+
+	// Sets version and platform in root element
+	void UpdateMetadata();
+
+	// Save the XML document to the given file
+	bool SaveXmlFile();
+
+	fz::datetime m_modificationTime;
+	std::wstring m_fileName;
+	pugi::xml_document m_document;
+	pugi::xml_node m_element;
+
+	std::wstring m_error;
+
+	std::string m_rootName{"FileZilla3"};
+};
+
+// Functions to save and retrieve CServer objects to the XML file
+void SetServer(pugi::xml_node node, Site const& site);
+
+bool GetServer(pugi::xml_node node, Site& site);
+
+#endif
diff -Naupr a/src/interface/xrc_helper.cpp b/src/interface/xrc_helper.cpp
--- a/src/interface/xrc_helper.cpp	2020-01-23 12:18:28.000000000 +0100
+++ b/src/interface/xrc_helper.cpp	2020-02-19 16:39:04.000000000 +0100
@@ -46,11 +46,9 @@ void InitHandlers(wxXmlResource& res)
 	res.AddHandler(new wxStaticBitmapXmlHandler);
 	res.AddHandler(new wxListCtrlXmlHandler);
 	res.AddHandler(new wxCheckListBoxXmlHandler);
-	res.AddHandler(new wxSpinCtrlXmlHandler);
 	res.AddHandler(new wxListBoxXmlHandler);
 	res.AddHandler(new wxScrolledWindowXmlHandler);
 	res.AddHandler(new wxHyperlinkCtrlXmlHandler);
-	res.AddHandler(new wxAnimationCtrlXmlHandler);
 }
 
 namespace {
diff -Naupr a/src/interface/xrc_helper.h b/src/interface/xrc_helper.h
--- a/src/interface/xrc_helper.h	1970-01-01 01:00:00.000000000 +0100
+++ b/src/interface/xrc_helper.h	2020-01-23 12:18:28.000000000 +0100
@@ -0,0 +1,69 @@
+#ifndef FILEZILLA_XRC_HELPER_HEADER
+#define FILEZILLA_XRC_HELPER_HEADER
+
+/*
+xrc_call is a safer and simpler alternative to XRCCTRL:
+- uses dynamic_cast
+- Returns default-contructed return value if object does not exist
+- Asserts in debug if object does not exist
+
+Usage:
+  bool always = xrc_call(*this, "ID_ALWAYS", &wxCheckBox::GetValue);
+
+  Instead of this:
+  bool always = XRCCTRL(*this, "ID_ALWAYS", wxCheckBox)->GetValue();
+
+*/
+
+template<typename F, typename Control, typename ...Args, typename ...Args2>
+F xrc_call(wxWindow const& parent, char const* name, F(Control::* ptr)(Args...), Args2&& ... args)
+{
+	F ret{};
+	Control* c = dynamic_cast<Control*>(parent.FindWindow(XRCID(name)));
+	wxASSERT(c);
+	if (c) {
+		ret = (c->*ptr)(std::forward<Args2>(args)...);
+	}
+
+	return ret;
+}
+
+template<typename Control, typename ...Args, typename ...Args2>
+void xrc_call(wxWindow const& parent, char const* name, void (Control::* ptr)(Args...), Args2&& ... args)
+{
+	Control* c = dynamic_cast<Control*>(parent.FindWindow(XRCID(name)));
+	wxASSERT(c);
+	if (c) {
+		(c->*ptr)(std::forward<Args2>(args)...);
+	}
+}
+
+template<typename S, typename F, typename Control, typename ...Args, typename ...Args2>
+F xrc_call(wxWindow const& parent, S&& name, F(Control::* ptr)(Args...) const, Args2&& ... args)
+{
+	F ret{};
+	Control* c = dynamic_cast<Control*>(parent.FindWindow(XRCID(name)));
+	wxASSERT(c);
+	if (c) {
+		ret = (c->*ptr)(std::forward<Args2>(args)...);
+	}
+
+	return ret;
+}
+
+template<typename S, typename Control, typename ...Args, typename ...Args2>
+void xrc_call(wxWindow const& parent, S&& name, void (Control::* ptr)(Args...) const, Args2&& ... args)
+{
+	Control* c = dynamic_cast<Control*>(parent.FindWindow(XRCID(name)));
+	wxASSERT(c);
+	if (c) {
+		(c->*ptr)(std::forward<Args2>(args)...);
+	}
+}
+
+// Init the handlers for the global XRC and loads the resource files
+void InitXrc(std::wstring const& file = std::wstring());
+
+void InitHandlers(wxXmlResource& res);
+
+#endif
\ Manca newline alla fine del file
