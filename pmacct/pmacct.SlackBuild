#!/bin/sh
#
# Slackware build script for pmacct (http://www.pmacct.net)
#
# Copyright 2008-2015 Corrado Franco (http://conraid.net) 
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Exit on most errors
set -eu

# Set variables:
PRGNAME=pmacct
PKGNAME=$(echo ${PRGNAME} | tr A-Z a-z)
VERSION=${VERSION:-1.5.1}
PKGVERSION=$(echo ${VERSION} | tr - _)
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
CWD=$(pwd)
TMP=${TMP:-/tmp/pkg}
PKG=${TMP}/package-${PRGNAME}

DOCDIR="${PKG}/usr/doc/${PRGNAME}-${VERSION}"

# Insert document files in this variable
DOCFILES="AUTHORS CONFIG-KEYS COPYING ChangeLog FAQS INSTALL KNOWN-BUGS NEWS QUICKSTART README TOOLS TODO UPGRADE docs examples sql"

ARCH=${ARCH:=""} # Set ARCH or leave blank to determine it automatically/
# Automatically determine the architecture we're building on:
if [ -z "${ARCH}" ]; then
    case "$( uname -m )" in
	i?86) ARCH=i686 ;;
	arm*) ARCH=arm ;;
        # Unless ${ARCH} is already set, use uname -m for all other archs:
        *) ARCH=$( uname -m ) ;;
    esac
fi

# Set compiling FLAGS
case "${ARCH}" in
    i486)
	SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    i686)
	SLKCFLAGS="-O2 -march=i686 -pipe -fomit-frame-pointer"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    x86_64)
	SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
	SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
        ;;
    *)
	SLKCFLAGS="-O2"; CHOST=${ARCH}
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
	;;
esac

# Extract source and prepare:
rm -rf ${PKG}
mkdir -p ${TMP} ${PKG}
cd ${TMP}
rm -rf ${PRGNAME}-${VERSION}
tar xvf ${CWD}/${PRGNAME}-${VERSION}.tar.gz
cd ${PRGNAME}-${VERSION}

# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Configure:
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
LDFLAGS="${SLKLDFLAGS}" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --enable-mysql \
  --enable-sqlite3 \
  --enable-ipv6 \
  --enable-v4-mapped \
  --enable-threads \
  --enable-ulog \
  --enable-geoip \
  --enable-static=no \
  --enable-shared=yes \
  --host=${CHOST}-slackware-linux \
  --build=${CHOST}-slackware-linux

# Build and install:
make
make DESTDIR=${PKG} install-strip

# Install config file
install -Dm644 examples/pmacctd-imt.conf.example ${PKG}/etc/pmacct/pmacctd.conf.new

# Install database scripts
mkdir -p ${PKG}/usr/share/pmacct/{mysql,pgsql,sqlite3,sh}
install -Dm644 sql/*.mysql ${PKG}/usr/share/pmacct/mysql/
install -Dm644 sql/*.pgsql ${PKG}/usr/share/pmacct/pgsql/
install -Dm644 sql/*.sqlite3 ${PKG}/usr/share/pmacct/sqlite3/
install -Dm744 examples/*.sh ${PKG}/usr/share/pmacct/sh/

# Install rc.d script
install -Dm755 ${CWD}/rc.pmacctd ${PKG}/etc/rc.d/rc.pmacctd.new

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a ${DOCFILES} ${DOCDIR}

# Add a slackbuild script:
install -Dm644 ${CWD}/${PKGNAME}.SlackBuild ${DOCDIR}/${PKGNAME}.SlackBuild

# Add slack-desc
install -Dm644 ${CWD}/slack-desc ${PKG}/install/slack-desc

# Add a doinst.sh
install -Dm644 ${CWD}/doinst.sh ${PKG}/install/doinst.sh

# Create package:
cd ${PKG}
/sbin/makepkg -l y -c n ${CWD}/${PRGNAME}-${VERSION}-${ARCH}-${BUILD}${TAG}.txz
