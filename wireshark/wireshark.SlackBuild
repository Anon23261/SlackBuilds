#!/bin/sh
#
# Slackware build script for wireshark (http://www.wireshark.org)
#
# Copyright 2008-2015 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Exit on most errors or unset variables
set -eu

# Set variables:
CWD=$(pwd)

PRGNAME=${PRGNAME:-wireshark}
PKGNAME=$(echo ${PRGNAME} | tr A-Z a-z)
VERSION=${VERSION:-1.99.6}
PKGVERSION=${VERSION//-/_}
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=${TMP}/package-${PRGNAME}
PKGDOCDIR="${PKG}/usr/doc/${PRGNAME}-${PKGVERSION}"

# Insert document files in this variable
DOCFILES="AUTHORS COPYING ChangeLog INSTALL* NEWS README* doc/README*"

ARCH=${ARCH:=""} # Set ARCH or leave blank to determine it automatically/
# Automatically determine the architecture we're building on:
if [ -z ${ARCH:=""} ]; then
    case "$( uname -m )" in
        i?86) ARCH=i686 ;;
        arm*) ARCH=arm ;;
        # Unless ${ARCH} is already set, use uname -m for all other archs:
        *) ARCH=$( uname -m ) ;;
    esac
fi

# Set compiling FLAGS
case "${ARCH}" in
    i486)
    SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
    ;;
    i686)
    SLKCFLAGS="-O2 -march=i686 -fomit-frame-pointer"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
    ;;
    x86_64)
    SLKCFLAGS="-O2 -fPIC -fomit-frame-pointer"; CHOST="x86_64"
    SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
    ;;
    *)
    SLKCFLAGS="-O2"; CHOST=${ARCH}
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
    ;;
esac

# Extract source and prepare:
rm -rf ${PKG}
mkdir -p ${TMP} ${PKG}
cd ${TMP}
rm -rf ${PRGNAME}-${VERSION}
tar xvf ${CWD}/${PRGNAME}-${VERSION}.tar.bz2
cd ${PRGNAME}-${VERSION}

# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Apply patches
for PATCH in ${CWD}/patches/*.patch; do
    patch -p1 -i $PATCH
done

# configure

LDFLAGS="${SLKLDFLAGS}" \
CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --disable-static \
  --disable-usr-local \
  --enable-wireshark \
  --enable-packet-editor \
  --enable-tfshark \
  --enable-setuid-install \
  --with-lua \
  --with-ssl=/usr/lib${LIBDIRSUFFIX} \
  --with-c-ares \
  --with-geoip \
  --with-plugins \
  --with-gtk2=yes \
  --with-gtk3=no \
  --with-qt=4 \
  --docdir=/usr/doc/${PKGNAME}-${PKGVERSION} \
  --host=${CHOST}-slackware-linux \
  --build=${CHOST}-slackware-linux

# Build and install:
make
make DESTDIR=${PKG} install-strip

# add headers files
install -dm755 ${PKG}/usr/include/${PKGNAME}/{epan/{crypt,dfilter,dissectors,ftypes,wmem},wiretap,wsutil}
install -m644 color.h config.h register.h ws_symbol_export.h "${PKG}/usr/include/${PKGNAME}"
for d in epan epan/crypt epan/dfilter epan/dissectors epan/ftypes epan/wmem wiretap wsutil; do
  install -m644 ${d}/*.h ${PKG}/usr/include/${PRGNAME}/${d}
done

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/man ]; then
    find ${PKG}/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
    for i in $( find ${PKG}/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Add a documentation directory:
mkdir -p ${PKGDOCDIR}
cp -a ${DOCFILES} ${PKGDOCDIR} || true

# Add a slackbuild script:
install -Dm644 ${CWD}/${PKGNAME}.SlackBuild ${PKGDOCDIR}/${PKGNAME}.SlackBuild

# Add slack-desc
install -Dm644 ${CWD}/slack-desc ${PKG}/install/slack-desc

# Add a doinst.sh, if any
install -Dm644 ${CWD}/doinst.sh ${PKG}/install/doinst.sh

# Add icons and desktop file
install -Dm644 ${PKGNAME}.desktop ${PKG}/usr/share/applications/${PKGNAME}.desktop
install -Dm644 image/wsicon48.png ${PKG}/usr/share/pixmaps/${PKGNAME}.png
for col in {lo,hi}; do
  for size in {16,32,48}; do
      install -Dm644 image/${col}${size}-app-${PKGNAME}.png \
      ${PKG}/usr/share/icons/${col}color/${size}x${size}/apps/${PKGNAME}.png
  done
done

# Create package:
cd ${PKG}
/sbin/makepkg -l y -c n ${CWD}/${PKGNAME}-${PKGVERSION}-${ARCH}-${BUILD}${TAG}.txz
