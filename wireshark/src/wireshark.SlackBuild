#!/bin/sh
#
# Slackware build script for wireshark (http://www.wireshark.org)
#
# Copyright 2008-2013 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Exit on most errors
set -e

# Set variables:
CWD=$(pwd)

PRGNAME=${PRGNAME:-wireshark}
VERSION=${VERSION:-$(echo $PRGNAME-*.tar.?z* | rev | cut -f3- -d. | cut -f1 -d- | rev)}
BUILD=${BUILD:-5}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PRGNAME
DOCS="$PKG/usr/doc/$PRGNAME-$VERSION"

# Insert document files in this variable
DOCFILES="AUTHORS COPYING ChangeLog INSTALL* NEWS README* doc/README*"

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
	i?86) ARCH=i686 ;;
	arm*) ARCH=arm ;;
        # Unless $ARCH is already set, use uname -m for all other archs:
        *) ARCH=$( uname -m ) ;;
    esac
fi

# Set compiling FLAGS
case "$ARCH" in
    i486)
	SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    i686)
	SLKCFLAGS="-O2 -march=i686 -pipe -fomit-frame-pointer"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    x86_64)
	SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
	SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
        ;;
    *)
	SLKCFLAGS="-O2"; CHOST=$ARCH
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
	;;
esac

# Extract source and prepare:
rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAME-$VERSION
tar xvf $CWD/$PRGNAME-$VERSION.tar.bz2
cd $PRGNAME-$VERSION

# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=8774
patch -p0 -i $CWD/01_fix_encoding_asn2deb_pod.patch
patch -p0 -i $CWD/02_fix_encoding_idl2deb_pod.patch
patch -p0 -i $CWD/03_force_utf8_for_pod2man.patch

# configure
libtoolize --force
autoreconf -vif
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --disable-static \
  --disable-usr-local \
  --enable-wireshark \
  --enable-packet-editor \
  --with-lua \
  --with-ssl=/usr/lib${LIBDIRSUFFIX} \
  --with-c-ares \
  --with-geoip \
  --with-adns \
  --with-plugins \
  --docdir=/usr/doc/$PRGNAME-$VERSION \
  --host=$CHOST-slackware-linux \
  --build=$CHOST-slackware-linux

# Build and install:
make
make DESTDIR=$PKG install-strip

# add headers files
install -dm755 ${PKG}/usr/include/${PRGNAME}/{epan/{crypt,dfilter,dissectors,ftypes},wiretap,wsutil}
install -m644 color.h config.h register.h ws_symbol_export.h "${PKG}/usr/include/${PRGNAME}"
for d in epan epan/crypt epan/dfilter epan/dissectors epan/ftypes wiretap wsutil; do
  install -m644 ${d}/*.h ${PKG}/usr/include/${PRGNAME}/${d}
done

# Add a documentation directory:
mkdir -p ${DOCS}
for i in ${DOCFILES}; do
    if [ -e ${i} ]; then
        if ! [ -L ${i} ]; then
	    cp -a ${i} ${DOCS}
	else
	    cp -LRp ${i} ${DOCS}
        fi
    fi;
done

# Compress and link manpages, if any:
if [ -d $PKG/usr/man ]; then
( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \;
  for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
)
fi

# Add a slackbuild script:
cat $CWD/$PRGNAME.SlackBuild > $DOCS/$PRGNAME.SlackBuild

# Add slack-desc
install -Dm644 $CWD/slack-desc $PKG/install/slack-desc

# Add a doinst.sh, if any
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Add icons and desktop file
install -Dm644 $PRGNAME.desktop $PKG/usr/share/applications/$PRGNAME.desktop
install -Dm644 image/wsicon48.png $PKG/usr/share/pixmaps/$PRGNAME.png
for col in {lo,hi}; do
  for size in {16,32,48}; do
      install -Dm644 image/${col}${size}-app-$PRGNAME.png \
      $PKG/usr/share/icons/${col}color/${size}x${size}/apps/$PRGNAME.png
  done
done

# Create package:
cd $PKG
/sbin/makepkg -l y -c n $CWD/$PRGNAME-$VERSION-$ARCH-${BUILD}${TAG}.txz
