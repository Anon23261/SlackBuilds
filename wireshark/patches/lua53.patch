diff -Naupr wireshark-1.99.5-orig/epan/wslua/Makefile.in wireshark-1.99.5/epan/wslua/Makefile.in
--- wireshark-1.99.5-orig/epan/wslua/Makefile.in	2015-03-20 00:38:35.000000000 +0100
+++ wireshark-1.99.5/epan/wslua/Makefile.in	2015-05-10 09:18:11.000000000 +0200
@@ -338,6 +338,7 @@ LIBTOOL_DEPS = @LIBTOOL_DEPS@
 LIPO = @LIPO@
 LN_S = @LN_S@
 LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
 LUA_CFLAGS = @LUA_CFLAGS@
 LUA_LIBS = @LUA_LIBS@
 LYNX = @LYNX@
diff -Naupr wireshark-1.99.5-orig/epan/wslua/lua_bitop.c wireshark-1.99.5/epan/wslua/lua_bitop.c
--- wireshark-1.99.5-orig/epan/wslua/lua_bitop.c	2015-03-20 00:38:12.000000000 +0100
+++ wireshark-1.99.5/epan/wslua/lua_bitop.c	2015-05-10 09:59:41.000000000 +0200
@@ -48,7 +48,7 @@ typedef uint32_t UBits;
 
 typedef union {
   lua_Number n;
-#ifdef LUA_NUMBER_DOUBLE
+#ifdef LUA_REAL_DOUBLE
   uint64_t b;
 #else
   UBits b;
@@ -65,21 +65,21 @@ static UBits barg(lua_State *L, int idx)
 #else
   bn.n = luaL_checknumber(L, idx);
 #endif
-#if defined(LUA_NUMBER_DOUBLE)
+#if defined(LUA_REAL_DOUBLE)
   bn.n += 6755399441055744.0;  /* 2^52+2^51 */
 #ifdef SWAPPED_DOUBLE
   b = (UBits)(bn.b >> 32);
 #else
   b = (UBits)bn.b;
 #endif
-#elif defined(LUA_NUMBER_INT) || defined(LUA_NUMBER_LONG) || \
-      defined(LUA_NUMBER_LONGLONG) || defined(LUA_NUMBER_LONG_LONG) || \
+#elif defined(LUA_INTEGER) || defined(LUA_INT_LONG) || \
+      defined(LUA_INT_LONGLONG) || defined(LUA_NUMBER_LONG_LONG) || \
       defined(LUA_NUMBER_LLONG)
   if (sizeof(UBits) == sizeof(lua_Number))
     b = bn.b;
   else
     b = (UBits)(SBits)bn.n;
-#elif defined(LUA_NUMBER_FLOAT)
+#elif defined(LUA_REAL_FLOAT)
 #error "A 'float' lua_Number type is incompatible with this library"
 #else
 #error "Unknown number type, check LUA_NUMBER_* in luaconf.h"
@@ -169,7 +169,7 @@ LUALIB_API int luaopen_bit(lua_State *L)
   b = barg(L, -1);
   if (b != (UBits)1437217655L || BAD_SAR) {  /* Perform a simple self-test. */
     const char *msg = "compiled with incompatible luaconf.h";
-#ifdef LUA_NUMBER_DOUBLE
+#ifdef LUA_REAL_DOUBLE
 #ifdef _WIN32
     if (b == (UBits)1610612736L)
       msg = "use D3DCREATE_FPU_PRESERVE with DirectX";
diff -Naupr wireshark-1.99.5-orig/epan/wslua/wslua_file.c wireshark-1.99.5/epan/wslua/wslua_file.c
--- wireshark-1.99.5-orig/epan/wslua/wslua_file.c	2015-03-20 00:38:12.000000000 +0100
+++ wireshark-1.99.5/epan/wslua/wslua_file.c	2015-05-10 09:59:41.000000000 +0200
@@ -341,7 +341,7 @@ WSLUA_METHOD File_seek(lua_State* L) {
     static const char *const modenames[] = {"set", "cur", "end", NULL};
     File f = checkFile(L,1);
     int op = luaL_checkoption(L, 2, "cur", modenames);
-    gint64 offset = (gint64) luaL_optlong(L, 3, 0);
+    gint64 offset = (gint64) (long)luaL_optinteger(L, 3, 0);
     int err = WTAP_ERR_INTERNAL;
 
 
diff -Naupr wireshark-1.99.5-orig/epan/wslua/wslua_struct.c wireshark-1.99.5/epan/wslua/wslua_struct.c
--- wireshark-1.99.5-orig/epan/wslua/wslua_struct.c	2015-03-20 00:38:12.000000000 +0100
+++ wireshark-1.99.5/epan/wslua/wslua_struct.c	2015-05-10 09:59:52.000000000 +0200
@@ -462,7 +462,7 @@ WSLUA_CONSTRUCTOR Struct_unpack (lua_Sta
   const char *fmt = wslua_checkstring_only(L, WSLUA_ARG_Struct_unpack_FORMAT);
   size_t ld;
   const char *data = wslua_checklstring_only(L, WSLUA_ARG_Struct_unpack_STRUCT, &ld);
-  size_t pos = luaL_optinteger(L, WSLUA_OPTARG_Struct_unpack_BEGIN, 1) - 1;
+  size_t pos = (int)luaL_optinteger(L, WSLUA_OPTARG_Struct_unpack_BEGIN, 1) - 1;
   defaultoptions(&h);
   lua_settop(L, 2);
   while (*fmt) {
