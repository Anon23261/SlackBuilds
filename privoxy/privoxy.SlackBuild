#!/bin/sh
#
# Slackware build script for <prgname> (http://www.privoxy.org/)
#
# Copyright (c) 2007  alkos333 <me@alkos333.net>
# Copyright 2009-2015 Corrado Franco (http://conraid.net)
# Modified by Corrado Franco for slackers.it repository
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.

set -eu

CWD=$(pwd)

PRGNAM=privoxy
VERSION=${VERSION:-3.0.24}
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

## privoxy user & group *MUST* exist before package creation
# See http://slackbuilds.org/uid_gid.txt for current recomendations.
PRIVOXY_USER=${PRIVOXY_USER:-privoxy}
PRIVOXY_GROUP=${PRIVOXY_GROUP:-privoxy}

if ! grep -q ^$PRIVOXY_GROUP: /etc/group 2>/dev/null ; then
  echo "  Error: PRIVOXY group ($PRIVOXY_GROUP) doesn't exist."
  echo "  Try creating one with: groupadd -g 206 $PRIVOXY_GROUP"
  exit 1
fi
if ! grep -q ^$PRIVOXY_USER: /etc/passwd 2>/dev/null ; then
  echo "  Error: PRIVOXY user ($PRIVOXY_USER) doesn't exist."
  echo "  Try creating one with: useradd -u 206 -g $PRIVOXY_GROUP -d /dev/null -s /bin/false $PRIVOXY_USER"
  exit 1
fi

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
  i?86) ARCH=i686 ;;
  arm*) ARCH=arm ;;
  *) ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAM-$VERSION-stable
tar xvf $CWD/privoxy-$VERSION-stable-src.tar.gz
cd $PRGNAM-$VERSION-stable

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Put the docs where we tell them to go.
sed -i "/^DOC_DEST/s/= .*/= @docdir@/" GNUmakefile.in

# The Makefile checks if certain config files exist, and if so, adds a
# .new suffix.  Turn this behavior off.  We will do it below.
# Thanks to SBo
sed -i "s/\[ -s \"\$(CONF_DEST)\/\$\$i\" \]/false/" GNUmakefile.in

autoheader
autoconf
LDFLAGS="-L/usr/lib$LIBDIRSUFFIX" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --sysconfdir=/etc/privoxy \
  --localstatedir=/var \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --with-docbook=no \
  --with-user=$PRIVOXY_USER \
  --with-group=$PRIVOXY_GROUP \
  --host=$ARCH-slackware-linux \
  --build=$ARCH-slackware-linux

make 
make DESTDIR=$PKG install-strip

# Install init script
install -Dm755 slackware/rc.privoxy $PKG/etc/rc.d/rc.privoxy.new

# Make .new files so we don't clobber the existing configuration.
# Thanks to SBo
for i in config match-all.action trust user.action user.filter; do
  mv $PKG/etc/privoxy/$i $PKG/etc/privoxy/$i.new
done

# Don't clobber the logfile either
mv $PKG/var/log/privoxy/logfile $PKG/var/log/privoxy/logfile.new

# Remove this directory since it's empty and part of Slackware base
rmdir $PKG/var/run
rmdir $PKG/usr/share/

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Add template for TOR
install -Dm644 $CWD/config.tor.template $PKG/usr/doc/$PRGNAM-$VERSION/config.tor.template

install -Dm644 $CWD/$PRGNAM.SlackBuild $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install 
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

