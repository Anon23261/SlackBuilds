diff -Naupr weechat-3.7.1/CMakeLists.txt weechat-devel/CMakeLists.txt
diff -Naupr weechat-3.7.1/cmake/FindRuby.cmake weechat-devel/cmake/FindRuby.cmake
--- weechat-3.7.1/cmake/FindRuby.cmake	2022-10-21 13:01:44.000000000 +0200
+++ weechat-devel/cmake/FindRuby.cmake	2022-12-26 01:27:45.000000000 +0100
@@ -37,7 +37,7 @@ if(PKG_CONFIG_FOUND)
     # set specific search path for macOS
     set(ENV{PKG_CONFIG_PATH} "$ENV{PKG_CONFIG_PATH}:/usr/local/opt/ruby/lib/pkgconfig")
   endif()
-  pkg_search_module(RUBY ruby-3.1 ruby-3.0 ruby-2.7 ruby-2.6 ruby-2.5 ruby-2.4 ruby-2.3 ruby-2.2 ruby-2.1 ruby-2.0 ruby-1.9 ruby)
+  pkg_search_module(RUBY ruby-3.2 ruby-3.1 ruby-3.0 ruby-2.7 ruby-2.6 ruby-2.5 ruby-2.4 ruby-2.3 ruby-2.2 ruby-2.1 ruby-2.0 ruby-1.9 ruby)
   if(RUBY_FOUND AND ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
     # FIXME: weird hack: hardcoding the Ruby lib location on macOS
     set(RUBY_LDFLAGS "${RUBY_LDFLAGS} -L/usr/local/opt/ruby/lib")
diff -Naupr weechat-3.7.1/configure.ac weechat-devel/configure.ac
--- weechat-3.7.1/configure.ac	2022-10-21 13:01:44.000000000 +0200
+++ weechat-devel/configure.ac	2022-12-26 01:27:45.000000000 +0100
@@ -155,7 +155,6 @@ AC_ARG_ENABLE(script,       [  --disable
 AC_ARG_ENABLE(scripts,      [  --disable-scripts       turn off script plugins (perl, python, ...) (default=compiled if found)],enable_scripts=$enableval,enable_scripts=yes)
 AC_ARG_ENABLE(perl,         [  --disable-perl          turn off Perl script plugin (default=compiled if found)],enable_perl=$enableval,enable_perl=yes)
 AC_ARG_ENABLE(python,       [  --disable-python        turn off Python script plugin (default=compiled if found)],enable_python=$enableval,enable_python=yes)
-AC_ARG_ENABLE(python2,      [  --enable-python2        use Python 2 instead of Python 3 (default=off)],enable_python2=$enableval,enable_python2=no)
 AC_ARG_ENABLE(ruby,         [  --disable-ruby          turn off Ruby script plugin (default=compiled if found)],enable_ruby=$enableval,enable_ruby=yes)
 AC_ARG_ENABLE(lua,          [  --disable-lua           turn off Lua script plugin (default=compiled if found)],enable_lua=$enableval,enable_lua=yes)
 AC_ARG_ENABLE(tcl,          [  --disable-tcl           turn off Tcl script plugin (default=compiled if found)],enable_tcl=$enableval,enable_tcl=yes)
@@ -467,13 +466,9 @@ fi
 PYTHON_VERSION=
 
 if test "x$enable_python" = "xyes" ; then
-    if test "x$enable_python2" = "xyes" ; then
-        PKG_CHECK_MODULES(PYTHON, [python2], [PYTHON_FOUND=yes; PYTHON_VERSION=`$PKGCONFIG --modversion python2`], [PYTHON_FOUND=no])
-    else
-        PKG_CHECK_MODULES(PYTHON, [python3-embed], [PYTHON_FOUND=yes; PYTHON_VERSION=`$PKGCONFIG --modversion python3-embed`], [PYTHON_FOUND=no])
-        if test "x$PYTHON_FOUND" != "xyes"; then
-            PKG_CHECK_MODULES(PYTHON, [python3], [PYTHON_FOUND=yes; PYTHON_VERSION=`$PKGCONFIG --modversion python3`], [PYTHON_FOUND=no])
-        fi
+    PKG_CHECK_MODULES(PYTHON, [python3-embed], [PYTHON_FOUND=yes; PYTHON_VERSION=`$PKGCONFIG --modversion python3-embed`], [PYTHON_FOUND=no])
+    if test "x$PYTHON_FOUND" != "xyes"; then
+        PKG_CHECK_MODULES(PYTHON, [python3], [PYTHON_FOUND=yes; PYTHON_VERSION=`$PKGCONFIG --modversion python3`], [PYTHON_FOUND=no])
     fi
     if test "x$PYTHON_FOUND" != "xyes" ; then
         AC_MSG_WARN([
@@ -501,7 +496,7 @@ RUBY_VERSION=
 if test "x$enable_ruby" = "xyes" ; then
     RUBY_CFLAGS=""
     RUBY_LFLAGS=""
-    for v in "3.1" "3.0" "2.7" "2.6" "2.5" "2.4" "2.3" "2.2" "2.1" "2.0" "1.9" "1.8" ; do
+    for v in "3.2" "3.1" "3.0" "2.7" "2.6" "2.5" "2.4" "2.3" "2.2" "2.1" "2.0" "1.9" "1.8" ; do
         pkgconfig_ruby_found=`$PKGCONFIG --exists ruby-$v 2>/dev/null`
         if test "x$?" = "x0" ; then
             RUBY_VERSION=`$PKGCONFIG --modversion ruby-$v`
