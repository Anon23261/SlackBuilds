diff -Naupr a/virtinst/osdict.py b/virtinst/osdict.py
--- a/virtinst/osdict.py	2018-10-13 20:59:42.000000000 +0200
+++ b/virtinst/osdict.py	2019-01-26 10:25:07.604262115 +0100
@@ -121,6 +121,7 @@ class _OSDB(object):
         "rhel5": "rhel5.0",
         "rhel6": "rhel6.0",
         "rhel7": "rhel7.0",
+        "slackware": "slackware14.2",
         "ubuntuhardy": "ubuntu8.04",
         "ubuntuintrepid": "ubuntu8.10",
         "ubuntujaunty": "ubuntu9.04",
diff -Naupr a/virtinst/urldetect.py b/virtinst/urldetect.py
--- a/virtinst/urldetect.py	2018-10-13 20:26:55.000000000 +0200
+++ b/virtinst/urldetect.py	2019-01-26 10:29:18.720122735 +0100
@@ -834,6 +834,41 @@ class GenericTreeinfoDistro(Distro):
 
         self._kernel_paths = self.cache.get_treeinfo_media(self.type)
 
+class SlackwareDistro(Distro):
+    # slackware doesn't have installable URLs, so this is just for a
+    # mounted ISO
+    name = "Slackware"
+    urldistro = "slackware"
+    os_variant = "linux"
+
+    _boot_iso_paths = []
+    _xen_kernel_paths = []
+
+    def __init__(self, *args, **kwargs):
+        Distro.__init__(self, *args, **kwargs)
+        if re.match(r'i[4-9]86', self.arch):
+            self.arch = 'i486'
+            self.kname = 'hugesmp.s'
+        else:
+            self.arch = 'x86_64'
+            self.kname = 'huge.s'
+
+        self._hvm_kernel_paths = [("kernels/%s/bzImage" % self.kname,
+                                    "isolinux/initrd.img")]
+
+    def isValidStore(self):
+        # Don't support any paravirt installs
+        if self.type is not None and self.type != "hvm":
+            return False
+
+        # Slackware website / media appear to have a Slackware-HOWTO
+        # file in top level which we can use as our 'magic'
+        # check for validity
+        if not self.fetcher.hasFile("Slackware-HOWTO"):
+            return False
+
+        logging.debug("Regex didn't match, not a %s distro", self.name)
+        return False
 
 # Build list of all *Distro classes
 def _build_distro_list():
