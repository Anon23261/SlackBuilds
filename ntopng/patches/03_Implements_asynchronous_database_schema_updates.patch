From d2a24e21102ed4ae4fdccd5528034e487ca46082 Mon Sep 17 00:00:00 2001
From: Simone Mainardi <simonemainardi@gmail.com>
Date: Mon, 4 Jul 2016 19:37:44 +0200
Subject: [PATCH] Implements asynchronous database schema updates

Database updates are now performed asynchronously.
The web server starts but notifies the user with a
'please wait' message until the updates are completed.
---
 include/DB.h                      |  1 +
 include/MySQLDB.h                 |  3 ++
 include/NetworkInterface.h        |  3 +-
 include/ntop_defines.h            |  1 +
 scripts/lua/inc/menu.lua          | 22 +----------
 scripts/lua/modules/lua_utils.lua | 23 ++++++++++++
 scripts/lua/please_wait.lua       | 70 +++++++++++++++++++++++++++++++++++
 src/HTTPserver.cpp                | 41 ++++++++++++++++++--
 src/MySQLDB.cpp                   | 78 +++++++++++++++++++++++++++------------
 src/main.cpp                      | 16 +++++++-
 10 files changed, 209 insertions(+), 49 deletions(-)
 create mode 100644 scripts/lua/please_wait.lua

diff --git a/include/DB.h b/include/DB.h
index f007cbb..2d9c625 100644
--- a/include/DB.h
+++ b/include/DB.h
@@ -36,6 +36,7 @@ class DB {
   virtual bool dumpFlow(time_t when, bool partial_dump, Flow *f, char *json);
   virtual int exec_sql_query(lua_State *vm, char *sql, bool limit_rows);
   virtual void startDBLoop();
+  virtual bool createDBSchema() {return false; /* override in non-schemaless subclasses */};
 };
 
 #endif /* _DB_CLASS_H_ */
diff --git a/include/MySQLDB.h b/include/MySQLDB.h
index b506ac2..e37cb4c 100644
--- a/include/MySQLDB.h
+++ b/include/MySQLDB.h
@@ -28,6 +28,7 @@ class MySQLDB : public DB {
  private:
   MYSQL mysql;
   bool db_operational;
+  static volatile bool db_created;
   pthread_t queryThreadLoop;
 
   bool connectToDB(MYSQL *conn, bool select_db);
@@ -41,6 +42,8 @@ class MySQLDB : public DB {
   ~MySQLDB();
 
   void* queryLoop();
+  bool createDBSchema();
+  static volatile bool isDbCreated() {return db_created;};
   bool dumpFlow(time_t when, bool partial_dump, Flow *f, char *json);
   int exec_sql_query(lua_State *vm, char *sql, bool limitRows);
   void startDBLoop();
diff --git a/include/NetworkInterface.h b/include/NetworkInterface.h
index 95b532e..15cf85f 100644
--- a/include/NetworkInterface.h
+++ b/include/NetworkInterface.h
@@ -345,8 +345,9 @@ class NetworkInterface {
 		      char *remoteProbeAddress, char *remoteProbePublicAddress,
 		      u_int64_t remBytes, u_int64_t remPkts, u_int32_t remote_time,
 		      u_int32_t last_pps, u_int32_t last_bps);
-  void startDBLoop() { if(db) db->startDBLoop(); };
   void getFlowsStatus(lua_State *vm);
+  void startDBLoop() { if(db) db->startDBLoop(); };
+  inline bool createDBSchema() {if(db) {return db->createDBSchema();} return false;};
 };
 
 #endif /* _NETWORK_INTERFACE_H_ */
diff --git a/include/ntop_defines.h b/include/ntop_defines.h
index 7cd6672..a03f57f 100644
--- a/include/ntop_defines.h
+++ b/include/ntop_defines.h
@@ -89,6 +89,7 @@
 
 #define MSG_VERSION               0
 #define LOGIN_URL                 "/lua/login.lua"
+#define PLEASE_WAIT_URL           "/lua/please_wait.lua"
 #define AUTHORIZE_URL             "/authorize.html"
 #define HTTP_SESSION_DURATION     43200
 #define CONST_HTTPS_CERT_NAME     "ntopng-cert.pem"
diff --git a/scripts/lua/inc/menu.lua b/scripts/lua/inc/menu.lua
index ce9d9ed..74e6bb2 100644
--- a/scripts/lua/inc/menu.lua
+++ b/scripts/lua/inc/menu.lua
@@ -299,27 +299,7 @@ end
 print("<img src=\""..logo_path.."\">")
 end
 
-print [[
-<svg width="103px" height="50px" viewBox="0 0 103 50" version="1.1" xmlns="http://www.w3.org/2000/svg">
-<path fill="#fbfbfb" d=" M 0.00 0.00 L 103.00 0.00 L 103.00 50.00 L 0.00 50.00 L 0.00 0.00 Z" />
-<path fill="#e0dfdf" d=" M 4.85 1.48 C 6.22 1.31 7.60 1.22 8.98 1.21 C 37.00 1.18 65.02 1.25 93.03 1.19 C 95.53 1.45 98.91 1.02 100.31 3.63 C 101.57 5.50 101.41 7.84 101.46 9.98 C 101.41 20.66 101.49 31.34 101.42 42.02 C 101.47 44.44 100.55 47.12 98.30 48.31 C 95.68 49.45 92.76 48.78 90.01 48.81 C 65.02 48.80 40.02 48.83 15.02 48.80 C 11.70 48.82 8.35 49.28 5.04 48.72 L 5.39 47.64 C 8.24 47.83 11.09 48.07 13.95 48.13 C 39.31 48.15 64.66 48.12 90.02 48.15 C 92.91 48.15 95.79 47.82 98.63 47.31 C 98.05 46.60 97.37 45.99 96.61 45.49 L 95.99 45.06 C 96.80 44.80 98.40 44.30 99.21 44.04 L 99.36 44.03 C 99.50 44.03 99.79 44.02 99.93 44.01 C 100.48 31.44 100.36 18.75 100.14 6.16 C 99.85 5.82 99.28 5.16 99.00 4.83 L 98.05 4.18 C 97.44 3.75 96.83 3.33 96.22 2.91 C 95.08 1.78 93.46 1.86 91.98 1.84 C 65.31 2.00 38.64 1.81 11.97 1.92 C 9.59 1.93 7.19 1.95 4.85 1.48 Z" />
-<path fill="#fdc28e" d=" M 2.40 4.64 C 3.22 4.02 4.05 3.42 4.88 2.81 C 35.32 2.80 65.78 2.61 96.22 2.91 C 96.83 3.33 97.44 3.75 98.05 4.18 C 97.94 10.99 97.98 17.80 98.03 24.61 C 94.33 24.55 90.63 24.55 86.93 24.61 C 87.03 20.61 85.58 16.14 81.83 14.17 C 79.15 12.57 75.83 13.14 73.29 14.71 C 72.19 14.27 71.09 13.86 69.98 13.48 C 68.39 13.87 67.26 15.25 67.53 16.92 C 67.45 19.53 67.54 22.13 67.52 24.74 C 67.13 24.69 66.35 24.59 65.97 24.55 C 65.86 21.70 65.76 18.50 63.66 16.31 C 60.13 12.15 52.85 12.14 49.37 16.37 C 47.35 18.58 46.81 21.64 46.81 24.53 C 45.41 24.56 44.01 24.59 42.61 24.62 C 42.59 22.97 42.57 21.32 42.60 19.68 C 43.90 19.29 45.26 19.07 46.53 18.57 C 47.29 17.40 47.41 15.65 46.54 14.51 C 45.32 14.03 44.05 13.72 42.73 13.58 C 42.78 10.95 42.74 6.67 38.89 7.30 C 36.49 8.54 37.22 11.38 36.92 13.57 C 34.23 13.50 32.07 16.35 34.12 18.59 C 34.83 18.84 36.25 19.33 36.97 19.58 C 37.12 21.25 37.06 22.92 37.06 24.59 C 35.75 24.59 34.44 24.59 33.14 24.61 C 32.96 21.36 33.89 17.35 31.15 14.90 C 28.35 12.51 24.15 12.89 21.14 14.66 C 19.28 13.73 16.40 12.75 15.43 15.37 C 15.10 18.44 15.36 21.53 15.28 24.61 C 11.08 24.54 6.88 24.58 2.69 24.58 C 2.10 17.97 2.69 11.28 2.40 4.64 Z" />
-<path fill="#fde2cb" d=" M 98.05 4.18 L 99.00 4.83 C 99.13 17.89 98.72 31.00 99.36 44.03 L 99.21 44.04 L 97.99 43.66 C 98.18 37.32 98.14 30.96 98.03 24.61 C 97.98 17.80 97.94 10.99 98.05 4.18 Z" />
-<path fill="#919191" d=" M 99.00 4.83 C 99.28 5.16 99.85 5.82 100.14 6.16 C 100.36 18.75 100.48 31.44 99.93 44.01 C 99.79 44.02 99.50 44.03 99.36 44.03 C 98.72 31.00 99.13 17.89 99.00 4.83 Z" />
-<path fill="#ffffff" d=" M 36.92 13.57 C 37.22 11.38 36.49 8.54 38.89 7.30 C 42.74 6.67 42.78 10.95 42.73 13.58 C 44.05 13.72 45.32 14.03 46.54 14.51 C 47.41 15.65 47.29 17.40 46.53 18.57 C 45.26 19.07 43.90 19.29 42.60 19.68 C 42.57 21.32 42.59 22.97 42.61 24.62 C 42.16 27.60 44.14 33.15 39.86 33.86 C 35.40 33.43 37.57 27.54 37.06 24.59 C 37.06 22.92 37.12 21.25 36.97 19.58 C 36.25 19.33 34.83 18.84 34.12 18.59 C 32.07 16.35 34.23 13.50 36.92 13.57 Z" />
-<path fill="#ffffff" d=" M 21.14 14.66 C 24.15 12.89 28.35 12.51 31.15 14.90 C 33.89 17.35 32.96 21.36 33.14 24.61 C 33.05 27.07 33.29 29.54 32.95 31.99 C 32.16 34.62 27.92 34.40 27.34 31.72 C 27.19 29.35 27.31 26.98 27.29 24.61 C 27.51 22.14 27.48 18.11 24.05 18.23 C 20.81 18.41 20.90 22.23 21.02 24.62 C 20.99 27.08 21.12 29.55 20.95 32.01 C 20.07 34.59 15.97 34.42 15.33 31.76 C 15.20 29.38 15.32 26.99 15.28 24.61 C 15.36 21.53 15.10 18.44 15.43 15.37 C 16.40 12.75 19.28 13.73 21.14 14.66 Z" />
-<path fill="#ffffff" d=" M 49.37 16.37 C 52.85 12.14 60.13 12.15 63.66 16.31 C 65.76 18.50 65.86 21.70 65.97 24.55 C 66.06 29.16 62.74 33.71 57.98 34.13 C 52.20 35.30 46.89 30.21 46.81 24.53 C 46.81 21.64 47.35 18.58 49.37 16.37 Z" />
-<path fill="#ffffff" d=" M 73.29 14.71 C 75.83 13.14 79.15 12.57 81.83 14.17 C 85.58 16.14 87.03 20.61 86.93 24.61 C 86.64 28.43 84.48 32.37 80.78 33.78 C 78.26 34.69 75.60 34.08 73.23 33.05 C 73.25 35.33 73.62 37.68 73.06 39.92 C 72.06 42.49 67.59 41.88 67.55 39.02 C 67.45 34.26 67.54 29.50 67.52 24.74 C 67.54 22.13 67.45 19.53 67.53 16.92 C 67.26 15.25 68.39 13.87 69.98 13.48 C 71.09 13.86 72.19 14.27 73.29 14.71 Z" />
-<path fill="#fdc28e" d=" M 21.02 24.62 C 20.90 22.23 20.81 18.41 24.05 18.23 C 27.48 18.11 27.51 22.14 27.29 24.61 C 25.20 24.57 23.11 24.57 21.02 24.62 Z" />
-<path fill="#fdc28e" d=" M 52.65 24.61 C 52.24 21.99 53.91 18.42 57.03 18.94 C 59.66 19.25 60.63 22.31 60.35 24.61 C 57.79 24.56 55.22 24.56 52.65 24.61 Z" />
-<path fill="#fdc28e" d=" M 72.96 25.45 C 73.30 22.95 73.64 19.11 76.92 18.92 C 80.68 18.62 81.33 23.07 81.11 25.88 L 80.87 25.48 L 80.33 24.57 C 78.09 24.72 75.61 24.01 73.55 25.17 L 72.96 25.45 Z" />
-<path fill="#fc8a21" d=" M 2.69 24.58 C 6.88 24.58 11.08 24.54 15.28 24.61 C 15.32 26.99 15.20 29.38 15.33 31.76 C 15.97 34.42 20.07 34.59 20.95 32.01 C 21.12 29.55 20.99 27.08 21.02 24.62 C 23.11 24.57 25.20 24.57 27.29 24.61 C 27.31 26.98 27.19 29.35 27.34 31.72 C 27.92 34.40 32.16 34.62 32.95 31.99 C 33.29 29.54 33.05 27.07 33.14 24.61 C 34.44 24.59 35.75 24.59 37.06 24.59 C 37.57 27.54 35.40 33.43 39.86 33.86 C 44.14 33.15 42.16 27.60 42.61 24.62 C 44.01 24.59 45.41 24.56 46.81 24.53 C 46.89 30.21 52.20 35.30 57.98 34.13 C 62.74 33.71 66.06 29.16 65.97 24.55 C 66.35 24.59 67.13 24.69 67.52 24.74 C 67.54 29.50 67.45 34.26 67.55 39.02 C 67.59 41.88 72.06 42.49 73.06 39.92 C 73.62 37.68 73.25 35.33 73.23 33.05 C 75.60 34.08 78.26 34.69 80.78 33.78 C 84.48 32.37 86.64 28.43 86.93 24.61 C 90.63 24.55 94.33 24.55 98.03 24.61 C 98.14 30.96 98.18 37.32 97.99 43.66 L 99.21 44.04 C 98.40 44.30 96.80 44.80 95.99 45.06 C 65.83 44.97 35.66 44.94 5.50 45.07 L 4.31 45.05 C 3.90 44.64 3.08 43.80 2.67 43.38 C 2.79 37.12 2.76 30.84 2.69 24.58 Z" />
-<path fill="#fc8a21" d=" M 52.65 24.61 C 55.22 24.56 57.79 24.56 60.35 24.61 C 60.25 27.09 57.56 29.61 55.11 28.23 C 53.54 27.78 53.08 25.97 52.65 24.61 Z" />
-<path fill="#fc8a21" d=" M 73.55 25.17 C 75.61 24.01 78.09 24.72 80.33 24.57 L 80.87 25.48 C 80.22 29.65 73.76 29.42 73.55 25.17 Z" />
-<path fill="#fdb26d" d=" M 5.50 45.07 C 35.66 44.94 65.83 44.97 95.99 45.06 L 96.61 45.49 C 94.20 46.38 91.57 45.86 89.06 46.00 C 60.87 45.86 32.65 46.28 4.48 45.79 L 5.50 45.07 Z" />
-<path fill="#a2a2a2" d=" M 2.04 44.37 L 4.48 45.79 C 32.65 46.28 60.87 45.86 89.06 46.00 C 91.57 45.86 94.20 46.38 96.61 45.49 C 97.37 45.99 98.05 46.60 98.63 47.31 C 95.79 47.82 92.91 48.15 90.02 48.15 C 64.66 48.12 39.31 48.15 13.95 48.13 C 11.09 48.07 8.24 47.83 5.39 47.64 C 4.55 46.82 2.87 45.19 2.04 44.37 Z" />
-</svg>
-]]
+addLogoSvg()
 
 print("</A></h3>\n</div>\n")
 
diff --git a/scripts/lua/modules/lua_utils.lua b/scripts/lua/modules/lua_utils.lua
index 5bba594..3f218d8 100644
--- a/scripts/lua/modules/lua_utils.lua
+++ b/scripts/lua/modules/lua_utils.lua
@@ -947,6 +947,29 @@ function isIPv6(ip)
   return true
 end
 
+function addLogoSvg()
+   print [[
+<svg width="103px" height="50px" viewBox="0 0 103 50" version="1.1" xmlns="http://www.w3.org/2000/svg">
+<path fill="#fbfbfb" d=" M 0.00 0.00 L 103.00 0.00 L 103.00 50.00 L 0.00 50.00 L 0.00 0.00 Z" />
+<path fill="#e0dfdf" d=" M 4.85 1.48 C 6.22 1.31 7.60 1.22 8.98 1.21 C 37.00 1.18 65.02 1.25 93.03 1.19 C 95.53 1.45 98.91 1.02 100.31 3.63 C 101.57 5.50 101.41 7.84 101.46 9.98 C 101.41 20.66 101.49 31.34 101.42 42.02 C 101.47 44.44 100.55 47.12 98.30 48.31 C 95.68 49.45 92.76 48.78 90.01 48.81 C 65.02 48.80 40.02 48.83 15.02 48.80 C 11.70 48.82 8.35 49.28 5.04 48.72 L 5.39 47.64 C 8.24 47.83 11.09 48.07 13.95 48.13 C 39.31 48.15 64.66 48.12 90.02 48.15 C 92.91 48.15 95.79 47.82 98.63 47.31 C 98.05 46.60 97.37 45.99 96.61 45.49 L 95.99 45.06 C 96.80 44.80 98.40 44.30 99.21 44.04 L 99.36 44.03 C 99.50 44.03 99.79 44.02 99.93 44.01 C 100.48 31.44 100.36 18.75 100.14 6.16 C 99.85 5.82 99.28 5.16 99.00 4.83 L 98.05 4.18 C 97.44 3.75 96.83 3.33 96.22 2.91 C 95.08 1.78 93.46 1.86 91.98 1.84 C 65.31 2.00 38.64 1.81 11.97 1.92 C 9.59 1.93 7.19 1.95 4.85 1.48 Z" />
+<path fill="#fdc28e" d=" M 2.40 4.64 C 3.22 4.02 4.05 3.42 4.88 2.81 C 35.32 2.80 65.78 2.61 96.22 2.91 C 96.83 3.33 97.44 3.75 98.05 4.18 C 97.94 10.99 97.98 17.80 98.03 24.61 C 94.33 24.55 90.63 24.55 86.93 24.61 C 87.03 20.61 85.58 16.14 81.83 14.17 C 79.15 12.57 75.83 13.14 73.29 14.71 C 72.19 14.27 71.09 13.86 69.98 13.48 C 68.39 13.87 67.26 15.25 67.53 16.92 C 67.45 19.53 67.54 22.13 67.52 24.74 C 67.13 24.69 66.35 24.59 65.97 24.55 C 65.86 21.70 65.76 18.50 63.66 16.31 C 60.13 12.15 52.85 12.14 49.37 16.37 C 47.35 18.58 46.81 21.64 46.81 24.53 C 45.41 24.56 44.01 24.59 42.61 24.62 C 42.59 22.97 42.57 21.32 42.60 19.68 C 43.90 19.29 45.26 19.07 46.53 18.57 C 47.29 17.40 47.41 15.65 46.54 14.51 C 45.32 14.03 44.05 13.72 42.73 13.58 C 42.78 10.95 42.74 6.67 38.89 7.30 C 36.49 8.54 37.22 11.38 36.92 13.57 C 34.23 13.50 32.07 16.35 34.12 18.59 C 34.83 18.84 36.25 19.33 36.97 19.58 C 37.12 21.25 37.06 22.92 37.06 24.59 C 35.75 24.59 34.44 24.59 33.14 24.61 C 32.96 21.36 33.89 17.35 31.15 14.90 C 28.35 12.51 24.15 12.89 21.14 14.66 C 19.28 13.73 16.40 12.75 15.43 15.37 C 15.10 18.44 15.36 21.53 15.28 24.61 C 11.08 24.54 6.88 24.58 2.69 24.58 C 2.10 17.97 2.69 11.28 2.40 4.64 Z" />
+<path fill="#fde2cb" d=" M 98.05 4.18 L 99.00 4.83 C 99.13 17.89 98.72 31.00 99.36 44.03 L 99.21 44.04 L 97.99 43.66 C 98.18 37.32 98.14 30.96 98.03 24.61 C 97.98 17.80 97.94 10.99 98.05 4.18 Z" />
+<path fill="#919191" d=" M 99.00 4.83 C 99.28 5.16 99.85 5.82 100.14 6.16 C 100.36 18.75 100.48 31.44 99.93 44.01 C 99.79 44.02 99.50 44.03 99.36 44.03 C 98.72 31.00 99.13 17.89 99.00 4.83 Z" />
+<path fill="#ffffff" d=" M 36.92 13.57 C 37.22 11.38 36.49 8.54 38.89 7.30 C 42.74 6.67 42.78 10.95 42.73 13.58 C 44.05 13.72 45.32 14.03 46.54 14.51 C 47.41 15.65 47.29 17.40 46.53 18.57 C 45.26 19.07 43.90 19.29 42.60 19.68 C 42.57 21.32 42.59 22.97 42.61 24.62 C 42.16 27.60 44.14 33.15 39.86 33.86 C 35.40 33.43 37.57 27.54 37.06 24.59 C 37.06 22.92 37.12 21.25 36.97 19.58 C 36.25 19.33 34.83 18.84 34.12 18.59 C 32.07 16.35 34.23 13.50 36.92 13.57 Z" />
+<path fill="#ffffff" d=" M 21.14 14.66 C 24.15 12.89 28.35 12.51 31.15 14.90 C 33.89 17.35 32.96 21.36 33.14 24.61 C 33.05 27.07 33.29 29.54 32.95 31.99 C 32.16 34.62 27.92 34.40 27.34 31.72 C 27.19 29.35 27.31 26.98 27.29 24.61 C 27.51 22.14 27.48 18.11 24.05 18.23 C 20.81 18.41 20.90 22.23 21.02 24.62 C 20.99 27.08 21.12 29.55 20.95 32.01 C 20.07 34.59 15.97 34.42 15.33 31.76 C 15.20 29.38 15.32 26.99 15.28 24.61 C 15.36 21.53 15.10 18.44 15.43 15.37 C 16.40 12.75 19.28 13.73 21.14 14.66 Z" />
+<path fill="#ffffff" d=" M 49.37 16.37 C 52.85 12.14 60.13 12.15 63.66 16.31 C 65.76 18.50 65.86 21.70 65.97 24.55 C 66.06 29.16 62.74 33.71 57.98 34.13 C 52.20 35.30 46.89 30.21 46.81 24.53 C 46.81 21.64 47.35 18.58 49.37 16.37 Z" />
+<path fill="#ffffff" d=" M 73.29 14.71 C 75.83 13.14 79.15 12.57 81.83 14.17 C 85.58 16.14 87.03 20.61 86.93 24.61 C 86.64 28.43 84.48 32.37 80.78 33.78 C 78.26 34.69 75.60 34.08 73.23 33.05 C 73.25 35.33 73.62 37.68 73.06 39.92 C 72.06 42.49 67.59 41.88 67.55 39.02 C 67.45 34.26 67.54 29.50 67.52 24.74 C 67.54 22.13 67.45 19.53 67.53 16.92 C 67.26 15.25 68.39 13.87 69.98 13.48 C 71.09 13.86 72.19 14.27 73.29 14.71 Z" />
+<path fill="#fdc28e" d=" M 21.02 24.62 C 20.90 22.23 20.81 18.41 24.05 18.23 C 27.48 18.11 27.51 22.14 27.29 24.61 C 25.20 24.57 23.11 24.57 21.02 24.62 Z" />
+<path fill="#fdc28e" d=" M 52.65 24.61 C 52.24 21.99 53.91 18.42 57.03 18.94 C 59.66 19.25 60.63 22.31 60.35 24.61 C 57.79 24.56 55.22 24.56 52.65 24.61 Z" />
+<path fill="#fdc28e" d=" M 72.96 25.45 C 73.30 22.95 73.64 19.11 76.92 18.92 C 80.68 18.62 81.33 23.07 81.11 25.88 L 80.87 25.48 L 80.33 24.57 C 78.09 24.72 75.61 24.01 73.55 25.17 L 72.96 25.45 Z" />
+<path fill="#fc8a21" d=" M 2.69 24.58 C 6.88 24.58 11.08 24.54 15.28 24.61 C 15.32 26.99 15.20 29.38 15.33 31.76 C 15.97 34.42 20.07 34.59 20.95 32.01 C 21.12 29.55 20.99 27.08 21.02 24.62 C 23.11 24.57 25.20 24.57 27.29 24.61 C 27.31 26.98 27.19 29.35 27.34 31.72 C 27.92 34.40 32.16 34.62 32.95 31.99 C 33.29 29.54 33.05 27.07 33.14 24.61 C 34.44 24.59 35.75 24.59 37.06 24.59 C 37.57 27.54 35.40 33.43 39.86 33.86 C 44.14 33.15 42.16 27.60 42.61 24.62 C 44.01 24.59 45.41 24.56 46.81 24.53 C 46.89 30.21 52.20 35.30 57.98 34.13 C 62.74 33.71 66.06 29.16 65.97 24.55 C 66.35 24.59 67.13 24.69 67.52 24.74 C 67.54 29.50 67.45 34.26 67.55 39.02 C 67.59 41.88 72.06 42.49 73.06 39.92 C 73.62 37.68 73.25 35.33 73.23 33.05 C 75.60 34.08 78.26 34.69 80.78 33.78 C 84.48 32.37 86.64 28.43 86.93 24.61 C 90.63 24.55 94.33 24.55 98.03 24.61 C 98.14 30.96 98.18 37.32 97.99 43.66 L 99.21 44.04 C 98.40 44.30 96.80 44.80 95.99 45.06 C 65.83 44.97 35.66 44.94 5.50 45.07 L 4.31 45.05 C 3.90 44.64 3.08 43.80 2.67 43.38 C 2.79 37.12 2.76 30.84 2.69 24.58 Z" />
+<path fill="#fc8a21" d=" M 52.65 24.61 C 55.22 24.56 57.79 24.56 60.35 24.61 C 60.25 27.09 57.56 29.61 55.11 28.23 C 53.54 27.78 53.08 25.97 52.65 24.61 Z" />
+<path fill="#fc8a21" d=" M 73.55 25.17 C 75.61 24.01 78.09 24.72 80.33 24.57 L 80.87 25.48 C 80.22 29.65 73.76 29.42 73.55 25.17 Z" />
+<path fill="#fdb26d" d=" M 5.50 45.07 C 35.66 44.94 65.83 44.97 95.99 45.06 L 96.61 45.49 C 94.20 46.38 91.57 45.86 89.06 46.00 C 60.87 45.86 32.65 46.28 4.48 45.79 L 5.50 45.07 Z" />
+<path fill="#a2a2a2" d=" M 2.04 44.37 L 4.48 45.79 C 32.65 46.28 60.87 45.86 89.06 46.00 C 91.57 45.86 94.20 46.38 96.61 45.49 C 97.37 45.99 98.05 46.60 98.63 47.31 C 95.79 47.82 92.91 48.15 90.02 48.15 C 64.66 48.12 39.31 48.15 13.95 48.13 C 11.09 48.07 8.24 47.83 5.39 47.64 C 4.55 46.82 2.87 45.19 2.04 44.37 Z" />
+</svg>
+]]
+end
 
 function addGauge(name, url, maxValue, width, height)
   if(url ~= nil) then print('<A HREF="'..url..'">') end
diff --git a/scripts/lua/please_wait.lua b/scripts/lua/please_wait.lua
new file mode 100644
index 0000000..8b5d402
--- /dev/null
+++ b/scripts/lua/please_wait.lua
@@ -0,0 +1,70 @@
+--
+-- (C) 2013-16 - ntop.org
+--
+
+dirs = ntop.getDirs()
+package.path = dirs.installdir .. "/scripts/lua/modules/?.lua;" .. package.path
+-- io.write ("Session:".._SESSION["session"].."\n")
+require "lua_utils"
+
+sendHTTPHeader('text/html; charset=iso-8859-1')
+
+ntop.dumpFile(dirs.installdir .. "/httpdocs/inc/header.inc")
+
+print [[
+  <div class="container-narrow">
+
+
+
+ <style type="text/css">
+      body {
+        padding-top: 40px;
+        padding-bottom: 40px;
+        background-color: #f5f5f5;
+   }
+
+      .please-wait {
+        max-width: 350px;
+        padding: 9px 29px 29px;
+        margin: 0 auto 20px;
+        background-color: #fff;
+        border: 1px solid #e5e5e5;
+        -webkit-border-radius: 5px;
+           -moz-border-radius: 5px;
+                border-radius: 5px;
+          -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.05);
+       -moz-box-shadow: 0 1px 2px rgba(0,0,0,.05);
+      box-shadow: 0 1px 2px rgba(0,0,0,.05);
+   }
+      .please-wait .please-wait-heading,
+
+    </style>
+
+<div class="container please-wait">
+  <div style="text-align: center; vertical-align: middle">
+]]
+
+addLogoSvg()
+
+print[[
+  </div>
+  <div>
+]]
+print("<img border=0 src=".. ntop.getHttpPrefix() .. "/img/throbber.gif style=\"vertical-align:text-top;\" id=throbber> ")
+
+print[[
+The database schema is being updated to include the most recent changes. Please wait, this is normal.
+You will be redirected as soon as the changes take effect.
+  </div>
+</div> <!-- /container -->
+
+<script type="text/javascript">
+var intervalID = setInterval(
+  function() {
+   window.location.replace("]] print(ntop.getHttpPrefix().._GET["referer"]) print[[");
+  },
+  5000);
+</script>
+</body>
+</html>
+]]
diff --git a/src/HTTPserver.cpp b/src/HTTPserver.cpp
index 4cc3cfd..4d31ff1 100644
--- a/src/HTTPserver.cpp
+++ b/src/HTTPserver.cpp
@@ -160,12 +160,14 @@ static int is_authorized(const struct mg_connection *conn,
 
   // Always authorize accesses to login page and to authorize URI
   if((!strcmp(request_info->uri, LOGIN_URL))
-     || (!strcmp(request_info->uri, AUTHORIZE_URL))) {
+     || (!strcmp(request_info->uri, AUTHORIZE_URL))
+     || (!strcmp(request_info->uri, PLEASE_WAIT_URL))) {
     return 1;
   }
 
-  if((!strcmp(request_info->uri, Utils::getURL((char*)LOGIN_URL, buf, sizeof(buf))))
-     || (!strcmp(request_info->uri, Utils::getURL((char*)AUTHORIZE_URL, buf, sizeof(buf))))) {
+  if((!strcmp(request_info->uri, Utils::getURL((char*)LOGIN_URL,          buf, sizeof(buf))))
+     || (!strcmp(request_info->uri, Utils::getURL((char*)AUTHORIZE_URL,   buf, sizeof(buf))))
+     || (!strcmp(request_info->uri, Utils::getURL((char*)PLEASE_WAIT_URL, buf, sizeof(buf))))) {
     return 1;
   }
 
@@ -255,6 +257,33 @@ static void redirect_to_login(struct mg_connection *conn,
 
 /* ****************************************** */
 
+/* Redirect user to a coutersy page that is used when database schema is being updated.
+   In the cookie, store the original URL we came from, so that after the authorization
+   we could redirect back.
+*/
+static void redirect_to_please_wait(struct mg_connection *conn,
+				    const struct mg_request_info *request_info) {
+  char session_id[33], buf[128];
+
+  mg_get_cookie(conn, "session", session_id, sizeof(session_id));
+  ntop->getTrace()->traceEvent(TRACE_INFO, "[HTTP] %s(%s)", __FUNCTION__, session_id);
+
+  mg_printf(conn,
+	    "HTTP/1.1 302 Found\r\n"
+	    // "HTTP/1.1 401 Unauthorized\r\n"
+	    // "WWW-Authenticate: Basic\r\n"
+	    "Set-Cookie: session=%s; path=/; expires=Thu, 01-Jan-1970 00:00:01 GMT; max-age=0; HttpOnly\r\n"  // Session ID
+	    "Location: %s%s?referer=%s%s%s\r\n\r\n",
+	    session_id,
+	    ntop->getPrefs()->get_http_prefix(),
+	    Utils::getURL((char*)PLEASE_WAIT_URL, buf, sizeof(buf)),
+	    conn->request_info.uri,
+	    conn->request_info.query_string ? "%3F" /* ? */: "",
+	    conn->request_info.query_string ? conn->request_info.query_string : "");
+}
+
+/* ****************************************** */
+
 static void get_qsvar(const struct mg_request_info *request_info,
                       const char *name, char *dst, size_t dst_len) {
   const char *qs = request_info->query_string;
@@ -335,6 +364,12 @@ static int handle_lua_request(struct mg_connection *conn) {
     return(send_error(conn, 403 /* Forbidden */, request_info->uri,
 		      "Unexpected HTTP method or ntopng still starting up..."));
 
+  if(ntop->getPrefs()->do_dump_flows_on_mysql()
+     && !MySQLDB::isDbCreated()
+     && strcmp(request_info->uri, PLEASE_WAIT_URL)){
+    redirect_to_please_wait(conn, request_info);
+  }
+
   if(ntop->get_HTTPserver()->is_ssl_enabled() && (!request_info->is_ssl))
     redirect_to_ssl(conn, request_info);
 
diff --git a/src/MySQLDB.cpp b/src/MySQLDB.cpp
index b9a1337..f5d0292 100644
--- a/src/MySQLDB.cpp
+++ b/src/MySQLDB.cpp
@@ -34,7 +34,12 @@ void* MySQLDB::queryLoop() {
   MYSQL mysql_alt;
   char sql[CONST_MAX_SQL_QUERY_LEN];
 
-  if(!connectToDB(&mysql_alt, true))
+  while(!ntop->getGlobals()->isShutdown()
+	&& !MySQLDB::isDbCreated() /* wait until the db has been created */) {
+    sleep(1);
+  }
+
+  if(ntop->getGlobals()->isShutdown() || !connectToDB(&mysql_alt, true))
     return(NULL);
 
   while(!ntop->getGlobals()->isShutdown()) {
@@ -62,24 +67,26 @@ void* MySQLDB::queryLoop() {
 }
 
 /* ******************************************* */
-
-MySQLDB::MySQLDB(NetworkInterface *_iface) : DB(_iface) {
+volatile bool MySQLDB::db_created = false;
+bool MySQLDB::createDBSchema() {
   char sql[CONST_MAX_SQL_QUERY_LEN];
 
-  if(connectToDB(&mysql, false) == false)
-    return;
-
   if(iface) {
+    if(connectToDB(&mysql, false) == false){
+      ntop->getTrace()->traceEvent(TRACE_ERROR, "Unable to connect: %s\n", get_last_db_error(&mysql));
+      return false;
+    }
+
     /* 1 - Create database if missing */
-    snprintf(sql, sizeof(sql), "CREATE DATABASE IF NOT EXISTS %s", ntop->getPrefs()->get_mysql_dbname());
+    snprintf(sql, sizeof(sql), "CREATE DATABASE IF NOT EXISTS `%s`", ntop->getPrefs()->get_mysql_dbname());
     if(exec_sql_query(&mysql, sql, true) < 0) {
       ntop->getTrace()->traceEvent(TRACE_ERROR, "MySQL error: %s\n", get_last_db_error(&mysql));
-      return;
+      return false;
     }
 
     if(mysql_select_db(&mysql, ntop->getPrefs()->get_mysql_dbname())) {
       ntop->getTrace()->traceEvent(TRACE_ERROR, "MySQL error: %s\n", get_last_db_error(&mysql));
-      return;
+      return false;
     }
 
     /* 2.1 - Create table if missing [IPv6] */
@@ -116,7 +123,7 @@ MySQLDB::MySQLDB(NetworkInterface *_iface) : DB(_iface) {
 
     if(exec_sql_query(&mysql, sql, true) < 0) {
       ntop->getTrace()->traceEvent(TRACE_ERROR, "MySQL error: %s\n", get_last_db_error(&mysql));
-      return;
+      return false;
     }
 
     /* 2.2 - Create table if missing [IPv4] */
@@ -153,7 +160,7 @@ MySQLDB::MySQLDB(NetworkInterface *_iface) : DB(_iface) {
 
     if(exec_sql_query(&mysql, sql, true) < 0) {
       ntop->getTrace()->traceEvent(TRACE_ERROR, "MySQL error: %s\n", get_last_db_error(&mysql));
-      return;
+      return false;
     }
 
     // the remainder of this method has the purpose of MIGRATING old table structures to
@@ -290,8 +297,15 @@ MySQLDB::MySQLDB(NetworkInterface *_iface) : DB(_iface) {
   // note that this operation will arbitrarily move the old BYTES contents to BYTES_IN
   const u_int16_t ipvers[2] = {4, 6};
   for (u_int16_t i = 0; i < sizeof(ipvers); i++){
-    snprintf(sql, sizeof(sql), "SHOW COLUMNS FROM `%sv%hu` LIKE 'BYTES'",
-	     ntop->getPrefs()->get_mysql_tablename(), ipvers[i]);
+    snprintf(sql, sizeof(sql),
+	     "SELECT 1 "
+	     "FROM information_schema.COLUMNS "
+	     "WHERE TABLE_SCHEMA='%s' "
+	     "AND TABLE_NAME='%sv%hu' "
+	     "AND COLUMN_NAME='BYTES' ",
+	     ntop->getPrefs()->get_mysql_dbname(),
+	     ntop->getPrefs()->get_mysql_tablename(),
+	     ipvers[i]);
     if(exec_sql_query(&mysql, sql, true, true) > 0){
       // if here, the column BYTES exists so we want to alter the table
       ntop->getTrace()->traceEvent(TRACE_NORMAL,
@@ -332,6 +346,15 @@ MySQLDB::MySQLDB(NetworkInterface *_iface) : DB(_iface) {
       exec_sql_query(&mysql, sql, true, true);
     }
   }
+
+  db_created = true;
+  return true;
+}
+
+/* ******************************************* */
+
+MySQLDB::MySQLDB(NetworkInterface *_iface) : DB(_iface) {
+  connectToDB(&mysql, false);
 }
 
 /* ******************************************* */
@@ -375,7 +398,7 @@ bool MySQLDB::dumpFlow(time_t when, bool partial_dump, Flow *f, char *json) {
   u_int32_t packets, first_seen, last_seen;
   u_int32_t bytes_cli2srv, bytes_srv2cli;
 
-  if((f->get_cli_host() == NULL) || (f->get_srv_host() == NULL))
+  if((f->get_cli_host() == NULL) || (f->get_srv_host() == NULL) || !MySQLDB::db_created)
     return(false);
 
   if(json == NULL)
@@ -553,6 +576,9 @@ int MySQLDB::exec_sql_query(MYSQL *conn, char *sql,
   int rc;
   MYSQL_RES *result;
 
+  /* Don't check db_created here. This method is private
+     so hopefully we know what we're doing.
+   */
   if(!db_operational)
     return(-2);
 
@@ -573,11 +599,11 @@ int MySQLDB::exec_sql_query(MYSQL *conn, char *sql,
 
 	return(exec_sql_query(conn, sql, false));
       } else
-	ntop->getTrace()->traceEvent(TRACE_INFO, "%s", sql);
+	ntop->getTrace()->traceEvent(TRACE_INFO, "[%s][%s]", get_last_db_error(conn), sql);
       break;
 
     default:
-      ntop->getTrace()->traceEvent(TRACE_INFO, "%s", sql);
+      ntop->getTrace()->traceEvent(TRACE_INFO, "[%s][%s]", get_last_db_error(conn), sql);
       break;
     }
 
@@ -588,7 +614,11 @@ int MySQLDB::exec_sql_query(MYSQL *conn, char *sql,
     // than a simple 0
     if((result = mysql_store_result(&mysql)) == NULL)
       rc = 0;  // unable to retrieve the result but still the query succeded
-    else{
+    else {
+      rc = mysql_num_rows(result);
+      ntop->getTrace()->traceEvent(TRACE_INFO,
+				   "Current result set has %lu rows",
+				   (unsigned long)rc);
       mysql_free_result(result);
       rc = mysql_num_rows(result);
     }
@@ -607,17 +637,14 @@ int MySQLDB::exec_sql_query(lua_State *vm, char *sql, bool limitRows) {
   char *fields[MYSQL_MAX_NUM_FIELDS] = { NULL };
   int num_fields, rc, num = 0;
 
-  if(!db_operational)
+  if(!MySQLDB::db_created /* Make sure the db exists before doing queries */
+     || !db_operational)
     return(-2);
 
   if(m) m->lock(__FILE__, __LINE__);
 
   if((rc = mysql_query(&mysql, sql)) != 0) {
-    rc = mysql_errno(&mysql);
-
-    ntop->getTrace()->traceEvent(TRACE_ERROR, "MySQL error: [%s][%d]",
-				 get_last_db_error(&mysql), rc);
-
+    /* retry */
     mysql_close(&mysql);
     if(m) m->unlock(__FILE__, __LINE__);
     connectToDB(&mysql, true);
@@ -630,6 +657,11 @@ int MySQLDB::exec_sql_query(lua_State *vm, char *sql, bool limitRows) {
   }
 
   if((rc != 0) || ((result = mysql_store_result(&mysql)) == NULL)) {
+    rc = mysql_errno(&mysql);
+
+    ntop->getTrace()->traceEvent(TRACE_ERROR, "MySQL error: [%s][%d]",
+				 get_last_db_error(&mysql), rc);
+
     lua_pushstring(vm, get_last_db_error(&mysql));
     if(m) m->unlock(__FILE__, __LINE__);
     return(rc);
diff --git a/src/main.cpp b/src/main.cpp
index d939d4c..2073cc9 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -270,6 +270,20 @@ int main(int argc, char *argv[])
   ntop->registerHTTPserver(new HTTPserver(prefs->get_http_port(),
 					  prefs->get_docs_dir(),
 					  prefs->get_scripts_dir()));
+
+  /*
+    If mysql flows dump is enabled, then it is necessary to create
+    and update the database schema
+   */
+  if(prefs->do_dump_flows_on_mysql()) {
+    /* create the schema only one time, no need to call it for every interface */
+    if(!ntop->getInterfaceAtId(0)->createDBSchema()){
+      ntop->getTrace()->traceEvent(TRACE_ERROR,
+				   "Unable to create database schema, quitting.");
+      exit(EXIT_FAILURE);
+    }
+  }
+
   /*
     We have created the network interface and thus changed user. Let's not check
     if we can write on the data directory
@@ -283,7 +297,7 @@ int main(int argc, char *argv[])
     ntop->getTrace()->traceEvent(TRACE_ERROR,
 				 "Unable to write on %s [%s]: please specify a different directory (-d)",
 				 ntop->get_working_dir(), path);
-    exit(0);
+    exit(EXIT_FAILURE);
   } else {
     fclose(fd); /* All right */
     unlink(path);
