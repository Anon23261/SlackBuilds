From 8feb269e8ef07a77a9bff92e13499af44e959f66 Mon Sep 17 00:00:00 2001
From: Andrej <andrej.rapoport@gmail.com>
Date: Thu, 24 Mar 2016 15:20:00 +0100
Subject: [PATCH] Fix both issues of the refresh() function: #2844 (promise
 called sometimes too soon) and #2812 (promise never called if no less files
 were declared).

---
 lib/less-browser/index.js | 73 +++++++++++++++++++++++++++++++----------------
 1 file changed, 48 insertions(+), 25 deletions(-)

diff --git a/lib/less-browser/index.js b/lib/less-browser/index.js
index b742188..ef3e831 100644
--- a/lib/less-browser/index.js
+++ b/lib/less-browser/index.js
@@ -225,34 +225,57 @@ module.exports = function(window, options) {
             fileManager.clearFileCache();
         }
         return new Promise(function (resolve, reject) {
-            var startTime, endTime, totalMilliseconds;
+            var startTime, endTime, totalMilliseconds, remainingSheets;
             startTime = endTime = new Date();
 
-            loadStyleSheets(function (e, css, _, sheet, webInfo) {
-                if (e) {
-                    errors.add(e, e.href || sheet.href);
-                    reject(e);
-                    return;
-                }
-                if (webInfo.local) {
-                    less.logger.info("loading " + sheet.href + " from cache.");
-                } else {
-                    less.logger.info("rendered " + sheet.href + " successfully.");
-                }
-                browser.createCSS(window.document, css, sheet);
-                less.logger.info("css for " + sheet.href + " generated in " + (new Date() - endTime) + 'ms');
-                if (webInfo.remaining === 0) {
-                    totalMilliseconds = new Date() - startTime;
-                    less.logger.info("less has finished. css generated in " + totalMilliseconds + 'ms');
-                    resolve({
-                        startTime: startTime,
-                        endTime: endTime,
-                        totalMilliseconds: totalMilliseconds,
-                        sheets: less.sheets.length
-                    });
-                }
+            // Set counter for remaining unprocessed sheets
+            remainingSheets = less.sheets.length;
+
+            if (remainingSheets === 0) {
+
                 endTime = new Date();
-            }, reload, modifyVars);
+                totalMilliseconds = endTime - startTime;
+                less.logger.info("less has finished, no sheets were loaded.");
+                resolve({
+                    startTime: startTime,
+                    endTime: endTime,
+                    totalMilliseconds: totalMilliseconds,
+                    sheets: less.sheets.length
+                });
+
+            } else {
+                // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array
+                loadStyleSheets(function (e, css, _, sheet, webInfo) {
+                    if (e) {
+                        errors.add(e, e.href || sheet.href);
+                        reject(e);
+                        return;
+                    }
+                    if (webInfo.local) {
+                        less.logger.info("loading " + sheet.href + " from cache.");
+                    } else {
+                        less.logger.info("rendered " + sheet.href + " successfully.");
+                    }
+                    browser.createCSS(window.document, css, sheet);
+                    less.logger.info("css for " + sheet.href + " generated in " + (new Date() - endTime) + 'ms');
+
+                    // Count completed sheet
+                    remainingSheets--;
+
+                    // Check if the last remaining sheet was processed and then call the promise
+                    if (remainingSheets === 0) {
+                        totalMilliseconds = new Date() - startTime;
+                        less.logger.info("less has finished. css generated in " + totalMilliseconds + 'ms');
+                        resolve({
+                            startTime: startTime,
+                            endTime: endTime,
+                            totalMilliseconds: totalMilliseconds,
+                            sheets: less.sheets.length
+                        });
+                    }
+                    endTime = new Date();
+                }, reload, modifyVars);
+            }
 
             loadStyles(modifyVars);
         });
