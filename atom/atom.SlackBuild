#!/bin/sh
#
# Slackware build script for atom
#
# Copyright 2013-2014 Dhaby Xiloj <slack.dhabyx@gmail.com>
# Copyright 2015-2018 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -eu

CWD=$(pwd)

PKGNAM=atom
SRCVERSION=1.27.1
VERSION=$(echo $SRCVERSION | tr - _ )
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
DELETE_CACHE=${DELETE_CACHE:-yes}
OUTPUT=${OUTPUT:-/tmp}

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    x86_64) ARCH=x86_64 ;;
    *) echo "Your platform $(uname -m) is not supported."
       exit 1
       ;;
  esac
fi
if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
else
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$SRCVERSION
tar xvf $CWD/$PKGNAM-$SRCVERSION.tar.gz || tar xvf $CWD/v$SRCVERSION.tar.gz || tar xvf $CWD/$SRCVERSION.tar.gz
cd $PKGNAM-$SRCVERSION

chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .


# Workaround for Node 10
sed -e 's|"electron-link": "0.2.0"|"electron-link": "../../electron-link"|' \
    -i script/package.json
cd ..
git clone https://github.com/atom/electron-link.git
cd electron-link
git checkout v0.2.0
sed -e 's/"leveldown": "^1.6.0"/"leveldown": "^2.0.1"/' -i package.json
npm install
npx babel src -d lib
cd node_modules/levelup
sed -e 's/"leveldown": "^1.1.0"/"leveldown": "^2.0.1"/' -i package.json

cd $TMP/$PKGNAM-$VERSION

./script/clean
./script/build --install=$PKG/usr

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a *.md docs $PKG/usr/doc/$PKGNAM-$VERSION
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

# Install icons
cd resources/app-icons/stable/png
for IMG in *.png; do
  DIR_NAME=${IMG%.*}x${IMG%.*}
  install -Dm644 $IMG $PKG/usr/share/icons/hicolor/$DIR_NAME/apps/$PKGNAM.png
done
cd -

# Install .desktop file
mkdir -p $PKG/usr/share/applications
sed -e 's/<%= appName %>/Atom/' \
  -e 's/<%= description %>/Hackable text editor/' \
  -e 's|^\(Exec=\).*|\1/usr/bin/atom %U|' \
  -e 's/<%= iconPath %>/atom/' \
  resources/linux/atom.desktop.in > $PKG/usr/share/applications/atom.desktop

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

if [ "$DELETE_CACHE" = "yes" ]; then
  ./script/clean
  rm -rf $TMP/npm-*
  rm -rf $TMP/electron-*
fi

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

