#!/bin/sh
#
# Slackware build script for atom
#
# Copyright 2013-2014 Dhaby Xiloj <slack.dhabyx@gmail.com>
# Copyright 2015 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#  notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

# Exit on most errors
set -eu

# Set variables:
CWD=$(pwd)

PRGNAM=${PRGNAM:-atom}
PKGNAM=$(echo ${PRGNAM} | tr A-Z a-z)
VERSION=${VERSION:-1.0.9}
PKGVERSION=$(echo ${VERSION} | tr - _)
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=${TMP}/package-${PKGNAM}
PKGDOCDIR="${PKG}/usr/doc/${PKGNAM}-${PKGVERSION}"

# Disable send metrics to Google Analytics module
DISABLE_METRICS=${DISABLE_METRICS:-yes}
# Clean cache data
DELETE_CACHE=${DELETE_CACHE:-yes}

deletecache() {
  if [ "$DELETE_CACHE" = "yes" ]; then
    # delete temporal data
    rm -rf ~/.atom/
    rm -rf /tmp/npm-*/
  fi
}
# Clean cache data on exit
trap deletecache EXIT

# Insert document files in this variable
DOCFILES="*.md docs"

# Automatically determine the architecture we're building on:
if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
    # Unless ${ARCH} is already set, use uname -m for all other archs:
    *) ARCH=$( uname -m ) ;;
  esac
fi

# Set compiling FLAGS
case "${ARCH}" in
  i[3-5]86)
  SLKCFLAGS="-O2 -march=${ARCH} -mtune=i686"; CHOST="i486"
  SLKLDFLAGS=""; LIBDIRSUFFIX=""
  ;;
  i686)
  SLKCFLAGS="-O2 -march=i686 -fomit-frame-pointer"; CHOST="i486"
  SLKLDFLAGS=""; LIBDIRSUFFIX=""
  ;;
  x86_64)
  SLKCFLAGS="-O2 -fPIC -fomit-frame-pointer"; CHOST="x86_64"
  SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
  ;;
  *)
  SLKCFLAGS="-O2"; CHOST=${ARCH}
  SLKLDFLAGS=""; LIBDIRSUFFIX=""
  ;;
esac


# Extract source and prepare:
rm -rf ${PKG}
mkdir -p ${TMP} ${PKG}
cd ${TMP}
rm -rf ${PRGNAM}-${VERSION}
tar xvf ${CWD}/${PRGNAM}-${VERSION}.tar.gz
cd ${PRGNAM}-${VERSION}

# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

if [ "$DISABLE_METRICS" = "yes" ]; then
  sed -e '/"metrics":/d' -e '/"exception-reporting":/d' -i package.json
fi

# Build and install:
mkdir -p destbuild
BUILD_DIR=${PWD}/destbuild

./script/build --build-dir ${BUILD_DIR}
./script/grunt --build-dir ${BUILD_DIR} --install-dir ${PKG}/usr install

# Strip binaries:
find ${PKG} | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find ${PKG} | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

# move apm symlink to atom-apm for prevent conflicts with apmd package.
mv ${PKG}/usr/bin/apm ${PKG}/usr/bin/atom-apm

# Add a slackbuild script:
install -Dm644 ${CWD}/${PKGNAM}.SlackBuild ${PKGDOCDIR}/${PKGNAM}.SlackBuild

# Add slack-desc
install -Dm644 ${CWD}/slack-desc ${PKG}/install/slack-desc

# Add an icon
install -Dm644 resources/${PKGNAM}.png ${PKG}/usr/share/pixmaps/${PKGNAM}.png

# move and configure .desktop file
mkdir -p ${PKG}/usr/share/applications
sed -e "s/<%= description %>/Hackable text editor/" \
  -e "s|<%= executable %>|/usr/bin/atom|"\
  -e "s|<%= iconName %>|atom|"\
  resources/linux/atom.desktop.in > ${PKG}/usr/share/applications/atom.desktop

# Add a doinst.sh
install -Dm644 ${CWD}/doinst.sh ${PKG}/install/doinst.sh

# Create package:
cd ${PKG}
/sbin/makepkg -l y -c n ${CWD}/${PKGNAM}-${PKGVERSION}-${ARCH}-${BUILD}${TAG}.txz

