#!/bin/sh
# Slackware build script for postfix (http://www.postfix.org)
#
# Copyright 2006, Alan Hicks, Lizella, GA (by slackbuilds.org)
# Copyright 2008-2015 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#  notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#

# IMPORTANT
#
#  Must have a postfix user and group  run this script
#
# # groupadd -g 200 postfix
# # useradd -u 200 -d /dev/null -s /bin/false -g postfix postfix
#
#  Must have a postdrop group to run this script
#
# # groupadd -g 201 postdrop
#
if ! grep ^postfix: /etc/passwd 2>&1 > /dev/null; then
  echo "You must have a postfix user and group to run this script"
  exit
elif ! grep ^postdrop: /etc/group 2>&1 > /dev/null; then
  echo "You must have a postdrop group to run this script"
  exit
fi

set -eu

CWD=$(pwd)

PRGNAM=${PRGNAM:-postfix}
VERSION=${VERSION:-3.0.3}
BUILD=${BUILD:-2}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="AAAREADME COMPATIBILITY COPYRIGHT HISTORY IPv6-ChangeLog LICENSE \
  PORTING RELEASE_NOTES* TLS_ACKNOWLEDGEMENTS TLS_CHANGES TLS_LICENSE \
  US_PATENT_6321267 implementation-notes examples README_FILES html"

# Insert config files in this variable.
NEWFILES="access aliases bounce.cf.default canonical generic header_checks \
main.cf main.cf.default master.cf relocated transport virtual"
  
if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
  i?86) ARCH=i686 ;;
  arm*) ARCH=arm ;;
  *) ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Set config parameters (Default values for the other parameters are fine)
CONFIG_PARAMS="shlib_directory=/usr/lib$LIBDIRSUFFIX/postfix \
manpage_directory=/usr/man \
readme_directory=/usr/doc/postfix/README_FILES \
meta_directory=/etc/postfix/meta \
sample_directory=/etc/postfix/sample \
html_directory=/usr/doc/postfix/html \
mail_owner=postfix \
setgid_group=postdrop"

make makefiles \
  shared="yes" \
  dynamicmaps="yes" \
  pie="yes" \
  $CONFIG_PARAMS \
  DEBUG="" \
  OPT="$SLKCFLAGS" \
  CCARGS='-DUSE_SASL_AUTH' \
  CCARGS+='-DUSE_CYRUS_SASL -I/usr/include/sasl -DUSE_TLS' \
  CCARGS+='-DHAS_MYSQL -I/usr/include/mysql' \
  CCARGS+='-DHAS_SQLITE' \
  AUXLIBS="-lsasl2 -lssl -lcrypto" \
  AUXLIBS_MYSQL="-L/usr/lib$LIBDIRSUFFIX/mysql -lmysqlclient -lz -lm" \
  AUXLIBS_SQLITE="-L/usr/lib$LIBDIRSUFFIX -lsqlite3 -lpthread"
make
make non-interactive-package \
  install_root=$PKG \
  tempdir=$TMP/$PRGNAM-temp \
  $CONFIG_PARAMS

# Add auxiliary files
install -Dm755 auxiliary/qshape/qshape.pl $PKG/usr/sbin/qshape
install -Dm755 auxiliary/rmail/rmail $PKG/usr/sbin/rmail
for NAME in posttls-finger {smtp,qmqp}-{sink,source}; do
  install -Dm644 man/man1/$NAME.1 $PKG/usr/man/man1/$NAME.1
  install -Dm755 bin/$NAME $PKG/usr/sbin/$NAME
done

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Fix man files for postfix set-permissions
sed 's#^\(\$manpage[^:]*\):#\1.gz:#' -i $PKG/etc/postfix/meta/postfix-files || true

# Add rc.postfix
install -m 0755 -D $CWD/rc.postfix $PKG/etc/rc.d/rc.postfix.new

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -aL $DOCFILES $PKG/usr/doc/$PRGNAM-$VERSION || true
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install 
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Create .new files
for FILE in $NEWFILES; do
  mv $PKG/etc/postfix/$FILE $PKG/etc/postfix/$FILE.new
done

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
