#!/bin/sh
# Slackware build script for postfix (http://www.postfix.org)
#
# Copyright 2006, Alan Hicks, Lizella, GA (by slackbuilds.org)
# Copyright 2008-2015 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#

# IMPORTANT
#
#  Must have a postfix user to run this script
#  Otherwise your permissions will be FUBAR
#
# groupadd -g 200 postfix
# useradd -u 200 -d /dev/null -s /bin/false -g postfix postfix
#
#  Must have a postdrop group to run this script
#  Otherwise your permissions will be FUBAR
#
# groupadd -g 201 postdrop
#

# Exit on most errors or unset variables
set -eu

# Set variables:
CWD=$(pwd)

PRGNAME=${PRGNAME:-postfix}
PKGNAME=$(echo $PRGNAME | tr A-Z a-z)
VERSION=${VERSION:-3.0.0-RC1}
PKGVERSION=$(echo $VERSION | tr - _)
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PRGNAME
DOCS="$PKG/usr/doc/${PKGNAME}"


# Insert document files in this variable
DOCFILES="AAAREADME COMPATIBILITY COPYRIGHT HISTORY IPv6-ChangeLog LICENSE \
  PORTING RELEASE_NOTES* TLS_ACKNOWLEDGEMENTS TLS_CHANGES TLS_LICENSE \
  US_PATENT_6321267 implementation-notes examples README_FILES html"
  
NEWFILES="access aliases canonical dynamicmaps.cf generic header_checks main.cf \
          main.cf.proto master.cf master.cf.proto relocated transport virtual"
  
ARCH=${ARCH:=""} # Set ARCH or leave blank to determine it automatically/
# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
        i?86) ARCH=i686 ;;
        arm*) ARCH=arm ;;
        # Unless $ARCH is already set, use uname -m for all other archs:
        *) ARCH=$( uname -m ) ;;
    esac
fi

# Set compiling FLAGS
case "$ARCH" in
    i486)
        SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
        SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    i686)
        SLKCFLAGS="-O2 -march=i686 -pipe -fomit-frame-pointer"; CHOST="i486"
        SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    x86_64)
        SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
        SLKLDFLAGS=""; LIBDIRSUFFIX="64"
        ;;
    *)
        SLKCFLAGS="-O2"; CHOST=$ARCH
        SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
esac

# Extract source and prepare:
rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAME-$VERSION
tar xvf $CWD/$PRGNAME-$VERSION.tar.gz
cd $PRGNAME-$VERSION

# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Set config parameters (Default values for the other parameters are fine)
CONFIG_PARAMS="shlib_directory=/usr/lib${LIBDIRSUFFIX}/postfix \
manpage_directory=/usr/man \
readme_directory=/usr/doc/postfix/README_FILES \
html_directory=/usr/doc/postfix/html \
mail_owner=postfix \
setgid_group=postdrop"

# Build and install:
make makefiles \
     shared="yes" dynamicmaps="yes" $CONFIG_PARAMS \
     OPT="$SLKCFLAGS" \
     CCARGS='-DUSE_SASL_AUTH' \
     CCARGS+='-DUSE_CYRUS_SASL -I/usr/include/sasl -DUSE_TLS' \
     CCARGS+='-DHAS_MYSQL -I/usr/include/mysql' \
     CCARGS+='-DHAS_SQLITE' \
     AUXLIBS="-L/lib${LIBDIRSUFFIX} -L/usr/lib${LIBDIRSUFFIX} \
           -lsasl2 -lssl -lcrypto" \
     AUXLIBS_MYSQL="-L/usr/lib${LIBDIRSUFFIX}/mysql -lmysqlclient -lz -lm" \
     AUXLIBS_SQLITE="-L/usr/lib${LIBDIRSUFFIX} -lsqlite3 -lpthread"
make 
make non-interactive-package \
     install_root=$PKG \
     tempdir=$TMP/$PRGNAME-temp
  
# Add auxiliary files
install -Dm755 auxiliary/qshape/qshape.pl $PKG/usr/sbin/qshape
install -Dm755 auxiliary/rmail/rmail $PKG/usr/sbin/rmail
for NAME in posttls-finger {smtp,qmqp}-{sink,source}; do
  install -Dm644 man/man1/${NAME}.1 ${PKG}/usr/man/man1/${NAME}.1
  install -Dm755 bin/${NAME} ${PKG}/usr/sbin/${NAME}
done

# Strip binaries:
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

# Compress and link manpages, if any:
if [ -d $PKG/usr/man ]; then
    find $PKG/usr/man -type f -exec gzip -9 {} \;
    for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Fix man files for postfix set-permissions
sed 's#^\(\$manpage[^:]*\):#\1.gz:#' -i $PKG/etc/postfix/postfix-files

# Let the sysadmin decide when to change the compatibility_level (thanks to Gentoo)
sed /^compatibility_level/"s/^/#/" -i ${PKG}/etc/postfix/main.cf

# Add rc.postfix
install -m 0755 -D $CWD/rc.postfix $PKG/etc/rc.d/rc.postfix.new

# Add a documentation directory:
mkdir -p ${DOCS}
cp -a $DOCFILES $DOCS || true

# Add a slackbuild script:
install -Dm644 $CWD/$PKGNAME.SlackBuild $DOCS/$PKGNAME.SlackBuild

# Add slack-desc
install -Dm644 $CWD/slack-desc $PKG/install/slack-desc

# Add a doinst.sh
install -Dm644 $CWD/doinst.sh $PKG/install/doinst.sh

# Create .new files
for FILE in $NEWFILES; do
   mv $PKG/etc/postfix/${FILE} $PKG/etc/postfix/${FILE}.new ;
done

# Add config files in doinst.sh (thanks to SBo)
for NEW in $PKG/etc/postfix/*.new; do
     echo $NEW | sed 's/.*etc/config etc/' >> $PKG/install/doinst.sh
done
echo "postfix set-permissions" >> $PKG/install/doinst.sh

# Create package:
cd $PKG
/sbin/makepkg -l y -c n $CWD/$PRGNAME-$PKGVERSION-$ARCH-${BUILD}${TAG}.txz
