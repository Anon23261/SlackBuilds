#!/bin/sh
# Slackware build script for postfix (http://www.postfix.org)
#
# Copyright 2006, Alan Hicks, Lizella, GA (by slackbuilds.org)
# Copyright 2008-2015 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#

# IMPORTANT
#
#  Must have a postfix user and group  run this script
#
# # groupadd -g 200 postfix
# # useradd -u 200 -d /dev/null -s /bin/false -g postfix postfix
#
#  Must have a postdrop group to run this script
#
# # groupadd -g 201 postdrop
#
if ! grep ^postfix: /etc/passwd 2>&1 > /dev/null; then
    echo "You must have a postfix user and group to run this script"
    exit
elif ! grep ^postdrop: /etc/group 2>&1 > /dev/null; then
    echo "You must have a postdrop group to run this script"
    exit
fi

# Exit on most errors or unset variables
set -eu

# Set variables:
CWD=$(pwd)

PRGNAM=${PRGNAM:-postfix}
PKGNAM=$(echo ${PRGNAM} | tr A-Z a-z)
VERSION=${VERSION:-3.0.2}
PKGVERSION=$(echo ${VERSION} | tr - _)
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=${TMP}/package-${PRGNAM}
PKGDOCDIR="${PKG}/usr/doc/${PKGNAM}"

# Insert document files in this variable.
DOCFILES="AAAREADME COMPATIBILITY COPYRIGHT HISTORY IPv6-ChangeLog LICENSE \
  PORTING RELEASE_NOTES* TLS_ACKNOWLEDGEMENTS TLS_CHANGES TLS_LICENSE \
  US_PATENT_6321267 implementation-notes examples README_FILES html"

# Insert config files in this variable.
NEWFILES="access aliases bounce.cf.default canonical generic header_checks \
main.cf main.cf.default master.cf relocated transport virtual"
  
# Automatically determine the architecture we're building on:
if [ -z ${ARCH:=""} ]; then
    case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
    # Unless ${ARCH} is already set, use uname -m for all other archs:
    *) ARCH=$( uname -m ) ;;
    esac
fi

# Set compiling FLAGS
case "${ARCH}" in
    i[3-5]86)
    SLKCFLAGS="-O2 -march=${ARCH} -mtune=i686"; CHOST="i486"
    SLKLDFLAGS="L/lib -L/usr/lib"; LIBDIRSUFFIX=""
    ;;
    i686)
    SLKCFLAGS="-O2 -march=i686 -fomit-frame-pointer"; CHOST="i486"
    SLKLDFLAGS="-L/lib -L/usr/lib"; LIBDIRSUFFIX=""
    ;;
    x86_64)
    SLKCFLAGS="-O2 -fPIC -fomit-frame-pointer"; CHOST="x86_64"
    SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
    ;;
    *)
    SLKCFLAGS="-O2"; CHOST=${ARCH}
    SLKLDFLAGS="L/lib -L/usr/lib"; LIBDIRSUFFIX=""
    ;;
esac

# Extract source and prepare:
rm -rf ${PKG}
mkdir -p ${TMP} ${PKG}
cd ${TMP}
rm -rf ${PRGNAM}-${VERSION}
tar xvf ${CWD}/${PRGNAM}-${VERSION}.tar.gz
cd ${PRGNAM}-${VERSION}

# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Set config parameters (Default values for the other parameters are fine)
CONFIG_PARAMS="shlib_directory=/usr/lib${LIBDIRSUFFIX}/postfix \
manpage_directory=/usr/man \
readme_directory=/usr/doc/postfix/README_FILES \
meta_directory=/etc/postfix/meta \
sample_directory=/etc/postfix/sample \
html_directory=/usr/doc/postfix/html \
mail_owner=postfix \
setgid_group=postdrop"

# Build and install:
make makefiles \
    shared="yes" dynamicmaps="yes" $CONFIG_PARAMS \
    DEBUG="" \
    OPT="${SLKCFLAGS}" \
    CCARGS='-DUSE_SASL_AUTH' \
    CCARGS+='-DUSE_CYRUS_SASL -I/usr/include/sasl -DUSE_TLS' \
    CCARGS+='-DHAS_MYSQL -I/usr/include/mysql' \
    CCARGS+='-DHAS_SQLITE' \
    AUXLIBS="${SLKLDFLAGS} -lsasl2 -lssl -lcrypto" \
    AUXLIBS_MYSQL="-L/usr/lib${LIBDIRSUFFIX}/mysql -lmysqlclient -lz -lm" \
    AUXLIBS_SQLITE="-L/usr/lib${LIBDIRSUFFIX} -lsqlite3 -lpthread"
make
make non-interactive-package \
    install_root=${PKG} \
    tempdir=${TMP}/${PRGNAM}-temp \
    $CONFIG_PARAMS

# Add auxiliary files
install -Dm755 auxiliary/qshape/qshape.pl ${PKG}/usr/sbin/qshape
install -Dm755 auxiliary/rmail/rmail ${PKG}/usr/sbin/rmail
for NAME in posttls-finger {smtp,qmqp}-{sink,source}; do
  install -Dm644 man/man1/${NAME}.1 ${PKG}/usr/man/man1/${NAME}.1
  install -Dm755 bin/${NAME} ${PKG}/usr/sbin/${NAME}
done

# Strip binaries:
find ${PKG} | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find ${PKG} | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/man ]; then
    find ${PKG}/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
    for i in $( find ${PKG}/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Fix man files for postfix set-permissions
sed 's#^\(\$manpage[^:]*\):#\1.gz:#' -i ${PKG}/etc/postfix/meta/postfix-files || true

# Add rc.postfix
install -m 0755 -D ${CWD}/rc.postfix ${PKG}/etc/rc.d/rc.postfix.new

# Add a documentation directory:
mkdir -p ${PKGDOCDIR}
cp -aL ${DOCFILES} ${PKGDOCDIR} || true

# Add a slackbuild script:
install -Dm644 ${CWD}/${PKGNAM}.SlackBuild ${PKGDOCDIR}/${PKGNAM}.SlackBuild

# Add slack-desc
install -Dm644 ${CWD}/slack-desc ${PKG}/install/slack-desc

# Add a doinst.sh
install -Dm644 ${CWD}/doinst.sh ${PKG}/install/doinst.sh

# Create .new files
for FILE in $NEWFILES; do
    mv ${PKG}/etc/postfix/${FILE} ${PKG}/etc/postfix/${FILE}.new
done

# Create package:
cd ${PKG}
/sbin/makepkg -l y -c n ${CWD}/${PRGNAM}-${PKGVERSION}-${ARCH}-${BUILD}${TAG}.txz
