#!/bin/bash
#
# Init file for the NTOP network monitor
#
#
# description: NTOP Network Monitor
#
# processname: ntop
# config: /etc/ntop.conf
# pidfile: /var/lib/ntop/ntop.pid
#
# READ FIRST
# Before you run this script make sure you run:
# `ntop -u ntop -A`  to assign a admin password
# for the admin web interface

set -e

RETVAL=0
NTOPLOG=/var/log/ntop
DATE=$(date +%a\ %b\ %d\ %T\ %Y)
RETVAL=0

# Sanity Checking
if [  ! -r "/var/lib/ntop/ntop_pw.db" ]; then
    echo "Can not read ntop password database. Exiting..."
    exit 1
fi


start() {
    echo -n $"Starting ntop: "
    if [ -r /var/run/ntop.pid ]; then
        if $(! /sbin/pidof ntop > /dev/null 2>&1 ) ; then
            echo "Removing an old /var/run/ntop.pid"
            rm -f /var/run/ntop.pid
        fi
    fi
    /usr/bin/ntop --w3c -u ntop -d >> $NTOPLOG 2>&1
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        touch /var/lock/ntop
        sleep 2
        echo "Done"
    else
        echo "Failed"
    fi
    return $RETVAL
}

stop() {
    echo -n $"Stopping ntop: "
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then 
        if [ -r /var/run/ntop.pid ]; then
            killall ntop
            rm -f /var/run/ntop.pid
            echo "$DATE  EXIT: ntop stopped by user: $USER (UID: $EUID)" >> $NTOPLOG
            echo "Done"
        else
    	    echo "Failed"    
        fi
	rm -f /var/lock/ntop
    fi
    return $RETVAL
}

restart() {
	stop
	sleep 2
	start
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	restart
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	RETVAL=1
esac

exit $RETVAL


