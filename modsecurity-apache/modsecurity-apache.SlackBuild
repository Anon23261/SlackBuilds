#!/bin/sh
#
# Slackware build script for ModSecurity Apache module
#
# Copyright 2015 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Latest version of this SlackBuild at http://slackers.it/repository

# Exit on most errors
set -eu

# Set variables:
CWD=$(pwd)

PRGNAME=${PRGNAME:-modsecurity}
PKGNAME=${PKGNAME:-modsecurity-apache}
VERSION=${VERSION:-2.8.0}
PKGVERSION=$(echo $VERSION | tr - _)
CRSVERSION=${CRSVERSION:-2.2.9}
BUILD=${BUILD:-1}
ARCH=${ARCH:=""} # Set ARCH or leave blank to determine it automatically
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAME
DOCS="$PKG/usr/doc/$PKGNAME-$PKGVERSION"

# Insert document files in this variable
DOCFILES="CHANGES LICENSE NOTICE README* *.txt"

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
	i?86) ARCH=i686 ;;
	arm*) ARCH=arm ;;
        # Unless $ARCH is already set, use uname -m for all other archs:
        *) ARCH=$( uname -m ) ;;
    esac
fi

# Set compiling FLAGS
case "$ARCH" in
    i[3-5]86)
	SLKCFLAGS="-O2 -march=${ARCH} -mtune=i686"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    i686)
	SLKCFLAGS="-O2 -march=i686 -pipe -fomit-frame-pointer"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    x86_64)
	SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
	SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
        ;;
    *)
	SLKCFLAGS="-O2"; CHOST=$ARCH
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
	;;
esac

# Extract source and prepare:
rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAME-$VERSION
tar xvf $CWD/$PRGNAME-$VERSION.tar.gz

cd $PRGNAME-$VERSION
tar xvf $CWD/${CRSVERSION}.tar.gz

# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Configure
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --docdir=/usr/doc/${PKGNAME}-${PKGVERSION} \
  --enable-static=no \
  --enable-shared=yes \
  --enable-pcre-study \
  --enable-pcre-jit \
  --enable-htaccess-config \
  --enable-performance-measurement \
  --enable-alp2 \
  --host=$CHOST-slackware-linux \
  --build=$CHOST-slackware-linux

# Build and install:
make
make DESTDIR=$PKG install-strip
rm $PKG/usr/lib/*.so
if ! [ "$(ls -A $PKG/usr/lib)" ]; then
  rmdir $PKG/usr/lib/
fi

# Install Core Rule Set
cd owasp-modsecurity-crs-${CRSVERSION}
  mkdir -p ${PKG}/etc/httpd/conf/crs/{base_rules,optional_rules,activated_rules,experimental_rules}
  install -m644 modsecurity_crs_10_setup.conf.example ${PKG}/etc/httpd/conf/crs/modsecurity_crs_10_setup.conf.new
  install -m644 base_rules/* ${PKG}/etc/httpd/conf/crs/base_rules
  install -m644 experimental_rules/* ${PKG}/etc/httpd/conf/crs/experimental_rules
  install -m644 optional_rules/* ${PKG}/etc/httpd/conf/crs/optional_rules
cd -

# Install config files
install -Dm644 modsecurity.conf-recommended $PKG/etc/httpd/extra/modsecurity-recommended.conf.new
install -Dm644 unicode.mapping $PKG/etc/httpd/extra/unicode.mapping

# Strip binaries:
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

# Add a documentation directory:
mkdir -p ${DOCS}
cp -a $DOCFILES $DOCS || true
install -Dm644 owasp-modsecurity-crs-${CRSVERSION}/INSTALL $DOCS/crs.txt
install -Dm644 mlogc/INSTALL $DOCS/mlogc.txt
install -Dm644 mlogc/mlogc-default.conf $DOCS/mlogc-default.conf

# Add a slackbuild script:
install -Dm644 $CWD/$PKGNAME.SlackBuild $DOCS/$PKGNAME.SlackBuild

# Add slack-desc
install -Dm644 $CWD/slack-desc $PKG/install/slack-desc

# Add a doinst.sh
sed "s/%LIBSUFFIX%/$LIBDIRSUFFIX/" $CWD/doinst.sh > $PKG/install/doinst.sh

# Create package:
cd $PKG
/sbin/makepkg -l y -c n $CWD/$PKGNAME-$PKGVERSION-$ARCH-${BUILD}${TAG}.txz
